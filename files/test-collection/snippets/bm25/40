Snippets for the query:  Q40
************************
Total Hits:  176
************************

************************
Document:  CACM-2596.html
************************


a weighted buddy method for dynamic storage allocation

an extension of the buddy method, called the weighted
buddy method, for dynamic storage allocation 
is presented.  the weighted buddy method allows block
sizes of 2^k and 3(2^k), whereas the original buddy 
method allowed only block sizes of 2^k. this extension
is achieved at an additional cost of only two 
bits per block.  simulation results are presented which
compare this method with the buddy method.  these 
results indicate that for a uniform request distribution,
the buddy system has less total memory fragmentation 
than the weighted buddy algorithm.  however, the total
fragmentation is smaller for the weighted buddy 
method when the requests are for exponentially distributed block sizes.

cacm october, 1974

shen, k. k.
peterson, j. l.

weighted buddy algorithm, buddy systems,
memory allocation, 
************************

************************
Document:  CACM-2216.html
************************


on the probability distribution of the values of binary trees

an integral equation is derived for the generating
function for binary tree values, the values 
reflecting sorting effort. the analysis does not assume
uniformly distributed branching ratios, and 
therefore is applicable to a family of sorting algorithms
discussed by hoare, 
************************

************************
Document:  CACM-1780.html
************************
************************
Document:  CACM-2926.html
************************
************************
Document:  CACM-2519.html
************************


on the problem of communicating complex information

the nature of the difficulty involved in communicating
mathematical results between scientists 
using a computer based information retrieval system
is examined.  the problem is analyzed in terms of 
psychological and information-processing processes, and
what turns out 
************************
, and
what turns out to be a vicious circle of effects 
is described.  these include ways of augmenting written
natural language by various notational and linguistic 
devices, the exhibition of the structure inherent in the
information we are communicating, and a sophisticated 
************************

************************
Document:  CACM-3059.html
************************


models for parallel processing within programs:

************************
 processing within programs:
application to cpu:i/o and i/o:i/o overlap

approximate queueing models for internal parallel
processing by individual 
************************

processing by individual programs in a multiprogrammed 
system are developed in this paper.  the solution technique
is developed by network decomposition.  the 
models are formulated in terms of cpu:i/o and i/o:i/o overlap
and applied to the analysis of these problems. 
 the percentage performance improvement from cpu:i/o
overlap is found to be greatest for systems which 
are in approximate 
************************
 which 
are in approximate cpu:i/o utilization balance and for
low degrees of multiprogramming.  the percentage 
improvement from i/o:i/o overlap is found to be greatest
for systemtems in which the i/o system is more 
utilized than the cpu.

cacm october, 1978

towsley, d.
chandy, k.
browne, j.

multiprogramming, parallel processing, queueing
network models, multiprocessing of 
************************

************************
Document:  CACM-3084.html
************************
************************
Document:  CACM-3124.html
************************


recursive data structures in apl

a mathematical study of three approaches for defining nested
arrays in apl is presented.  theorems exhibiting the relationships
between the definitional systems are given and illustrated through graph
representations.  one of the approaches is used to define an
apl array to be a recursive data structure equivalent to a tree structure
in which all data is stored at the leaves as homogeneous
arrays of numbers and characters.  an extension of apl is proposed that
includes new primitive functions 
************************
s new primitive functions to manipulate the nesting
level of arrays and new operators to assist in the
construction of data-driven algorithms.  

cacm february, 1979

gull,w.
jenkins, m.

nested arrays, apl arrays, recursive data structures,
trees, data-driven algorithms, theory of arrays

4.22 5.29

************************

************************
Document:  CACM-2816.html
************************
************************
Document:  CACM-3156.html
************************


computing connected components on parallel computers

we present a parallel algorithm which uses n2 processors to find the connected
components of an undirected graph with n vertices in time o(log2n).  an
o(log2n) time bound also can be achieved using only n$n/$log2n)) processors.
the algorithm can be used to find the transitive closure
of a symmetric boolean matrix.  we assume that the processors have
access to a common memory.  simultaneous access to the same location
is permitted for fetch instructions but not for store instructions.

cacm august, 1979

hirschberg, d.
chandra, a.
sarwate, d.

graph theory, parallel processing, algorithms,
transitive closure, 
************************

************************
Document:  CACM-2158.html
************************


a stopping criterion for the newton-raphson method
in implicit multistep integration algorithms 
for nonlinear systems of ordinary differential 
************************

************************
Document:  CACM-1877.html
************************


prevention of system deadlocks

a well-known problem in the design of operating
systems is the selection of a resource allocation 
policy that will prevent 
************************
 
policy that will prevent deadlock.  deadlock is the
situation in which resources have been allocated 
to various tasks in such a way that none of the tasks
can continue.  the various published solutions 
have been somewhat restrictive: either they do not handle
the problem in sufficient generality or they 
suggest policies which will on occasion refuse a request
which could have been safely granted.  algorithms 
are presented which examine a request in the light of
the current allocation of resources and determine 
************************
 of resources and determine 
whether or not the granting of the request will introduce
the possibility of a deadlock.  proofs given 
in the appendixes show that the conditions imposed by
the algorithms are both necessary and sufficient 
to prevent deadlock.  the algorithms have been successfully used in the the system.	

cacm july, 1969

habermann, a. n.

multiprogramming, time-sharing, scheduling, resource allocation

3.72 4.32 6.20

ca690703 
************************

************************
Document:  CACM-3128.html
************************


synchronization with eventcounts and sequencers

synchronization of concurrent processes requires controlling the relative 
ordering of events in the processes.
a new synchronization mechanism is proposed, using 
abstract objects called eventcounts and sequencers, that allows processes
to control the ordering of events directly, rather than using mutual
exclusion to protect manipulations of shared variables that control
ordering of events.  direct control of ordering seems to simplify
correctness arguments and also simplifies implementation in distributed
systems.  the mechanism is defined 
************************
.  the mechanism is defined formally, and then several
examples of its use are given.  the relationship of the mechanism
to protection mechanisms in the system is explained; in particular,
eventcounts are shown to be applicable to situations where confinement
of information matters.  an implementation of eventcount
s and sequencers in a system with shared memory is described.

cacm february, 1979

reed, d.
kanodia, r.

process synchronization, interprocess communication, distributed
systems, security models, mutual 
************************

************************
Document:  CACM-0052.html
************************
************************
Document:  CACM-2342.html
************************


interference between communicating parallel processes

various kinds of interference 
************************


various kinds of interference between communicating
parallel processes have been examined by 
************************
 have been examined by 
dijkstra, knuth, and others.  solutions have been given
for the mutual exclusion problem and associated 
subproblems, in the form of parallel programs, and informal
proofs of correctness have been given for 
these solutions.  in this paper a system of parallel
processes is regarded as a machine 
************************
 is regarded as a machine which proceeds 
from one state s (i.e. a collection of pertinent data
values and process configurations) to a next state 
s' in accordance with a transition rule s --> s'.  a
set of such rules yields sequences of states, which 
dictate the system's behavior.  the mutual exclusion problem
and the associated subproblems are formulated 
as questions of inclusion between sets of states, or
of the existence of certain sequences.  a mechanical 
proof procedure is shown, which will either verify (prove
the correctness of ) or discredit (prove the 
incorrectness of) an attempted solution, with respect
to any of the interference properties.  it is shown 
how to calculate transition rules from the "partial
rules" by which the individual processes operate. 
 the formation of partial rules and the calculation of
transition rules are both applicable to hardware 
processes as well as to software processes, and
symmetry between processes is not required.

cacm june, 1972

gilbert, p.
chandler, w. j.

concurrent programming control, cooperating processes,
formal programs, interference, mutual exclusion, 
operating systems, parallel processes

4.0 4.10 
************************

************************
Document:  CACM-2522.html
************************


the design, implementation, and evaluation of a working set dispatcher

the behavior of a computer system is largely
dependent upon the algorithms employed to allocate 
the system resources to the processes competing 
************************
s to the processes competing for them.
 recent research in time-sharing paging systems 
has developed the working 
************************
 
has developed the working set model for program behavior,
and are source allocation strategy based on 
this model has been proposed.  two implementations
along these principles have been reported, but it 
seems that in neither case have further results been
announced.  this report discusses the design and 
implementation of a dispatcher based on the working set
principle, presents data to permit analysis of 
its behavior, and indicates future directions of research
on methods of controlling a computer system.

cacm april, 1973

rodriguez-rosell, j.
dupuy, j. p.

working set, dispatcher, scheduler, time-sharing
systems, resource allocation, software 
************************
 allocation, software evaluation, 
operating systems, supervisory systems

************************

************************
Document:  CACM-2578.html
************************


self-stabilizing systems in spite of distributed control

cacm november, 
************************
 control

cacm november, 1974

dijkstra, e. w.

multiprocessing, networks, self-stabilization, synchronization,
mutual exclusion, robustness, sharing, 
error recovery, distributed control, harmonious 
************************

************************
Document:  CACM-1910.html
************************


an algorithm for solving a special class
of tridiagonal systems of linear equations

************************
 of linear equations

an algorithm is presented for solving a system
of linear equation bu=k where b is tridiagonal 
and of a special form.  it is shown that this algorithm
is almost twice as fast as the gaussian elimination 
method usually suggested for solving such systems. 
in addition, explicit 
************************

************************
Document:  CACM-3180.html
************************


costs of the current u. payments system

neither the banking industry nor
public policy makers have good information on the comparative costs
of alternative payment systems such as cash, checks, credit cards,
and eft transactions.  as a result, eft systems 
************************

************************
Document:  CACM-3072.html
************************


feedback coupled resource allocation policies
in the multiprogramming- 
************************
 policies
in the multiprogramming- multiprocessor computer 
system

model studies of some integrated, feedback-driven
scheduling systems for multiprogrammed- multiprocessor 
computer systems are presented.  the basic control variables
used are the data-flow rates for the processes 
executing on the cpu.  the model systems feature simulated
continuous-flow and preempt-resume scheduling 
of input-output activity.  attention is given to the
amount of memory resource required for effective 
************************

************************
Document:  CACM-1745.html
************************


a position paper on computing and communications

the effective operation of free enterprise in
creating the envisioned information service industry 
is dependent upon three accomplishments: (1) the restructuring
of our information processing industry 
so that a clear division of costs is made among computing,
communications, and the development of information 
services; (2) the wide use of multiaccess system concepts
so that information services may share in the 
use of computer installations and so that the cost of their
construction is reasonable; and (3) the development 
of public, message-switched communications services so
that adequate provisions are made for information 
security.

cacm may, 1968

dennis, j. b.

information networks, information systems, computing
and free enterprise, computing economics, 
computer installation management, government regulation,
communications services, distributed data base, 
program 
************************

************************
Document:  CACM-2890.html
************************


on quadratic adaptive routing algorithms

two analytic models of a store-and-forward 
************************
 of a store-and-forward communications
network are constructed, one to find 
the optimal message routing and the other to illustrate
the equilibrium (stationary state) maintained 
by an adaptive routing algorithm.  these models show that
adaptive routing does not satisfy the necessary 
conditions for an optimal routing,  adaptive routing tends
to overuse the direct path and underuse alternate 
routes because it does not consider the impact of its
current routing decision on the future state of 
the network.  the form of the optimality conditions suggests
that a modification of the adaptive algorithm 
will result in optimality.  the modification requires
the substitution of a quadratic bias term instead 
of a linear one in the routing table maintained at each
network node.  simulation results are presented 
which confirm the theoretical analysis for a simple network.

cacm january, 1976

agnew, c. e.

routing algorithms, adaptive routing, quadratic routing,
alternate routing, store-and-forward network, 
distributed network, computer network, 
************************

************************
Document:  CACM-2424.html
************************


dynamic verification of operating system decisions

dynamic verification of a decision implies
that every time the decision is made there is a 
consistency check performed on the decision using independent
hardware and software.  the dynamic verification 
of operating system decisions is used on the prime system
being designed and constructed at the university 
of california, berkeley.  prime is an experimental time-sharing
which is to have the properties of continuous 
availability, data privacy, and cost effectiveness.
 the technique of dynamic verification allows the 
construction of an operating system which does not make certain
decisions improperly even in the presence 
of a single hardware or software fault.  furthermore,
multiple faults lead to unreliable operation only 
if the faults happen to reinforce each other.  on prime,
dynamic verification is used to ensure that 
one user's information cannot become available to another
user gratuitously even in the presence of a 
single hardware or software fault.the amount of additional
hardware and software required for dynamic 
verification can be modest.

cacm november, 1973

fabry, r. s.

operating systems, data security, fault tolerance,
software reliability, 
************************
,
software reliability, data privacy, program 
verification, modular computer systems

4.32

ca731102 jb january 
************************

************************
Document:  CACM-3137.html
************************


a methodology for the design of distributed information systems

a macro model of a 
************************

************************
Document:  CACM-2482.html
************************


mixed solutions for the deadlock problem

mixtures of detection, avoidance, and prevention
provide more effective and practical solutions 
to the deadlock problem than any one of these alone.  the
individual techniques can be tailored for subproblems 
of resource allocation and still operate together 
************************
 and still operate together to
prevent deadlocks.  this paper presents a method, 
based on the concept of the hierarchical operating
system, for constructing appropriate mixtures and 
suggests appropriate subsystems for the most frequently
occurring resource allocation problems

cacm july, 
************************
 problems

cacm july, 1973

howard, j. h. jr.

deadlocks, resource allocation, operating systems,

************************

************************
Document:  CACM-0322.html
************************


operational compatibility of systems-conventions

the general standards committee of the share
organization has devoted considerable effort to 
the problem of operating a computer efficiently in
view of the growing number of programming systems 
available.  each of these programming systems has been
coded to utilize a fixed set of hardware components 
without recognizing the fact that others may be occupying
a storage medium required by the first.  these 
incompatibilities are currently resolved by manually setting
up the computer for each system as required. 
 the following set of conventions is being considered
to minimize computer set-up time.  they are of 
sufficiently broad interest that we feel other computer

************************

************************
Document:  CACM-3076.html
************************


value conflicts and social choice in electronic
funds transfer system developments

during the last few years, computer-based
systems which automate the transfer and recording 
of debits and credits have begun to be implemented on
a large scale.  these systems promise both financial 
benefits for the institutions that use them and potential
conveniences to their customers.  however, 
they also raise significant social, legal, and technical
questions that must be resolved if full scale 
systems for electronic funds transfer (eft) are not
to cause more problems for the larger public than 
they solve.  this paper examines the incentives for eft
developments and the social problems they raise 
in the context of conflicts between five different value
positions that are often implicit in analyses 
of proposed eft arrangements.  these conflicts reflect
the relative importance of certain problems for 
specific groups.  the value positions implicit in eft proposals
help to organize analyses of market arrangements, 
system reliability, and privacy of transactions.  these
topics are analyzed 
************************
.  these
topics are analyzed in this article and related 
to the value positions held by concerned parties.  last,
the ways in which the public can learn about 
the social qualities of different eft arrangements and
the pace of eft developments are both discussed 
in the context of social choice. 

cacm august, 1978

kling, r.

electronic funds transfer systems, social impacts
of computing, privacy, social choice, computer 
networks, network reliability, security, social values

************************

************************
Document:  CACM-3088.html
************************


general equations for idealized cpu-i/o overlap configurations

general equations are derived for estimating
the maximum possible utilization of main storage 
partitions, cpu and i/o devices under different conditions
in an idealized cpu-i/o overlap model of multiprogrammed 
computer systems.  the equations are directly applicable
to any configuration consisting  of sets of 
identical cpu's i/o processors, main storage partitions
and user tasks.  examples are provided to illustrate 
the use of the equations to compute effective processing
time per record and expected timesharing response 
time under both balanced and unbalanced resource utilization conditions. 

cacm june, 1978

teory, t.

blocking, buffering, input/output, overlap, performance,
resource allocation, throughput, timesharing

************************

************************
Document:  CACM-2931.html
************************


logic and programming languages

logic has been long in terested in whether answers
to certain questions are computable in principle, 
since the outcome puts bounds on the possibilities of
formalization.  more recently, precise comparisons 
in the efficiency of decision methods have become available
through the developments in complexity theory. 
 these, however, are 
************************
. 
 these, however, are applications to logic, and a big question
is whether methods of logic have significance 
in the other direction for the more applied parts of
computability theory.  programming languages offer 
an obvious opportunity as their syntactic formalization
is well advanced; however, the semantical theory 
can hardly be said to be complete.  though we have
many examples, we have still to give wide-ranging 
mathematical answers to these queries:  what is a machine?
 what is a computable process?  how (or how 
well) does a machine simulate a process?  programs naturally
enter in giving descriptions of processes. 
 the definition of 
************************
. 
 the definition of the precise meaning of a program
then requires us to explain what are the objects 
of computation (in a way, the statics of the problem)
and how they are to be transformed (the dynamics). 
 so far the theories of automata and of nets, though
most in teresting for dynamics, have formalized only 
a portion of the field, and there has been perhaps too
much concentration on the finite-state and algebraic 
aspects.  it would seem that the understanding of higher-level
program features involves us with infinite 
objects and forces us to pass through several levels
of explanation to go from the conceptual ideas to 
the final simulation on a real machine.  these levels
can be made mathematically exact if we can find 
the right abstractions to represent the necessary structures.
 the experience of many independent workers 
with the method of data types as lattices (or partial
orderings) under an information content ordering, 
and with their continuous mappings, has demonstrated the
flexibility of this approach in providing definitions 
and proofs, which are clean and without undue dependence
on implementations.  nevertheless much remains 
to be done in showing how abstract conceptualizations
can (or cannot) be actualized before we can say 
we have a unified theory.

cacm september, 1977

scott, d. s.

logic, programming languages, automata, denotational
semantics, a-calculus models, computability, 
partial 
************************

************************
Document:  CACM-1924.html
************************


organizing matrices and matrix operations for paged memory systems

matrix representations and operations are examined
for the purpose of minimizing the page faulting 
occurring in a paged 
************************
ing 
occurring in a paged memory system.  it is shown that
carefully designed matrix algorithms can lead to 
enormous savings in the number of page faults occurring
when only 
************************
s occurring
when only a small part of the total matrix can 
be in main memory at one time.  examination of addition,
multiplication, and inversion algorithms shows 
that a partitioned matrix representation (i.e. one submatrix
or partition per page) in most cases induced 
fewer page faults than a row-by-row representation.

************************
s than a row-by-row representation.
 the number of page-pulls required by these matrix 
manipulation algorithms is also studied as a function
of the number of pages of main memory available 
to the algorithm.

cacm march, 1969

mckellar, a. c.
coffman jr., e. g.

matrix algorithms, array processing, paging algorithms,
paged memory systems, virtual memory systems, 
array storage allocation, storage allocation

************************

************************
Document:  CACM-2720.html
************************


optimal balancing of i/o requests to disks

determining a policy for efficient allocation
and utilization of a set of disk drives with 
differing operational characteristics is examined using
analytical techniques.  using standard queueing 
theory, each disk drive is 
************************
, each disk drive is characterized by a queueing
model with service time of a disk drive represented 
by the probability density function of the sum of two
uniform distributions. total response time of the 
set of disk models is then minimized under varying
load conditions. the results indicate that faster 
devices should have higher utilization factors and that
the number of different device types utilized 
tends to decrease with decreasing load.  specific examples
using 2314 and 3330 combinations are examined.

cacm september, 1975

piepmeier, w. f.

disk drive hierarchies, system evaluation, input/output,
modeling, queueing theory, balancing, 
scheduling, 
************************

************************
Document:  CACM-2020.html
************************


the allocation of computer resources-is pricing the answer?

************************
s-is pricing the answer?

the widespread use of complex third generation computing systems has led to a 
much broader concern about the means by which the resources of these systems
are 
************************
s of these systems
are allocated among the user community.  one means that is suggested
more and more frequently is a pricing procedure.  in this
paper the manner in which one would like to allocate computing resources
is considered, and 
************************
s
is considered, and then the extent to which a pricing mechanism fits this mold 
is discussed.  inasmuch as pricing must serve as a rationing mechanism at 
times, consideration is given to the means by which prices can be adjusted 
flexibly in order to make a dynamic allocation of resources.  consideration is 
************************
s.  consideration is 
also given to the means by which users can be insulated from the harmful 
effects of frequent price fluctuations.  although the subject of pricing has
been given a lot of attention recently, a number of misconceptions
persist about its purpose and its operation.  an attempt is made to clarify 
some of these misunderstandings and to highlight the advantages and 
disadvantages and to highlight the advantages and disadvantages of pricing. two
illustrative pricing systems are also discussed in order to demonstrate the 
applicability of pricing in quite different environments.

cacm august, 1970

nielsen, n. r.

allocation mechanisms, charging, computer pricing,
costing, flexible pricing, pricing, priority charges,
resource allocation, user motivation

************************

************************
Document:  CACM-2697.html
************************


a fast method for solving a class of tridiagonal linear systems

the solution of linear systems having real, symmetric,
diagonally dominant,tridiagonal coefficient 
matrices with constant diagonals is considered.  it is
proved that the diagonals of the lu decomposition 
converges when floating-point precision.  it is also
proved that the computed lu decomposition converges 
when floating-point arithmetic is used and that the limits
of the lu diagonals using floating point are 
roughly within machine precision of the limits using
real arithmetic.  this fact is exploited to reduce 
the number of floating-point operations required to
solve a linear system from 8n-7 to 5n+2k-3, where 
k is much less than n, the order of the matrix.  if the
elements of the subdiagonals and superdiagonals 
are 1, then only 4n+2k-3 operations are needed.  the
entire lu decomposition takes k words of storage, 
and considerable savings in array subscripting are achieved.
 upper and lower bounds on k are obtained 
in 
************************

************************
Document:  CACM-2535.html
************************


the effects of multiplexing on a computer-communications system

a study is made of the way in which asynchronous
time division multiplexing changes the stochastic 
nature of the arrival process from a user to the computer
and, consequently, affects the performance 
of a time-shared computer-communications system.  it is
concluded that while, for certain values of system 
parameters, there is noticeable improvement in the
performance of the computer (model), in the sense 
that time-shared scheduling delays are reduced, these
improvements are offset by the transmission delays 
imposed by multiplexing so that there may be little or
no change in the computer-communications system 
performance.  analytical and simulation results are
based on the model of the computer-communications 
system being an m/d/1 queue (the multiplexor) in tandem
with a single exponential server (the computer). 
 analytical results include a general description of the
output process of an m/d/1 queue and the conditions 
under which this output process is approximately poisson.

cacm march, 1973

pack, c. d.

computer communications, time-sharing, multiplexing,
scheduling algorithms, operating systems

3.80 3.81 6.20

ca730304 
************************

************************
Document:  CACM-2849.html
************************


ethernet: distributed packet switching for local computer networks

ethernet is a branching broadcast communication
system for carrying digital data packets among 
locally distributed computing stations. the packet
transport 
************************
s. the packet
transport mechanism provided by ethernet has been 
used to build systems which can be viewed as either local
computer networks or loosely coupled multiprocessors. 
 an ethernet's shared communication facility, its ether,
is a passive broadcast medium with no central 
control.  coordination of access to the ether for packet
broadcasts is distributed among the contending 
transmitting stations using controlled statistical 
************************
s using controlled statistical arbitration.
 switching of packets to their destinations 
on the ether is distributed among the receiving stations
using packet address 
************************
s
using packet address recognition.  design principles 
and implementation are described, based on experience
with an operating ethernet of 100 nodes along a 
kilometer of coaxial cable.  a model for estimating performance
under heavy loads and a packet protocol 
for error controlled communication are included for completeness.

cacm july, 1976

metcalfe, r. m.
boggs, d. r.

computer networks, packet switching, multiprocessing,
distributed control, distributed 
************************

************************
Document:  CACM-2499.html
************************


efficient multiprogramming resource allocation and accounting

although 
************************
 and accounting

although sometimes thought of as only a component
of time-sharing operation, multiprogramming 
can involve broader questions of resource allocation,
since fairness is not 
************************
,
since fairness is not required to meet a response 
criterion.  in a multiprogrammed system, it may serve
maximal resource use to be unfair, for example 
by holding an input/output channel idle for a program
while it completes a small amount of processor 
usage, enabling further use of the channel.  several
applications of this principle are given, and it 
is suggested that a multiprogramming executive might
dynamically adjust its allocation algorithms to 
gain efficiency. 
************************
 to 
gain efficiency.  allocation of resources is closely connected

************************
s is closely connected
to accounting for those resources, raising 
the problems of repeatability, minimal uncharged overhead,
and relative weighting of charges for dependent 
resources.  since weightings may depend on allocation
algorithms, these are not arbitrary 
************************
, these are not arbitrary accounting 
parameters.  often the only repeatable accounting is
one which omits an extensive overhead will be paid, 
and should multiprogramming prove efficient, overcharges
will result.  multiprogramming turns on allocation 
of the memory resource essential to control 
************************
 essential to control of other
resources.  the general suggestions for allocation 
and accounting are 
************************
 
and accounting are applied to this question, and some
details provided for the case of a monitor which 
controls a virtual-memory machine.

cacm june, 1973

hamlet, r. g.

monitor, executive, multiprogramming, efficiency,
resource allocation, resource accounting

************************

************************
Document:  CACM-3086.html
************************


on the complexity of computing the measure of u[ai, bi]

the decision tree complexity of computing the
measure of the union of n (possibly overlapping) 
intervals is shown to be  (n log n), even if comparisons
between linear functions of the interval endpoints 
are allowed.  the existence of an   (n log n) lower bound
to determine whether any two of n real numbers 
are within   of each other is also demonstrated.  these
problems provide an excellent opportunity for 
discussing the effects of the computational model on
the ease of analysis and on the results produced.

cacm july, 1978

fredman, m.
weide, b.

analysis of algorithms, combinatorial problems,
computational complexity, computational models, 
decision tree programs, lower bounds

5.25 5.26 5.30 5.39

************************

************************
Document:  CACM-2862.html
************************


analysis of the pff replacement algorithm via a semi-markov model

an analytical model is presented to estimate
the performance of the page fault frequency (pff) 
replacement algorithm.  in this model, program behavior
is represented by the lru stack distance model 
and the pff replacement algorithm is represented by a semi-markov
model.  using these models, such parameters 
as 
************************
, such parameters 
as the inter-page-fault interval distribution, the
probability of the number of distinct pages being 
referenced during an inter-page-fault interval, etc. are
able to be analytically determined.  using these 
models to evaluate these parameter 
************************

************************
Document:  CACM-2080.html
************************


the nucleus of a multiprogramming system

this paper describes the philosophy and structure of a multiprogramming system 
that can be extended with a hierarchy of operating systems to suit diverse 
requirements of program scheduling and resource allocation.  the system
nucleus 
************************
.  the system
nucleus simulates an environment in which program execution and input/output
are handled uniformly as parallel, cooperating process
es.  a fundamental set of primitives allows the dynamic creation and control
of a hierarchy of processes as well as the communication among them.

cacm april, 1970

hansen, p. b.

multiprogramming, operating systems, parallel processes, 
************************
, parallel processes, process concept,
process 
************************

************************
Document:  CACM-1811.html
************************


a case study in programming for parallel-processors

an affirmative partial answer is provided to
the question of whether it is possible to program 
parallel-processor computing systems to efficiently decrease

************************
 to efficiently decrease
execution time for useful problems.  parallel-processor 
systems are multiprocessor systems 
************************
 are multiprocessor systems in which several of
the processors can simultaneously execute separate 
tasks of a single job, thus cooperating to decrease
the solution time of a computational problem. the 
processors have independent instruction counters, meaning
that each processor executes its own task program 
relatively independently of the other processors.  communication
between cooperating processors is by 
means of data in storage shared by all processors.  a
program for the determination of the distribution 
of current in an electrical network was written for a
parallel-processor computing 
************************

************************
Document:  CACM-2318.html
************************


the role of computer system models in performance evaluation

models constitute a useful means of investigating
computer system performance.  this paper 
examines the interrelationships between models and other
methods for evaluating the performance of computer 
systems and establishes circumstances 
************************

************************
Document:  CACM-2895.html
************************


a language for formal problem specification

a language for specifying the in tended behavior
of communicating parallel processes is described. 
 the 
************************
 is described. 
 the specifications are constrain ts on the order in which
events of a computation can occur.  the language 
is used to write specifications of the readers/writers
problem and the writer priority of the second 
readers/writers problem.

cacm december, 1977 

greif, i.

formal specifications,program correctness, parallel
processing, synchronization, readers/writers 
problem

************************

************************
Document:  CACM-3119.html
************************


the impact of distributions and disciplines
on multiple processor systems

simple queueing models are used to study the 
************************
 are used to study the performance tradeoffs of 
multiple processor systems.  issues considered include the impact of cpu
service 
************************

************************
Document:  CACM-2672.html
************************


emotional content considered dangerous

cacm march, 1974

smoliar, s. w.

artificial intelligence, heuristic programming, models
of cognitive processes, computer music, computer 
************************

************************
Document:  CACM-2406.html
************************


a data definition and mapping language

a data definition language i sa declarative
computer language for specifying data structures. 
 most data definition languages concentrate on the declaration
of logical data structures with little 
concern for how these structures are physically realized
on a computer system.  however, the need for 
data definition languages which describe both the logical
and physical aspects of data is increasingly 
apparent.  such languages will be a key systems, as well
as in advanced data management systems and distributed 
data bases.  this paper 
************************

************************
Document:  CACM-2950.html
************************


a unifying approach to scheduling

this paper presents a scheme for classifying
scheduling algorithms based on an abstract model 
of a scheduling system which formalizes the notion of
priority.  various classes of scheduling algorithms
are defined and related to existing algorithms.  a
criterion for the implementation efficiency of an 
algorithm is developed and results in the definition
of time-invariant algorithms, which include most 
of the commonly implemented ones.  for time-invariant
algorithms, the dependence of processing rates 
on priorities is derived.  the abstract model provides
a framework for implementing flexible schedulers 
in real operating systems.  the policy-driven 
************************
.  the policy-driven scheduler
of bernstein and sharp is discussed as an example 
of such an implementation

cacm july, 1977

ruschitzka, m.
fabry, r. s.

scheduling algorithms, scheduling models, priority,
operating 
************************

************************
Document:  CACM-3141.html
************************


an improved algorithm for decentralized extrema-finding
in circular configurations of processes

this note presents an improvement to lelann's
algorithm for finding the largest (or smallest) of a set of uniquely
numbered processes arranged in a circle, in which no central
controller exists and the number of processes is not known a priori.
this decentralized algorithm uses a technique of selective
message extinction in order to achieve an average number of
message passes of order (n log n) rather than o(n2).  

cacm may, 1979

chang, e.
roberts, r.

decentralized algorithms, distributed systems, operating systems


************************

************************
Document:  CACM-1587.html
************************


storage allocation in a certain iterative process

a method of core storage allocation in a certain
iterative process is described and estimates 
of the machine time required are given.  the method is
applicable to iterative processes in which input 
data 
************************

************************
Document:  CACM-3038.html
************************


using encryption for authentication in large networks of computers

use of encryption to achieve authenticated
communication in computer networks is discussed. 
 example protocols are presented for the establishment
of authenticated connections, for the management 
************************
ections, for the management 
of authenticated mail, and for signature verification
and document integrity guarantee.  both conventional 
and public-key encryption algorithms are considered as the basis for protocols.

cacm december, 1978

************************
.

cacm december, 1978

needham, r.
schroeder, m.

encryption, security, authentication, networks, protocols,
public-key cryptosystems, data encryption 
standard

************************

************************
Document:  CACM-2276.html
************************


computer methods for sampling from
the exponential and normal distributions

various methods are known for transforming uniformly
distributed random numbers into exponentially
and normally distributed quantities.  the most efficient
ones are compared, in terms of memory requirements 
and speed, with some new algorithms.  a number of procedures

************************
.  a number of procedures
convert taylor series expansions directly 
into sampling steps, an approach which may be used for
sampling from any continuous distribution.  for 
the exponential distribution a definite recommendation
can be made, whereas in the case of the normal 
distribution there remains a choice between slower and
shorter algorithms and faster but space 
************************

************************
Document:  CACM-2570.html
************************


a comparison of list schedules for parallel processing systems

the problem of scheduling 
************************


the problem of scheduling two or more processors
to minimize the execution time of a program 
which consists of a set of partially ordered tasks
is studied.  cases where task execution times are 
deterministic and others in which execution times are
random variables are analyzed.  it is shown that 
different algorithms suggested in the literature vary significantly
in execution time and that the b-schedule 
of coffman and graham is near-optimal.  a dynamic programming
solution for the case in which execution 
times are random variables is presented.

cacm december, 1974

adam, t. l.
chandy, k. m.
dickson, j. r.

parallel processing, precedence 
************************

************************
Document:  CACM-2988.html
************************


memory management and response time

this paper presents a computationally tractable
methodology for including accurately the effects 
of finite memory size and workload memory requirements
in queueing network models of computer systems. 
 empirical analyses 
************************
. 
 empirical analyses and analytic studies based on applying
this methodology to an actual multiaccess 
in teractive system are reported.  relations between workload
variables such as memory requirement distribution 
and job swap time, and performance measures such as response
time and memory utilization are graphically 
displayed. a multiphase, analytically soluble model is
proposed as being broadly applicable to the analysis 
of in teractive computer systems which use nonpaged memories.

cacm march, 1977

brown, r. m.
browne, j. c.
chandy, k. m.

memory management, system performance, queueing
network models, in teractive computer 
************************

************************
Document:  CACM-3043.html
************************


distributed processes: a concurrent programming 
************************
: a concurrent programming concept

a language concept for concurrent processes
without common variables is introduced.  these 
processes communicate and synchronize by means of procedure
calls and guarded regions.  this concept 
is proposed for real-time applications controlled by
microcomputer networks with distributed storage. 
 the paper gives several examples of distributed processes
and shows that they include procedures, coroutines, 
************************
 procedures, coroutines, 
classes, monitors, processes, semaphores, buffers, path
expressions, and input/output as special cases.

cacm november, 1978

hansen, p.

concurrent programming, distributed processes,
microprocessor 
************************

************************
Document:  CACM-3148.html
************************


high level programming for distributed computing

programming for distributed and other loosely coupled systems
is a problem of growing interest.  this paper describes 
************************

************************
Document:  CACM-2030.html
************************


context-sensitive parsing

this paper presents a canonical form for context-sensitive
derivations and a parsing algorithm which finds
each context-sensitive analysis once and only once.  the amount of memory
required by the algorithm is essentially no more than the required to 
store a single complete derivation.  in addition, a modified
version of the basic algorithm is presented which blocks infinite analyses 
for grammars which contain loops.  the algorithm is
also compared with several previous parsers for context-sensitive
grammars and general rewriting systems, and the difference between
the two types of analyses is discussed.  the algorithm appears to
be complementary to an algorithm by s. kuno in several respects, including 
the space-time trade-off and the degree of context dependence involved.

cacm july, 1970

woods, w. a.

context-sensitive grammars, context-sensitive parsing, formal grammars,
formal language theory, parsing, parsing algorithms, recognition algorithms

************************

************************
Document:  CACM-1846.html
************************


on simulating networks of parallel processes
in which simultaneous 
************************

in which simultaneous events may occur

some of the problems of simulating discrete
event systems, particularly computer systems, on 
a conventional digital computer are dealt with.  the
systems are assumed to be described as a network 
of interconnected sequential processes.  briefly reviewed
are 
************************
.  briefly reviewed
are the common techniques used to handle such 
simulations when simultaneous events do not occur, can
be ignored, or can be handled by simple priority 
rules.  following this, the problem of dealing with simultaneous
events in separate processes is introduced. 
 an abstraction of this problem is developed which admits
solution for a majority of commonly encountered
problems.  the technique will either find a method of
simulating the parallel events or report that 
************************
 events or report that none 
can be found.  in some of the latter cases it is shown
to be possible to find a solution by extending 
the information available to the solution technique, but
in many cases the technique becomes computationally 
unfeasible when the additional information is provided.

cacm september, 1969

parnas, d. l.

simulation, parallel processes, simultaneous events,

************************

************************
Document:  CACM-2321.html
************************


on the interface between computers and data communications systems

future systems that combine computers, digital
terminals, and communications equipment present 
design optimization problems that require reconsideration
of the traditional functional responsibilities 
of the respective subsystems.  several "standard" interfaces,
by means of which computers and digital 
terminals connect to the communications systems will
be required.  when specifying these interfaces, 
consideration must be given to problems of coordination,
synchronization, error control, signaling, 
************************

************************
Document:  CACM-3082.html
************************


time, clocks, and the ordering of events in a distributed system

the concept of one event happening before
another in a distributed system is examined, and
is shown to define a partial ordering of the events.
 a distributed algorithm is given for synchronizing 
a system of logical clocks which can be used to totally
order the events.  the use of the total ordering 
is illustrated with a method for solving synchronization
problems.  the algorithm is then specialized 
for synchronizing 
************************
ized 
for synchronizing physical clocks, and a bound is derived
on how far out of synchrony the clocks can 
become.  

cacm july, 1978

lamport, l.

distributed systems, computer networks,

************************
, computer networks,
clock synchronization, multiprocess systems

4.32 5.29

ca780706 
************************

************************
Document:  CACM-2851.html
************************


formal verification of parallel programs

two formal models for parallel computation

************************
 for parallel computation
are presented: an abstract conceptual model and 
a parallel-program model.  the former model does not
distinguish between control and data states.  the 
latter model includes the capability for 
************************
s the capability for the representation
of an infinite set of control states by allowing 
there to be arbitrarily many instruction pointers (or
processes) executing the program.  an induction 
principle is presented which treats the control and
data state sets on the same ground.  through the 
use of "place variables," it is observed that certain
correctness conditions can be expressed without 
enumeration of the set of all possible control states.
 examples are presented in which the induction 
principle is used to demonstrate proofs of mutual exclusion.
 it is shown that assertions-oriented proof 
methods are special cases of the induction principle.
a special case of the assertions method, which 
is called parallel place assertions, is 
************************
 place assertions, is shown to be
incomplete.  a formalization of "deadlock" is then 
presented. the concept of a "norm" is introduced, which
yields an extension, to the deadlock problem, 
of floyd's technique for proving termination.  also discussed
is an extension of the program model which 
allows each process to have its own local variables
and permits shared global variables.  correctness 
of certain forms of implementation is also discussed.
 an appendix is included which relates this work 
to previous work on the satisfiability of certain logical formulas.

cacm july, 1976

keller, r. m.

parallel program, correctness, 
************************

************************
Document:  CACM-2927.html
************************


some new upper bounds on the generation of prime numbers

given an integer n, what is the computational
complexity of finding all the primes less than 
n?  a modified sieve of eratosthenes using doubly linked
lists yields an algorithm of o(n) arithmetic 
complexity.  this upper bound is shown to be equivalent
to the theoretical lower bound for sieve methods 
without preprocessing.  use of preprocessing techniques
involving space-time and additive-multiplicative 
tradeoffs reduces this upper bound to o(n/log logn)
and the bit complexity to o(n logn log log logn). 
 a storage requirement is described using o(n logn/log logn) bits as well.

cacm september, 1977

mairson, h. g.

computational complexity, sieve, prime number generation,
number theory, linked list, preprocessing, 
************************

************************
Document:  CACM-2198.html
************************


introduction to "feature analysis of
generalized data base management systems"

this paper is a separately published introduction
to a main report which analyzes the features 
of generalized data base management systems.  this introduction
gives a review of the current state of 
the art in these systems and discusses the differences
and similarities between capabilities found in 
host language systems and those found in self-contained
systems.  after some discussion of the problems 
of data independence and binding,the four user levels
are identified and described.  technical problems 
facing future designers are described.  the first of
these is that of handling existing stored data and 
the next is that of providing more complex data structures
than those already available in conventional 
programming languages.  the problem of high level interrogation
and update functions acting on network 
structures is mentioned, followed by a discussion of the
problem of catering to a high volume of transactions 
initiated from terminals 
************************

************************
Document:  CACM-2323.html
************************


toward a general theory of special functions

a list of 
************************
 functions

a list of a number of natural developments
for the field of algebraic manipulation is given. 
 then the prospects for a general theory of functions
defined by ordinary differential equations are 
discussed.  the claim is made that recent developments
in mathematics indicate that it should be possible 
to algorithmically generate many properties of solutions
to differential equations.  such a theory is 
preferable to a less general effort to make algebraic
manipulation systems knowledgeable about the usual 
special functions (e.g. exponential, 
************************

************************
Document:  CACM-2376.html
************************


synchronization of communicating processes

formalization of a 
************************


formalization of a well-defined synchronization
mechanism can be used to prove that concurrently 
running processes of a system communicate correctly.
 this is demonstrated for a system consisting of 
many sending processes which deposit messages in a buffer
and many receiving processes which remove messages 
from that buffer.  the formal description of the synchronization
mechanism makes it very easy to prove 
that the buffer will neither overflow nor underflow,
that senders and receivers will never operate on 
the same message frame in the buffer nor will they run into a deadlock. 

cacm march, 1972

habermann, a. n.

parallel programming, multiprogramming, 
************************

************************
Document:  CACM-0088.html
************************
************************
Document:  CACM-3117.html
************************


the impact and use of computer technology by the police

over the past decade there has been a significant growth
in the use of computer technology by u. police departments.  this
growth, however, has been at a slower rate than predicted in the
early 1970's.  further, when computer applications extend
beyond "routine" uses to "nonroutine" efforts, such as resource allocation
or computer-aided-dispatch 
************************

or computer-aided-dispatch systems where the machine begins to become
a tool for decision making, strategic planning and person/machine
interaction, the results of the technology to date have been
mixed.  this paper reports on case studies and surveys which provinsights 
on the implementation and impact of police computer technology
and the relationship of this technology to law enforcement and society.

cacm january, 1979

colton, k.

computer technology, innovation, police resource allocation, police command 
and 
************************

************************
Document:  CACM-1747.html
************************


three criteria for designing computing systems to facilitate debugging

the designer of a computing system should adopt
explicit criteria for accepting or rejecting 
proposed system features.  three possible criteria of this
kind are input recordability, input specifiability, 
and asynchronous reproducibility of output.  these criteria
imply that a user can, if he desires, either 
know or control all the influences affecting the content
and extent of his computer's output.  to define 
the scope of the criteria, the notion of an abstract
machine of a programming language and the notion 
of a virtual computer are explained.  examples of applications
of the criteria concern the reading of 
a time-of-day clock,  the synchronization of parallel
processes, protection in multiprogrammed 
************************
, protection in multiprogrammed systems, 
and the assignment of capability indexes.

cacm may, 1968

van horn, e. c.

computer design, computer design criteria, computer
systems, computer systems design, input equipment, 
input equipment design, operating systems, operating
systems design, multiprogramming, multiprogrammed 
systems, multiprogrammed system design, virtual computers,
programming languages, programming language 
design, program semantics, programming language semantics,
determinism, reproducibility, repeatability, 
deterministic computers, protection, memory protection,
information security, information privacy, computing 
reliability, debugging, program debugging, program testing,
parallel processing, parallel 
************************

************************
Document:  CACM-1960.html
************************


process management and resource sharing in the multiaccess system esope

the main design principles of the multiaccess system esope are described.
emphasis is placed on basic ideas underlying the design rather
than on implementation details.  the main features of the system
include the ability given to any user to schedule his own parallel
processes using system primitive 
************************
 using system primitive operations, the file-memory relationship,
and the allocation-scheduling policy, which dynamically
takes into account recent information about user behavior.

cacm december, 1970

betourne, c.
boulenger, j.
ferrie, j.
kaiser, c.
krakowiak, s.
mossiere, j.

time-sharing, multiprogramming, process scheduling, resource allocation

4.32

ca701203 
************************

************************
Document:  CACM-2597.html
************************


monitors: an operating system structuring concept

this paper develops brinch-hansen's concept of
a monitor as a method of structuring an operating 
system.  it introduces a form of synchronization, describes
a possible method of implementation in terms 
of semaphores and gives a suitable proof rule.  illustrative
examples include a single resource scheduler, 
a bounded 
************************
 scheduler, 
a bounded buffer, an alarm clock, a buffer pool, a
disk head optimizer, and a version of the problem 
of readers and writers.

cacm october, 1974

hoare, c. a. r.

monitors, operating systems, scheduling, mutual
exclusion, synchronization, system implementation 
************************

************************
Document:  CACM-0695.html
************************


use of the disk file on stretch

the paper begins by briefly describing the
stretch (ibm 7030) computer with special emphasis 
given to the organization and operation of its input-output
equipment.  physical characteristics of the 
two-disk system (4,194,304 72-bit words, 8 usec-per-word
transmission rate, etc.) are noted.  timing 
limitations due to arm motion and disk rotation are discussed.
 applications of disk usage are discussed 
separately for problem programs and for systems programs
such as compilers and the supervisory program. 
approximately 260,000 words of disk storage are reserved
for the storage of systems programs and the 
subroutine library.  problem programs, however, are not
currently filed on the disk.  certain programming 
techniques are discussed for transmitting words between
disk and core storage with minimum delaying and 
interruption of the arithmetic unit.  dumps on disk are
considered for both recovery from computer malfunction 
and for mathematical or physical developments during
the calculation.  some comments are made regarding 
the reliability, economics, utility 
************************

************************
Document:  CACM-1928.html
************************


exclusive simulation of activity in digital networks

a technique for simulating the detailed logic
networks of large and active digital systems 
is described.  essential objectives sought are improved
ease and economy in model generation, economy 
in execution time and space, and a facility for handling
simultaneous activities.  the main results obtained 
are a clear and useful separation of structural and behavioral
model description, a reduction of manual 
tasks in converting boolean logic into a structural model,
the elimination of manual processes in achieving 
exclusive simulation of activity, an event-scheduling
technique which does not deteriorate in economy
as the event queue grows in length, and a simulation
procedure which deals effectively with any mixture 
of serial and simultaneous activities.  the passage of
time is simulated in a precise, quantitative fashion 
and systems to be simulated may be combinations of synchronous
and asynchronous logic.  certain aspects 
of the techniques described may be used for the simulation
of network structures other than digital networks.

cacm february, 1969

ulrich, e. g.

simulation, logical simulation, digital simulation,
large systems simulation, network structures, 
scheduling, queuing, simultaneous activities, parallel events

4.22 4.29 6.9

************************

************************
Document:  CACM-2371.html
************************


a system for interprocess communication
in a resource sharing computer network

a system of communication between processes in a
time-sharing system is described and the communication 
system is extended so that it may be used between processes
distributed throughout a computer 
************************

************************
Document:  CACM-3006.html
************************


anomalies with variable partition paging algorithms

five types of anomalous behavior which may
occur in paged virtual memory operating systems 
a redefined.  one type of anomaly, for example, concerns
the fact that, with certain reference strings 
and paging algorithms, an increase in mean memory allocation
may result in an increase in fault rate. 
 two paging algorithms, 
************************
 rate. 
 two paging algorithms, are examined in terms of their
anomaly potential, and reference string examples 
of various anomalies are presented.  two paging algorithm
properties, the inclusion property and the 
generalized inclusion property, are discussed and the
anomaly implications of these properties presented.

cacm march, 1978

franklin, m.
graham, g.
gupta, r.

anomaly, memory management, program behavior, stack
algorithms, virtual memory, working set, page 
fault frequency, paging algorithms

************************

************************
Document:  CACM-2912.html
************************


concurrent reading and writing

the problem of sharing data among asynchronous
process is considered.  it is assumed that only 
one process at a time can modify the data, but concurrent
reading and writing is permitted.  two general 
theorems are proved, and some algorithms are presented
to illustrate their use.  these include a solution 
to the general 
************************
 a solution 
to the general problem in which a read is repeated if
it might have obtained an incorrect result, and 
two techniques for transmitting messages between processes.
 these solutions do not assume any synchronizing 
mechanism other than data which can be written
by one process and read by other processes.

cacm november, 1977

lamport, l.

asynchronous multiprocessing, multiprocess synchronization,
readers/writers problem, 
************************

************************
Document:  CACM-3153.html
************************


the control of response times in multi-class
systems by memory allocations 

the possibility of giving different quality of service to jobs of different
classes by regulating their memory allocation is examined in
the context of a paged computer system.  two parameterized algorithms
which partition the main memory between two classes of jobs are
considered.  initially, a closed system consisting of a process
or and paging and file devices, with fixed numbers of jobs, is studied
to determine optimal degrees of multiprogramming and the proportion
of processor time devoted to each class.  applying a decomposition
approach and treating the closed system as a single server,
the response times in an open system with external arrivals are
studied.  the object is to investigate the effect of the memory
alocation parameters on the expected response times under the two algorithms.
numerical solutions and economical lower bounds for the
expected response 
************************

************************
Document:  CACM-1828.html
************************


synchronization in a parallel-accessed data base


************************
-accessed data base

the following problem is considered:  given
a data base which can be manipulated simultaneously 
by more than one process, what are the rules for synchronization
which will maximize the amount of parallel 
activity allowed.  
************************
 
activity allowed.  it is assumed that the data base
can be represented as a graph.  an example of such 
a data base is a hierarchy of directories for an on-line
file system.  methods for synchronization of 
processes are examined; their 
************************
 are examined; their validity is
discussed and their performance compared.

cacm november, 1969

shoshani, a.
bernstein, a. j.

parallel accessing, parallel search, file search,
data base, synchronization, locking, deadlock


************************

************************
Document:  CACM-3127.html
************************


thoth, a portable real-time operating system 

thoth isa real-time operating system which is designed to be portable
over a large set of machines.  it is currently running on two minicomputers
with quite different architectures.  both the system and application
programs which use it are written in a high-level language.
because the system is implemented by the same software on different
hardware, it has the same interface to user programs.  hence,
application programs which use thoth are  highly portable.  thoth
encourages structuring programs as networks of communicating processes 
by providing efficient 
************************

************************
Document:  CACM-1951.html
************************


estimates of distributions of random variables
for certain computer communications traffic models

a study of multiaccess computer communications has
characterized the distributions underlying an elementary
 model of the user-computer interactive process.  the model used is
elementary in the sense that many of the random variables that
generally are of interest in computer communications studies can be
decomposed into the elements of this model.  data were examined
from four operational multiaccess systems, and the model is shown 
************************
, and the model is shown to
be robust; that is each of the variables of the model has the
same distribution independent of which of the four systems is being examined. 
it is shown that the gamma distribution can be used to
describe the discrete variables.  approximations to the gamma distribution
by the exponential distribution are discussed for the systems studied.

cacm december 1970

fuchs, e.
jackson, p. e.

computer communications, time-sharing,
operating systems, optimization models

3.80 3.81 6.20

ca701212 
************************

************************
Document:  CACM-2740.html
************************


a large semaphore based operating system

the paper describes the internal structure of
a large operating system as a set of cooperating 
sequential processes.  the processes synchronize by
means of semaphores and extended semaphores (queue 
semaphores).  the number of parallel processes is carefully
justified, and the various semaphore constructions 
are explained.  the system is proved to be free of "deadly
embrace" (deadlock).  the design principle 
is an alternative to dijkstra's hierarchical structuring
of operating systems.  the project management 
and the performance are discussed, too.  the operating
system is the first large one using the rc 4000 
multiprogramming system.

cacm july, 1975

lauesen, s.

cooperating processes, operating system, semaphores,
semaphore applications, queue semaphores, 
deadlock, deadly embrace, hierarchical structuring, multiprogramming,
operating system structure, asynchronous 
structuring, buffering, parallel processes, synchronizing
primitives, reentrant code, rc 4000, project 
management, time schedule, debugging, project planning,
project scheduling, reliability, program proving, 
coroutines, 
************************

************************
Document:  CACM-2383.html
************************


music and computer composition

the problem discussed is that of simulating human
composition of western popular music by computer 
and some relevant theories of music and harmony are given.
 problems with this kind of program and several 
schemes that are known not to work are discussed.  several
previous computer compositions are discussed, 
including the illiac suite.  a program to generate short
melody fragments was written to simulate some 
of the aspects of human composition.  five samples of
its output are presented and discussed.  it was 
discovered that although the fragments show many of
the characteristics of popular melodies, they have 
a strangely alien sound.  it is theorized that this
is because the relevant probabilities which would 
discriminate against unfamiliar sequences were not used.

cacm february, 1972

moorer, j. a.

artificial intelligence, heuristic programming,
models of cognitive processes, computer music, 
computer 
************************

************************
Document:  CACM-2289.html
************************


cellular arrays for the solution of graph problems

a cellular array is a two-dimensional, checkerboard
type interconnection of identical modules 
(or cells), where each cell contains a few bits of
memory and a small amount of combinational logic, 
and communicates mainly with its immediate neighbors
in the array.  the chief computational advantage 
offered by cellular arrays is the improvement in speed
achieved by virtue of the possibilities for parallel 
processing.  in this paper it is shown that cellular
arrays are inherently well suited for the solution 
of many graph problems.  for example, the adjacency
matrix of a graph is easily mapped onto an array; 
each matrix element is stored in one cell of the array,
and typical row and column operations are readily 
implemented by simple cell logic.  a major challenge
in the effective use of cellular arrays for the 
solution of graph problems is the determination of algorithms
that exploit the possibilities for parallelism, 
especially for problems whose 
************************
ly for problems whose solutions appear to be inherently
serial.  in particular, several parallelized 
algorithms are presented for the solution of certain
spanning tree, distance, and path problems, with 
direct applications to wire routing, pert chart analysis,
and the analysis of many types of networks. 
 these algorithms exhibit a computation time that in
many cases grows at a rate not exceeding log2 n, 
where n is the number of nodes in the graph.  straightforward
cellular implementations of the well-known 
serial algorithms for these problems require about n
steps, and noncellular implementations require from 
n^2 to n^3 steps.

cacm september, 1972

levitt, k. n.
kautz, w. h.

graph theory, cellular logic-in-memory arrays,
parallel processing, special purpose computers, 

************************

************************
Document:  CACM-2016.html
************************


the instrumentation of multics

an array of measuring tools devised to aid in the implementation of a prototype
computer utility is discussed.  these tools include special hardware
clocks and 
************************
 hardware
clocks and data channels, general purpose programmed probing
and recording tools, and specialized measurement facilities.  some
particular measurements of interest in a system which combines 
************************

************************
Document:  CACM-2255.html
************************


comments on moorer's music and computer composition

cacm november, 1972

smoliar, s. w.

artificial intelligence, heuristic programming,
models of cognitive processes, computer music, 
computer 
************************

************************
Document:  CACM-1752.html
************************


resource management for a medium scale time-sharing operating system

task scheduling and resource balancing for
a medium size virtual memory paging machine are 
discussed in relation to a combined batch processing
and time-sharing environment.  a synopsis is given 
of the task scheduling and paging algorithms that were implemented,
and the results of comparative simulation 
are given by tracing the development of the algorithms
through six predecessor versions.  throughout 
the discussion particular emphasis is placed on balancing
the system performance relative to the characteristics 
of all the system resources.  simulation results relative
to alternate hardware characteristics and the 
effects of program mix and loading variations are also presented.

cacm may, 1968

oppenheimer, g.
weizer, n.

time-sharing, operating systems, resource management,

************************

************************
Document:  CACM-2900.html
************************


some theorems to aid in solving the file allocation problem

the file allocation problem-i.e. the problem
of finding the optimal set of network sites at 
which to locate copies of a file-is known to be, in general,
polynomial complete.  heuristics and other 
aids to finding optimal, or near-optimal, solutions are
therefore much needed.  in this paper we present 
three theorems which can be applied a priori to indicate
that certain sites should (or should not) be 
included in an optimal allocation.

************************
d in an optimal allocation.

cacm november, 1977

grapa, e.
belford, g. g.

file allocation, computer networks, distributed data management

4.33

************************

************************
Document:  CACM-1247.html
************************


an operating environment for dynamic-recursive
computer programming systems

presented in this paper is a brief nontechnical
introduction to oedipus, a computer programming 
system which can serve as an operating environment for
dynamic and/or recursive programs and programming 
systems.  the available services include dynamic allocation
of storage for contiguous 
************************

************************
Document:  CACM-2969.html
************************


optimal program and data locations in computer networks

an optimization procedure for the allocation
of program and data files in a computer network 
is presented.  this algorithm takes into account the
dependencies between files and programs such as 
occur in real heterogeneous computer networks.  insights
into whether or not to convert programs from 
one computer to another can also be gained from the
model.  a search procedure for the file location 
problem is described, along with an example
and a possible application of the model.

cacm may, 1977

morgan, h. l.
levin, k. d.

computer networks, databases, distributed
databases, optimal file 
************************

************************
Document:  CACM-1341.html
************************


levels of computer systems

in building current computer systems, we tend
to break them down into "levels" of control, 
command and communication; in using the system, we break
our problems down correspondingly.  the continued 
use of such a structure raises questions about its effects
on the usefulness of future systems, particularly 
with regard to such trends as time sharing, parallel
programming, and, eventually, 
************************

************************
Document:  CACM-2128.html
************************


a processor allocation method for time-sharing

a scheduling algorithm is proposed which is intended to minimize changes of 
tasks on processors and thereby reduce over-head.  the algorithm also has
application to more general resource allocation problems.  it is implemented 
by means of a method for efficiently handling dynamically changing segmented 
lists.

cacm january, 1970

mullery, a. p.
driscoll, g. c.

time sharing, resource allocation, scheduling algorithms,
monitors, dynamic allocation, 
************************
,
monitors, dynamic allocation, processor
allocation, multiprogramming, multiprocessing, time
slicing, scheduling, conversational systems, 
interactive systems 
************************

************************
Document:  CACM-1048.html
************************


approximate solution of axially symmetric problems

a variety of physical problems in such diverse
fields as electrostatic  field theory, heat 
and ideal fluid flow, and stress concentration theory
reduce, under the assumption of axial symmetry, 
to the study of an elliptic partial differential equation.
 dirichlet-type problems associated with this 
equation are studied on regions whose boundaries include
a nondegenerate portion 
************************

************************
Document:  CACM-1153.html
************************
************************
Document:  CACM-2616.html
************************


on the conversion of programs to decision tables: method and objectives

the problems of converting programs to decision
tables are investigated.  objectives of these 
conversions are mainly program debugging and optimization
in practice.  extensions to the theory of computation 
and computability are suggested.

cacm august, 1974

cavouras, j. c.

decision tables, program optimization, debugging,
semantics, theory of programming, systems analysis

4.19 4.42 
************************

************************
Document:  CACM-2327.html
************************


toward an automata theory of brains

a source of ideas for automata theory-the study
of the brain-has been pushed aside in mathematical 
development of the theory.  this paper suggests the ways
in which automata theory might evolve over the 
next 25 years if it is to contribute to an understanding
of how the brain processes information.

cacm july, 
************************

************************
Document:  CACM-2504.html
************************


concerning music and computer composition in computational linguistics

cacm may, 1973

mcmorrow, c. h.

artificial intelligence, heuristic programming,
models of cognitive processes, computer music, 
computer 
************************

************************
Document:  CACM-2949.html
************************
************************
Document:  CACM-3078.html
************************


analysis of the availability of computer
systems using computer- aided algebra

analytical results, related to the availability
of a computer system constructed of unreliable 
processors, are presented in this paper.  these results
are obtained by using various computer-aided 
algebraic manipulation techniques.  a major purpose of
this paper is to demonstrate that the difficulties 
of obtaining analytical solutions to markov processes
can be considerably reduced by the application 
of symbol manipulation programs.  since many physical
systems can be modeled by markov and semi-markov 
processes, the potential range of application of these techniques
is much wider than the problem of availability 
analyzed here.

cacm july, 1978

chattergy, r.
pooch, u.

computer-aided algebra, symbol manipulation, markov
process, reliability, redundant structures, 
************************

************************
Document:  CACM-2580.html
************************


a method for composing simple traditional music by computer

a method is described for composing musical
rounds by computer.  this method uses some music 
theory plus additional heuristics.  fundamental to the
method is a set of productions together with sets 
of applicability rules and weight rules which operate
on the productions deciding when and to what extent 
they are available for use.  several rounds generated
by the computer implementation of the method are 
presented.  generally, the resultant music sounds mediocre
to the professional although usually pleasing 
to the layman.  it appears that full-blown music theory
is not needed for rounds--all the hardware required 
for structural levels is not necessary for these pieces.
 the author has tried to address both musicians 
and computer scientists.

cacm november, 1974

rader, g. m.

artificial intelligence, heuristic programming,
models of cognitive processes, computer music, 
computer 
************************

************************
Document:  CACM-1948.html
************************


computers in group theory: a survey

computers are being applied to an increasingly
diverse range of problems in group theory.  
the most important areas of application at present are
coset enumeration, subgroup lattices, automorphism 
groups of finite groups, character tables, and commutator
calculus.  group theory programs range from 
simple combinatorial or numerical programs to large
symbol manipulation systems.  in this survey the 
more important algorithms in use are described and contrasted,
and results which have been obtained using 
existing programs are indicated.  an extensive bibliography is included.

cacm january, 1969

************************

************************
Document:  CACM-3089.html
************************


performance of rollback recovery systems under intermittent failures

a mathematical model of a transaction-oriented
system under intermittent failures is proposed. 
 the system is assumed to operate with a checkpointing
and rollback/recovery method to ensure reliable 
information processing.  the model is used to derive the
principal performance measures, including availability, 
response time, and the system saturation point.   

cacm june, 1978

gelenbe, e.
derochette, d.

database reliability, file systems, checkpoints, 
************************
, file systems, checkpoints, recovery
procedures, checking techniques, reliability 
and system performance 
************************

************************
Document:  CACM-3136.html
************************


price/performance patterns of u. computer systems

econometric models of the u. computer market 
************************
 of the u. computer market have been developed to study 
the relationships between system price and hardware performance.  single
measures of price/performance such as "grosch's law" are shown to
be so over simplified as to be meaningless.  multiple-regression models
predicting system cost as a function of several hardware
characteristics do, however, reveal a market dichotomy.  on one hand there
exists a stable, price predictable market for larger, general
purpose computer systems.  the other market is 
************************

************************
Document:  CACM-2568.html
************************


a graph formulation of a school scheduling algorithm

the problem classically titled "the examination
schedule problem" takes various forms in the 
literature.  most of these formulations can be presented
in the terminology of classical network theory. 
 one such formulation is:  given a nondirected network,
partition its nodes into a minimal number of 
subsets such that no two members of the same subset
are connected by anarc.  an obvious lower limit 
to this number 
************************
 limit 
to this number is the size of the largest strongly connected
subgraph.  kirchgassner proved that an upper 
limit is this size plus one.  one logical extension of
the previous work is the introduction of variable 
length examinations where w(i) is the number of periods
for exam i.  the object of this paper is to generalize 
the definition of largest strongly connected subgraph
to include the weighting of nodes, 
************************

