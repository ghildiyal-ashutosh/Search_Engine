Snippets for the query:  Q58
************************
Total Hits:  17
************************

************************
Document:  CACM-1974.html
************************
************************
Document:  CACM-2666.html
************************
************************
Document:  CACM-0586.html
************************
************************
Document:  CACM-0142.html
************************
************************
Document:  CACM-1138.html
************************
************************
Document:  CACM-3191.html
************************
************************
Document:  CACM-2889.html
************************


performance of height-balanced trees

this paper presents the results of simulations
that investigate the performance of height-balanced 
(hb[k]) trees.  it is shown that the only statistic
of hb[1] trees (avl trees) that is a function of 
the size of the tree is the time to search for an item
in the tree.  for sufficiently large trees, the 
execution times of all procedures for maintaining hb[1]
trees are independent of the size of the tree. 
 in particular, an average of .465 restructures are required
per insertion, with an average of 2.78 nodes 
revisited to restore the hb[1] property; an average of
 .214 restructures are required per deletion, with 
an average of 1.91 nodes revisited to restore the hb[1]
property.  moreover,the execution times of procedures 
for maintaining hb[k] trees, for k>1, are also independent
of the size of the tree except for the average 
number of nodes revisited on a delete operation in
order to restore the hb[k] property on trace back. 
 the cost of maintaining hb[k] trees drops sharply as the
allowable imbalance (k) increases.  both analytical 
and experimental results that show the cost of maintaining
hb[k] trees as a function of k are discussed.

cacm january, 1976

karlton, p. l.
fuller, s. h.
scroggs, r. e.
kaehler, e. b.

hb[k] trees, balanced trees, avl trees,
information storage and retrieval, searching

3.7 3.72 
************************

************************
Document:  CACM-1442.html
************************
************************
Document:  CACM-1469.html
************************
************************
Document:  CACM-0460.html
************************
************************
Document:  CACM-1090.html
************************
************************
Document:  CACM-1439.html
************************
************************
Document:  CACM-1179.html
************************


pufft-the purdue university fast fortran translator

a core resident, compile-and-go system designed
for the ibm 7090/7094 computer is described. 
 in little more than half of the 32k word core memory
pufft provides a monitor for job sequencing, a 
translator for the full fortran iv language, the fortran
subroutine 
************************

************************
Document:  CACM-2352.html
************************
************************
Document:  CACM-2676.html
************************
************************
Document:  CACM-0672.html
************************
************************
Document:  CACM-1046.html
************************
************************
Document:  CACM-0021.html
************************
************************
Document:  CACM-2639.html
************************
************************
Document:  CACM-1453.html
************************


a nonrecursive method of syntax specification

the use of the kleene regular expression notation
for describing algebraic language syntax, 
in particular of algol, is described in this paper. 
a fortran ii computer program for carrying out the 
elimination algorithm of gorn,similar to gaussian elimination
for linear systems of algebraic equations, 
is described.  this was applied to numerous smaller

************************

************************
Document:  CACM-0963.html
************************
************************
Document:  CACM-0076.html
************************
************************
Document:  CACM-3124.html
************************
************************
Document:  CACM-0475.html
************************
************************
Document:  CACM-0582.html
************************
************************
Document:  CACM-0516.html
************************
************************
Document:  CACM-1235.html
************************


a stochastic approach to the grammatical coding of english

a computer program is described which will
assign each word in an english text to its form 
class or part of speech.  the program operates at relatively
high speed in only a limited storage space. 
 about half of the word-events in a corpus are identified
through the use of a small dictionary of function 
words and frequently occurring lexical words.  some suffix

************************

************************
Document:  CACM-2573.html
************************
************************
Document:  CACM-3144.html
************************
************************
Document:  CACM-1390.html
************************


convert

a programming language is described which
is applicable to problems conveniently described 
************************

************************
Document:  CACM-0895.html
************************
************************
Document:  CACM-1996.html
************************
************************
Document:  CACM-1008.html
************************
************************
Document:  CACM-0430.html
************************
************************
Document:  CACM-0810.html
************************
************************
Document:  CACM-1244.html
************************
************************
Document:  CACM-0275.html
************************


dynamic storage allocation for an information retrieval system

cacm october, 
************************

************************
Document:  CACM-2306.html
************************
************************
Document:  CACM-2842.html
************************
************************
Document:  CACM-2219.html
************************
************************
Document:  CACM-1297.html
************************
************************
Document:  CACM-1256.html
************************
************************
Document:  CACM-3137.html
************************
************************
Document:  CACM-1425.html
************************


flow diagrams, turing machines and
languages with only two formation rules

in the first part of the paper, flow diagrams
are introduced to represent inter al. mappings 
of a set into itself.  although not every diagram is
decomposable into a finite number of given base 
diagrams, this becomes true at a semantical level due
to a suitable extension of the given set and of 
the basic mappings defined in it.  two normalization
methods of flow diagrams are given.  the first has 
three base diagrams; the second, only two.  in the second
part of the paper, the second method is applied 
to the theory of turing 
************************

************************
Document:  CACM-0434.html
************************
************************
Document:  CACM-0150.html
************************
************************
Document:  CACM-0584.html
************************
************************
Document:  CACM-1283.html
************************
************************
Document:  CACM-2119.html
************************
************************
Document:  CACM-1754.html
************************
************************
Document:  CACM-0015.html
************************
************************
Document:  CACM-0469.html
************************
************************
Document:  CACM-0030.html
************************
************************
Document:  CACM-1230.html
************************
************************
Document:  CACM-3118.html
************************
************************
Document:  CACM-0118.html
************************
************************
Document:  CACM-0306.html
************************
************************
Document:  CACM-0248.html
************************
************************
Document:  CACM-1415.html
************************


automatic derivation of microsentences

the decomposition of long complex english sentences
into shorter kernel-like constituent sentences 
(microsentences)has often been suggested as an avenue
toward conducting automatic retrieval of natural 
language messages.  to explore 
************************

************************
Document:  CACM-0612.html
************************
************************
Document:  CACM-2651.html
************************


the treatment of data types in el1

in constructing a general purpose programming
language, a key issue is providing a sufficient 
set of data types and associated operations in a manner
that permits both natural problem-oriented notation 
************************

************************
Document:  CACM-2691.html
************************
************************
Document:  CACM-0364.html
************************
************************
Document:  CACM-2925.html
************************


optimal surface reconstruction from planar contours

in many scientific and technical endeavors,
a three-dimensional solid must be reconstructed 
from serial sections, either to aid in the comprehension
of the object's structure or to facilitate its 
automatic manipulation and analysis.  this paper presents
a general solution to the problem of constructing 
a surface over a set of cross-sectional contours. 
this surface, to be composed of triangular tiles, 
is constructed by separately determining an optimal
surface between each pair of consecutive contours.
 determining such a surface is reduced to the problem
of finding certain minimum cost cycles in a directed 
toroidal graph.  a new fast algorithm for finding 
************************

************************
Document:  CACM-0556.html
************************
************************
Document:  CACM-0591.html
************************
************************
Document:  CACM-1427.html
************************
************************
Document:  CACM-1801.html
************************
************************
Document:  CACM-2151.html
************************
************************
Document:  CACM-0026.html
************************
************************
Document:  CACM-1984.html
************************
************************
Document:  CACM-2374.html
************************
************************
Document:  CACM-0074.html
************************
************************
Document:  CACM-3134.html
************************


the use of normal multiplication tables
for information storage and retrieval

this paper describes a method for the organization and retrieval of attribute 
based information systems, using the normal multiplication table as a directory
for the information system.  algorithms for the organization an
d retrieval of information are described.  this method is particularly
suitable for queries requesting a group of information items,
 all of which possess 
************************
,
 all of which possess a particular set of attributes (and possibly
some other attributes as well).  several examples are given; the
results with respect to the number of disk accesses and disk space
are compared to other common approaches.  algorithms evaluating
the appropriateness of the above approach to a given information system
are described.  for a certain class of information systems,
the normal multiplication table method yields far more rapid retrieval
with a more economical 
************************

with a more economical space requirement than conventional systems.  
moreover this method incorporates an improved modification of the inverted 
file technique.

cacm march, 1979

motzkin, d.

information retrieval, inverted files, multiattribute 
************************

************************
Document:  CACM-2670.html
************************
************************
Document:  CACM-2758.html
************************
************************
Document:  CACM-1873.html
************************
************************
Document:  CACM-1497.html
************************
************************
Document:  CACM-1454.html
************************
************************
Document:  CACM-3002.html
************************


a record and file partitioning model

one of the main objectives in the design of
a file system is the reduction of storage and data 
transfer costs.  this paper presents a model in which
several  requests access the file system, and each 
request requires information from one or more variable
length data-items.  the probabilities 
************************

************************
Document:  CACM-2083.html
************************
************************
Document:  CACM-2349.html
************************
************************
Document:  CACM-1268.html
************************
************************
Document:  CACM-1104.html
************************
************************
Document:  CACM-1339.html
************************
************************
Document:  CACM-2307.html
************************


dynamic document processing

the current role of computers in automatic
document processing is briefly outlined, and some 
reasons are given why the early promise of library automation
and of the mechanization of documentation 
processes has not been fulfilled.  a new dynamic document
environment is then outlined in which clustered
files are searched and information is retrieved following
an interactive user-controlled search process. 
 methods are described for an automatic query modification
based on user needs, and for a continuous 
reorganization of the stored information as a function of
earlier file processing and of normal collection 
growth.  the proposed procedures provide powerful tools
for information retrieval and for the control 
of dynamic library collections in which new items
are continually added and old ones are retired.

cacm july, 1972

salton, g.

automatic indexing, automatic search and 
************************

************************
Document:  CACM-0185.html
************************


multiprogram scheduling parts 1 and 2.  introduction and theory*

in order to exploit fully a fast computer which
possesses simultaneous processing abilities, 
it should to a large extent schedule its own workload.
 the scheduling routine must be capable of extremely 
rapid execution if it is not to prove self-defeating.
 the construction of a schedule entails 
************************

************************
Document:  CACM-1485.html
************************
************************
Document:  CACM-2087.html
************************
************************
Document:  CACM-1971.html
************************
************************
Document:  CACM-0035.html
************************
************************
Document:  CACM-2244.html
************************
************************
Document:  CACM-1614.html
************************
************************
Document:  CACM-1246.html
************************
************************
Document:  CACM-1655.html
************************
************************
Document:  CACM-0263.html
************************
************************
Document:  CACM-2919.html
************************
************************
Document:  CACM-1930.html
************************


extremely portable random number generator

extremely portable subroutines are sometimes
needed for which moderate quality and efficiency 
suffice.  typically, this occurs for library functions
(like random number generation and in core sorting) 
which are not entirely universal or are not used in a
standardized way.  the literature on random number 
generators does not seem to contain an algorithm that
meets requirements of this sort.  an extremely 
portable 8-line fortran program is provided which based
on an important paper by coveyou and macpherson 
(1967)sing their methods, fourier analysis is applied
to the probability function 
************************

************************
Document:  CACM-1847.html
************************
************************
Document:  CACM-1879.html
************************
