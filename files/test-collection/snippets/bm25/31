Snippets for the query:  Q31
************************
Total Hits:  139
************************

************************
Document:  CACM-3100.html
************************


an interference matching technique for inducing abstractions

a method for inducing knowledge by abstraction
from a sequence of training examples is described. 
 the proposed method, interference matching, induces abstractions
by finding relational properties 
************************

************************
Document:  CACM-2430.html
************************
************************
Document:  CACM-1961.html
************************


an efficient search algorithm to find the elementary circuits of a graph

a theoretically most 
************************


a theoretically most efficient search algorithm is presented
which uses an exhaustive search to find all of the elementary
circuits of a graph.  the algorithm can 
************************
.  the algorithm can be easily modified to find all
of the elementary circuits with a particular attribute such as
length.  a rigorous proof of the algorithm is given as well as an example
of its application.  empirical bounds are presented relating
the speed of the algorithm to the number of vertices and the number
of arcs.  the speed is also related to the number of circuits
in the graph to give a relation between 
************************

************************
Document:  CACM-2247.html
************************
************************
Document:  CACM-2273.html
************************


conversion of decision tables by rule mask method without rule mask

two algorithms for generating computer programs
from decision tables are described.  the algorithms 
allow handling limited entry, extended entry, and mixed
entry tables.  the algorithms are based on the 
rule mask method 
************************
 on the 
rule mask method but need not have the masks at execution
time.  they perform the logical operations 
immediately rather than at the end of the interpreting
process.  execution time can be considerably reduced 
by instantly marking rules which are not applicable (algorithms
1 and 2) or conditions 
************************

1 and 2) or conditions which are already 
tested (algorithm 2).  the new algorithms combine to a
certain degree the advantages of mask methods with 
those of tree 
************************

************************
Document:  CACM-1822.html
************************
************************
Document:  CACM-1504.html
************************


algorithms for finding a fundamental set

************************
ing a fundamental set
of cycles for an undirected linear graph

given the adjacency matrix of the graph, the algorithm

************************
 of the graph, the algorithm
presented in this paper finds a spanning 
tree and 
************************
s a spanning 
tree and then constructs the set of fundamental cycles.
 our algorithm is slower than an algorithm presented 
by welch by a ratio of n/3 (n is the number of nodes)
but requires less storage.  for graphs with a large 
number of nodes and edges, when storage is limited our
algorithm is superior to welch's; however, when 
the graphs are small, or machine storage is very large,
welch's algorithm is superior.  timing estimates 
and storage requirements for both methods are presented.

cacm 
************************

************************
Document:  CACM-2883.html
************************


an application of heuristic search methods to edge and contour 
************************
s to edge and contour detection

this paper presents a method for detecting edges
and contours in noisy pictures.  the properties 
of an edge are embedded in a figure of merit and the edge
detection problem becomes the problem of minimizing 
the given figure of merit.  this problem can be represented
as a shortest path problem on a graph and 
can be solved using well-known graph search algorithms.
 the relations between 
************************
.
 the relations between this representation of 
the minimization problem and a dynamic programming approach
are discussed, showing that the graph search 
method can lead to substantial 
************************
 can lead to substantial improvements in computing
time.  moreover, if heuristic search methods 
are used, the computing 
************************
s 
are used, the computing time will depend on the amount
of noise in the picture.  some experimental results 
are given; these show how various information about the
shape of the contour of an object can be embedded
in the figure of merit, thus allowing the extraction
of contours from noisy picture and the separation 
of touching objects.

cacm february, 1976

martelli, a.

picture processing, pattern recognition, edge
detection, contour detection, contour following, 
optimization problems, dynamic programming, shortest
path, heuristic search methods, problem solving 
methods

************************

************************
Document:  CACM-3124.html
************************


recursive data structures in apl

a mathematical study of three approaches for defining nested
arrays in apl is presented.  theorems exhibiting the relationships
between the definitional systems are given and illustrated through graph
representations.  one of the approaches is used to define an
apl array to be a recursive data structure equivalent to a tree structure
in which all data is stored at the leaves as homogeneous
arrays of numbers and characters.  an extension of apl is proposed that
includes new primitive functions to manipulate the nesting
level of arrays and new operators to assist in the
construction of data-driven algorithms.  

cacm february, 1979

************************

************************
Document:  CACM-2146.html
************************


optimizing the polyphase sort

various dispersion algorithms for the polyphase
sorting procedure are examinedhe optimum 
algorithm based on minimizing the total 
************************

************************
Document:  CACM-2606.html
************************


a new integration algorithm for ordinary differential
equations based on continued fraction approximations

a new integration algorithm is found, and an
implementation is compared with other programmed 
algorithms.  the new algorithm is a step-by-step procedure
for solving the initial value problem in ordinary 
differential equations.  it is designed to approximate
poles of small integer order in the solutions 
of the differential equations by continued fractions obtained
by manipulating the sums of truncated taylor 
series expansions.  the new method is compared with
gragg-bulirsh-stoer, and the taylor series method. 
 the taylor series method and the new method are shown
to be superior in speed and accuracy, while the 
new method is shown to be most superior when the solution
is required near a singularity.  the new method 
************************
ity.  the new method 
can finally be seen to pass automatically through singularities
where all the other 
************************
ities
where all the other methods which are 
discussed will have failed.

cacm september, 1974

willers, i. m.

ordinary differential equations, initial value problem,
integration, taylor series, singularities, 
continued fractions, 
************************

************************
Document:  CACM-3156.html
************************


computing connected components on parallel computers

we present a parallel algorithm which uses n2 processors to find the connected
components of an undirected graph with n vertices in time 
************************
 with n vertices in time o(log2n).  an
o(log2n) time bound also can be achieved using only n$n/$log2n)) processors.
the algorithm can be used to find the transitive closure
of a symmetric boolean matrix.  we assume that the processors have
access to a common memory.  simultaneous access to the same location
is permitted for fetch instructions but not for store instructions.

cacm august, 1979

hirschberg, d.
chandra, a.
sarwate, d.

graph theory, parallel processing, algorithms,
transitive closure, 
************************

************************
Document:  CACM-2266.html
************************


a highly parallel algorithm for approximating
all zeros of a polynomial with only real zeros

an algorithm is described based on newton's
method which simultaneously 
************************
 which simultaneously approximates all zeros 
of a polynomial with only real zeros.  the algorithm, which
is conceptually suitable for parallel computation, 
determines its own starting values so that convergence
to the zeros is guaranteed.  multiple zeros and 
their multiplicity are readily determined.  at no
point in the method is polynomial deflation used.

cacm november, 1972

patrick, m. l.

parallel numerical algorithms, real polynomials,
real 
************************

************************
Document:  CACM-3033.html
************************


optimizing decision trees through heuristically guided search

optimal decision table conversion has been
tackled in the literature using two approaches, 
dynamic programming and branch-and-bound.  the former
technique is quite effective, but its time and 
space requirements are independent of how "easy" the
given table is.  furthermore, it cannot be used 
to produce good, quasi optimal solutions.  the branch-and-bound
technique uses a good heuristic to direct 
the search, but is cluttered up by an enormous search
space, since the number of solutions increases 
with the number of test variables according to a double 
exponential.  in this paper we suggest a heuristically 
guided top-down search algorithm which, like dynamic
programming, recognizes identical subproblems but 
which can be used to find both optimal and quasi optimal
solutions.  the heuristic search method introduced 
in this 
************************
 introduced 
in this paper combines the positive aspects of the above
two techniques.  compressed tables with a large 
number of variables can be handled without deriving expanded tables first. 

cacm december, 1978

martelli, a.
montanari, u.

decision table, optimal decision table conversion,
decision tree, heuristic search, and/or graphs, 
dynamic programming, 
************************

************************
Document:  CACM-2081.html
************************


some complete calculi for matrices

a matrix calculus is introduced with the intention of developing data structures
suitable for a high level algorithmic language for mathematical programming.  
the paper investigates how the special structure of matrices can be described
and utilized for efficient computing by saving memory space and
superfluous operations.  sequences of matrices (and sequences of sequences
of matrices) are considered, and matrix operators areext
ended to sequence operators and cumulative operators.  algorithms
are given which use symbol manipulation of matrix expressions so
as to find the forms best suited 
************************

************************
Document:  CACM-1432.html
************************


incorporation of nonstandard input/output devices into fortran systems

a fortran system may readily be modified to
handle input/output with nonstandard media on the 
same basis on which it handles the standard media.  this
is done by providing a character-handling subroutine 
suited to the nonstandard medium and arranged to be called
by an otherwise unused output statement type 
or unit number. this method was used to control output
of alphanumeric information on a digital graph 
plotter.

cacm may, 
************************

************************
Document:  CACM-2763.html
************************


basic cycle generation [h] (algorithm 491)

cacm may, 1975

gibbs, n. e.

graph, basic cycles,fundamental cycle,
spanning tree, vertex adjacency matrix

5.32 3.24

ca750504 
************************

************************
Document:  CACM-2177.html
************************


an algorithm for the blocks and cutnodes of a graph

an efficient method is presented for finding
blocks and cutnodes 
************************
ing
blocks and cutnodes of an arbitrary undirected 
graph.  the graph may be represented either (i) as an
ordered list of edges or (ii) as a packed adjacency 
matrix.  if w denotes the word 
************************
.  if w denotes the word length of the machine
employed, the storage (in machine words) required 
for a graph with n nodes and m edges increases essentially
as 2(m+n) in case (i), or (n^2)/win case 
(ii).  a spanning tree with labeled edges is grown,
two edges finally bearing different labels if and 
only if they belong to different blocks.  for both representations
the time required to analyze a graph 
on n nodes increases as n^g where g depends on the type
of graph, 1 <= g <= 2, and both bounds are attained. 
 values of g are derived for each of several suitable
families of test graphs, generated by an extension 
of the web grammar approach.  the algorithm is compared
in detail with that proposed by read for which 
1 <= g <= 3.

cacm july, 1971

paton, k.

algorithm, block, block-cutpoint-tree, cutnode, fundamental
cycle set, graph, lobe, lobe decomposition 
graph, separable, spanning 
************************

************************
Document:  CACM-2767.html
************************


a comparison of simulation event list algorithms

four algorithms are considered which can be used
to schedule events in a general purpose discrete 
simulation system.  two of the algorithms are new, one
is based on an end-order tree structure for event 
notices, and another uses an indexed linear list. the algorithms
are tested with a set of typical stochastic 
scheduling distributions especially chosen to show
the advantages 
************************

************************
Document:  CACM-2790.html
************************
************************
Document:  CACM-3008.html
************************
************************
Document:  CACM-2408.html
************************


solving the biharmonic equation in a square:
a direct versus a semidirect method

two methods for solving the biharmonic equation
are compared.  one method is direct, using 
eigenvalue-eigenvector decomposition. 
************************
-eigenvector decomposition.  the other method
is iterative, solving 
************************

is iterative, solving a poisson equation directly 
at each iteration.

cacm november, 1973

ehrlich, l. w.

biharmonic, direct method, block iterative,
eigenvector-eigenvalue decomposition

5.14 5.17

ca731118 
************************

************************
Document:  CACM-2697.html
************************


a fast method for solving a class of tridiagonal linear systems

the solution of linear systems having real, symmetric,
diagonally dominant,tridiagonal coefficient 
matrices with constant diagonals is considered.  it is
proved that the diagonals of the lu decomposition 
converges when floating-point precision.  it is also
proved that the computed lu decomposition converges 
when floating-point arithmetic is used and that the limits
of the lu diagonals using floating point are 
roughly within machine precision of the limits using
real arithmetic.  this fact is exploited to reduce 
the number of floating-point operations required to
solve a linear system from 8n-7 to 5n+2k-3, where 
k is much less than n, the order of the matrix.  if the
elements of 
************************
.  if the
elements of the subdiagonals and superdiagonals 
are 1, then only 4n+2k-3 operations are needed.  the
entire lu decomposition takes k words of storage, 
and considerable savings in array subscripting are achieved.
 upper and lower bounds on k are obtained 
in terms of the ratio of the coefficient matrix diagonal
constants and 
************************

************************
Document:  CACM-1934.html
************************
************************
Document:  CACM-2389.html
************************


preliminary report on a system for general space planning

a computer language and a set of programs within
that language are described which allow the 
formulating and solving of a class of space planning
problems.  the language is an extension of algol 
and includes means to represent spaces and objects, to manipulate
them, and to test the resulting arrangements 
according to a variety of constraints.  the algorithms
used to solve problems expressed in this language 
rely on heuristic programming.  both the 
************************
 programming.  both the language
and the search algorithms are detailed.

cacm february, 1972

eastman, c. m.

automated design, architecture, heuristic programs, space planning

************************

************************
Document:  CACM-2444.html
************************


finding all cliques of an undirected graph (algorithm a457)

cacm 
************************

************************
Document:  CACM-1899.html
************************


simplex method procedure employing lu decomposition (algorithm 350 [h])

************************
 (algorithm 350 [h])

cacm may, 1969

bartels, r. h.
golub, g. h.

simplex method, linear programming, lu decomposition,
round-off errors, computational 
************************

************************
Document:  CACM-2015.html
************************
************************
Document:  CACM-2925.html
************************


optimal surface reconstruction from planar contours

in many scientific and technical endeavors,
a three-dimensional solid must be reconstructed 
from serial sections, either to aid in the comprehension
of the object's structure or to facilitate its 
automatic manipulation and analysis.  this paper presents
a general solution to the problem of constructing 
a surface over a set of cross-sectional contours. 
this surface, to be composed of triangular tiles, 
is constructed by separately determining an optimal
surface between each pair of consecutive contours.
 determining such a surface is reduced to the problem
of finding certain minimum cost cycles in a directed 
toroidal graph.  a new fast algorithm 
************************
.  a new fast algorithm for finding such
cycles is utilized.  also developed is a closed-form 
expression, in term of the number of contour poin ts, for
an upper bound on the number of operations required 
to execute the algorithm.  an illustrated example which
involves the construction of a minimum area surface 
describing a human head is included.

cacm october, 1977

fuchs, h.
kedem,z. m.
uselton, s. p.

surface reconstruction, contour data, serial sections,
three-dimensional computer graphics, minimum 
cost paths, 
************************

************************
Document:  CACM-1839.html
************************


singular value decomposition of a complex
matrix 
************************
 of a complex
matrix (algorithm 358 [f1, 4,5])

cacm october, 1969

businger, p. a.
goulub, g. h.

singular values, matrix decomposition,
least squares solution, 
************************

************************
Document:  CACM-1925.html
************************
************************
Document:  CACM-2523.html
************************


a region coloring technique for scene analysis

a method of converting a picture 
************************
 of converting a picture into a "cartoon"
or "map" whose regions correspond to differently 
textured regions is described.  texture edges in the
picture are detected, and solid regions surrounded 
by these (usually broken) edges are "colored in" using
a propagation process.  the resulting map is cleaned 
by comparing the region colors with the textures of
the corresponding regions in the picture, and also 
by merging some regions with others according to criteria
based on topology and size.  the method has 
been applied to 
************************

************************
Document:  CACM-2980.html
************************


the editing  of picture segmentations using local analysis of graphs

a major problem in picture processing is the
elimination of the large number of spurious regions 
that result from an initial segmentation by region growing
techniques.  such regions have been eliminated 
either on the basis of semantic information or on the
basis of size and contrast.  a scheme is presented 
which performs eliminations on the basis of local properties
of the region adjacency graph.  the scheme 
is based on definitions of graph 
************************

************************
Document:  CACM-2630.html
************************


on computing sets of shortest paths in a graph

two algorithms are presented that construct

************************
 are presented that construct
the k shortest paths between every pair of vertices 
in a directed graph.  these algorithms generalize the floyd
algorithm and the dantzig algorithm for finding 
the shortest path 
************************

************************
Document:  CACM-2752.html
************************
************************
Document:  CACM-2402.html
************************


pictorial pattern recognition and the
phase problem of x-ray crystallography

the availability of interactive, three-dimensional,
computer graphics systems coupled to powerful 
digital computers encourages the development of algorithms
adapted to this environment.  pictorial pattern 
recognition techniques make possible a number of approaches
to x-ray structure determination based on 
molecular model 
************************
 on 
molecular model building, i.e. the use of chemical information
to frame "structural hypotheses" which 
can computationally be tested and refined by reference
to the experimental data.  application of standard 
pattern recognition algorithms is hindered by the fact
that the cross-correlation between a model and 
the correct structure cannot be computed because of
a fundamental incompleteness in the measured data. 
 however, it is possible to compute an upper bound to such
a cross-correlation.  a simple example demonstrates 
that this information can be the basis of a technique
for structure determination that can make effective 
use of an interactive graphics system. model building
by cross-correlations has intrinsic advantages 
over usual crystallographic techniques based on the
autocorrelation or patterson function, especially 
for large structures. 
************************

************************
Document:  CACM-3037.html
************************


a linear sieve algorithm for finding prime numbers

a new algorithm is presented for finding all
primes between 2 and n.  the algorithm executes 
in time proportional to n (assuming that multiplication
of integers not larger than n can be performed 
in unit time).  the method has the same arithmetic complexity
as the algorithm presented by mairson [6]; 
however, our version is perhaps simpler and more elegant.
 it is also easily extended to find the prime 
factorization of all integers between 2 and n in time proportional to n.   

cacm december, 1978

gries, d.
misra, j.

primes, algorithms, data structures

5.25 
************************

************************
Document:  CACM-2189.html
************************


generation of rosary permutations expressed in hamiltonian circuits

systematic generation of a specific class
of permutations fundamental to scheduling problems 
is described.  in a nonoriented complete graph with
n vertices, hamitonian circuits equivalent to .5(n 
- 1)! specific permutations of n elements, termed rosary
permutations, can be defined.  each of them 
corresponds to two circular permutations which mirror-image
each other, and is generated successively 
by a number system covering 3*4*...*(n-1) sets of edges.
 every set of edges {e[k]}, 1 <= e[k] <= k, 
3 <= k <= (n-1) is determined recursively by constructing
a hamiltonian circuit with k vertices from 
a hamiltonian circuit with k-1 vertices, starting with
the hamiltonian circuit of 3 vertices.  the basic 
operation consists of transposition of a pair of adjacent
vertices where the position of the pair in 
the permutation is determined by {e[k]}.  two algorithms
treating the same example 
************************

************************
Document:  CACM-2161.html
************************
************************
Document:  CACM-2695.html
************************


tridiagonalization by permutations

tridiagonalizing a matrix by similarity transformations
is an important computational tool 
in numerical linear algebra. consider the class of sparse
matrices which can be tridiagonalized using 
only row and corresponding column permutations.  the
advantages of using such a transformation include 
the absence of round-off errors and improved computation time
when compared with standard transformations. 
 a graph theoretic algorithm which examines an arbitrary
n x n matrix and determines whether or not it 
can be permuted into tridiagonal form is given.  the
algorithm requires no arithmetic while the number 
of comparisons, the number of assignments, and the number
of increments are linear in n.  this compares 
very favorably with standard transformation methods.
 if the matrix is permutable into tridiagonal form, 
the algorithm gives the explicit tridiagonal form.
 otherwise, early rejection will occur.

cacm january, 1974

gibbs, n. e.
poole, w. g. jr.

tridiagonal matrix, permutation, algorithm,
eigenvalues, graph, bandwidth, 
************************
s, graph, bandwidth, sparse matrix

5.14 5.32

ca740104 
************************

************************
Document:  CACM-1983.html
************************
************************
Document:  CACM-1873.html
************************


accelerating lp algorithms

it is shown how a novel method for computing
(related) 
************************
 for computing
(related) inner products can accelerate the pricing 
phase of lp algorithms.  other lp applications are indicated.

cacm july, 1969

fox, b. l.

linear programming, revised simplex
method, multiple pricing, inner 
************************

************************
Document:  CACM-2461.html
************************
************************
Document:  CACM-2934.html
************************
************************
Document:  CACM-2950.html
************************


a unifying approach to scheduling

this paper presents a scheme for classifying
scheduling algorithms based on an abstract model 
************************

************************
Document:  CACM-1905.html
************************


the simplex method of linear programming using lu decomposition

standard computer implementations of dantzig's
simplex method for linear programming are based 
upon forming the inverse of the basic matrix and updating
the inverse 
************************
 and updating
the inverse after every step of the method. 
 these implementations have bad round-off error properties.
 this paper gives the theoretical background 
for an implementation which is based upon the lu decomposition,
computed with row interchanges, 
************************
,
computed with row interchanges, of the 
basic matrix.  the implementation is slow, but has good
round-off error behavior.  the implementation 
appears as cacm algorithm 350.

cacm may, 1969

bartels, r. h.
goulub, g. h.

simplex method, linear programming, lu decomposition,
round-off errors, computational 
************************

************************
Document:  CACM-2701.html
************************
************************
Document:  CACM-2524.html
************************


some approaches to best-match file searching

the problem of searching the set of keys in
a file to find a key which is closest to a given 
query key is discussed.  after "closest," in terms of
a metric on the the key space, is suitably defined, 
three file structures are presented together with their
corresponding search algorithms, which are intended 
************************
, which are intended 
to reduce the number of comparisons required to achieve
the desired result. these methods are derived 
using certain inequalities satisfied by metrics and by
graph-theoretic concepts. 
************************
-theoretic concepts.  some empirical results 
are presented which compare the efficiency of the methods.

cacm april, 1973

burkhard, w. a.
keller, r. m.

matching, file structuring, file searching, heuristics, best match

3.73 3.79 
************************

************************
Document:  CACM-2619.html
************************


graph coloring conditions for the existence

************************

************************
Document:  CACM-3018.html
************************


covering edges by cliques with regard to
keyword conflicts and intersection graphs

kellerman has presented a method for determining
keyword conflicts and described a heuristic 
algorithm which solves a certain combinatorial optimization
problem in connection with this method.  
this optimization problem is here shown to be equivalent
to the problem of covering the edges of a graph 
by complete subgraphs with the objective of minimizing
the number of complete subgraphs.  a relationship 
between this edge-clique-cover problem and the graph coloring
problem is established which allows algorithms 
for either one of these 
************************
 
for either one of these problems to be constructed
from algorithm for the other.  as consequences of 
this relationship, the keyword conflict problem and the
edge-clique-cover problem are shown to be np-complete, 
and if p=/np then they do not admit polynomial-time approximation
algorithms which always produce solutions 
within a factor less than 2 from the optimum.

cacm february, 1978

kou, l.
stockmeyer, l.
wong, c.
watson, t.

keyword conflicts, intersection graphs, node clique
cover, 
************************

************************
Document:  CACM-2986.html
************************


operations on sparse relations

various computations on relations, boolean matrices,
or directed graphs, such as the computation 
of precedence relations for a context-free grammar, can be
done by a practical algorithm that is asymptotically 
faster than those in common use.  for example, how to compute
operator precedence or wirth-weber precedence 
relations in o(n^2) steps is shown, as well as how to
compute linear precedence functions in o(n^2) steps 
is shown, as well as how to compute linear precedence
functions in o(n) steps, where n is the size of 
a grammer.  the heart of the algorithms is a general
theorem giving sufficient conditions under which 
an expression whose operands are sparse relations and
whose operators are composition, transitive closure, 
union, and inverse, can be computed efficiently.

cacm march, 1977

hunt, h. b. iii
szymanski, t. g.
ullman, j. d.

computational complexity, sparse relation, boolean
matrix, directed graph, wirth-weber 
************************

************************
Document:  CACM-2195.html
************************


on the optimal detection of curves in noisy pictures

a technique for recognizing systems of lines
is presented.  in this technique the heuristic 
of the problem is not embedded in the recognition algorithm
but is expressed in a figure of merit.   
a multistage decision process is then able to recognize
in the input picture the optimal system of lines 
according to the given figure of merit.  due to the
global approach, greater flexibility and adequacy 
in the particular problem is achieved.  the relation
between the structure of the figure of merit and 
the complexity of the optimization process is then discussed.
 the method described is suitable for parallel 
processing because the operations relative to each
state can be computed in parallel, and the number
of stages is equal to the length n of the curves (or
to log2 n if the approximate method is used).

cacm may, 1971

montanari, u.

picture processing, picture recognition, picture
description, curve detection, line detection, 
edge detection,optimal detection, heuristic methods,
global recognition, parallel processing, dynamic 
programming, interaction graph, secondary optimization 
************************

************************
Document:  CACM-3040.html
************************


synthesizing constraint expressions

a constraint network representation is presented
for a combinatorial search problem: finding 
values for a set of variables subject to a set of constraints.
 a theory of consistency levels in such 
networks is formulated, which is related to problems
of backtrack tree search efficiency.  an algorithm 
is developed that can achieve any level of consistency
desired, in order to preprocess the problem for 
subsequent backtrack search, or to function as an alternative
to backtrack search by explicitly determining 
all solutions.

cacm november, 1978

freuder, e.

backtrack, combinatorial algorithms, constraint
networks, constraint satisfaction, graph coloring, 
network consistency, 
************************

************************
Document:  CACM-2903.html
************************


improving programs by the introduction of recursion

a new technique of program transformation,
called "recursion in troduction," is described and 
applied to two algorithms which solve pattern matching problems.
 by using recursion in troduction, algorithms 
which manipulate a stack are first translated into
recursive algorithms in which no stack operations 
occur.  these algorithms are then subjected to a second
transformation, a method of recursion elimination 
************************

************************
Document:  CACM-1423.html
************************


a simple algorithm for computing the generalized inverse of a matrix

the generalized inverse of a matrix is important
in analysis because it provides an extension 
of the concept of an inverse which applies to all matrices.
 it also has many applications in numerical 
analysis, but it is not widely used because the existing
algorithms are fairly complicated and require 
considerable storage space.  a simple extension has
been found to the conventional orthogonalization 
method for inverting non-singular matrices, which gives

************************
 matrices, which gives
the generalized inverse with little extra effort 
and with no additional storage requirements.  the algorithm
gives the generalized inverse for any m by 
n matrix a, including the special case when m+n and a
is non-singular and the case when m>n 
************************

************************
Document:  CACM-3132.html
************************


experiments with some algorithms that find
central solutions for 
************************

central solutions for pattern classification

in two-class pattern recognition, it is a standard
technique to have an algorithm finding hyperplanes
which separates the two classes in a linearly separable training
set.  the traditional methods find a hyperplane which separates all
points in the other, but such a hyperplane is not necessarily centered
in the empty space between the two classes.  since a central
hyperplane does not favor one class or the other, it should have
a lower error rate in classifying new points and is therefore better
than a noncentral hyperplane.  six algorithms for finding central

************************
 for finding central
hyperplanes are tested on three data sets.  although frequently
used practice, the modified relaxation algorithm is very poor. 
three algorithms which are defined in 
************************

************************
Document:  CACM-3134.html
************************


the use of normal multiplication tables
for information storage and retrieval

this paper describes a method for the organization and retrieval of attribute 
based information systems, 
************************
 information systems, using the normal multiplication table as a directory
for the information system.  algorithms for the organization an
d retrieval of information are described.  this method is particularly
suitable 
************************
 is particularly
suitable for queries requesting a group of information items,
 all of which possess a particular set of attributes (and possibly
some other attributes as well).  several examples are given; the
results with respect to the number of disk accesses and disk space
are compared to other common approaches.  algorithms evaluating
the appropriateness of the above approach to a given information system
are described.  for a certain class of information systems,
the normal multiplication table method yields far more rapid 
************************

************************
Document:  CACM-2290.html
************************
************************
Document:  CACM-2554.html
************************


reduction of a band-symmetric generalized eigenvalue problem

an algorithm is described for reducing the
generalized eigenvalue problem ax = lambda bx to 
an ordinary problem, in case a and b are symmetric band
matrices with b positive definite.  if n is the 
order of the matrix and m the bandwidth, 
************************
 and m the bandwidth, the matrices
a and b are partitioned into m-by-m blocks; and 
the algorithm is described in terms of these blocks.
 the algorithm reduces the generalized problem to 
an ordinary eigenvalue problem for a symmetric band
matrix c whose bandwidth is 
************************

************************
Document:  CACM-1727.html
************************
************************
Document:  CACM-2178.html
************************


a language extension for graph processing and its formal semantics

a simple programming language "extension,"
graspe, for processing directed graphs is defined. 
 graspe consists of a type of directed graph data structure
and a set of primitive operations for manipulating 
these structures.  graspe may be most easily implemented
by embedding it in a host language.  emphasis 
is placed both on graspe itself and on its method of
definition.  commonly, 
************************

************************
Document:  CACM-2490.html
************************


efficient algorithms for graph manipulation [h] (algorithm 
************************
 manipulation [h] (algorithm a447)

efficient algorithms are presented for partitioning
a graph into connected components, 
************************
 into connected components, biconnected 
components and simple paths.  the algorithm for partitioning
of a graph into simple paths is iterative 
and each iteration produces a new path between two
vertices already on paths.  (the start vertex can 
be specified dynamically.)  if v is the number of vertices
and e is the number of edges, each algorithm 
requires time and space proportional to max (v,e)
when executed on a random access computer.

cacm june, 1973

hopcroft, j.
tarjan, r.

graphs,analysis of algorithms, graph manipulation

************************

************************
Document:  CACM-3139.html
************************


new methods to color the vertices of a graph

this paper describes efficient new heuristic
methods to color the vertices of a graph which rely
upon the comparison of the degrees and structure of a graph.  a method
is developed which is exact for bipartite graphs and is an
important part of heuristic procedures to find maximal cliques in general
graphs.  finally an exact method is given which performs better
than the randall-brown algorithm and is able to color larger
graphs, and the new heuristic methods, the classical methods, and
the exact method are compared.  

cacm april, 1979

brelaz, d.

np-complete, graph structure, balancing, graph
coloring, scheduling, comparison 
************************

************************
Document:  CACM-2368.html
************************


an implemented graph algorithm for winning shannon switching games

in this tutorial paper a computer program
which wins shannon switching games is described.
 since these games are played on graphs, the program
is a good example of the implementation of graph 
algorithms.  the two players in 
************************
.  the two players in a shannon switching game,
connect and cut, have nonsimilar goals.  either 
connect, cut, or the player moving first is guaranteed
the existence of a winning strategy.  the simple 
strategy explained in this paper is valid in all three
cases.  in fact, the major routines never need 
to know whether the computer is connect or cut.

cacm april, 1972

chase, s. m.

graph algorithms, graph processing, shannon 
************************

************************
Document:  CACM-1529.html
************************


decomposition programming an analysis of matrix substructure 

a petroleum blending problem was analyzed in order
to compare the primal and primal-dual decomposition 
algorithms.  in the course of the 
************************
.  in the course of the analysis, a substructure
was discovered which has relevance to the 
relative performance of the two algorithms and to their
absolute performance as compared with a standard 
primal-simplex solution without decomposition.

cacm october, 1967

************************

************************
Document:  CACM-1563.html
************************


a method for finding hamilton paths and 
************************
ing hamilton paths and knight's tours

the use of warnsdorff's rule for finding a
knight's tour is generalized and applied to the 
problem of finding a hamilton path in a graph.  a graph-theoretic
justification for the method is given.

cacm july, 
************************

************************
Document:  CACM-2923.html
************************


high-level data flow analysis

in contrast to the predominant use of low-level
in termediate text, high-level data flow analysis 
deals with programs essentially at source level and
exploits the control flow information implicit in 
the parse tree.  the need for high-level flow analysis
arises from several aspects of recent work on 
advanced methods of program certification and optimization.
 this paper proposes a simple general method 
of high-level data flow analysis that allows free use
of escape and jump statements, avoids large graphs 
when compiling large 
************************
s 
when compiling large programs, facilitates updating of
data flow information to reflect program changes, 
and derives new global information helpful in solving
many familiar global flow analysis problems.  an 
illustrative application to live variable analysis is presented.
 many of the graphs involved are constructed 
and analyzed before any programs are compiled, thus avoiding
certain costs that low-level methods incur 
repeatedly at 
************************

************************
Document:  CACM-1456.html
************************


storage and retrieval of aspects of meaning in directed graph structures

an experimental system that uses lisp to make
a conceptual dictionary is described.  the dictionary 
associates with each english word the syntactic information,
definitional material, and references to 
the contexts in which it has been used to define other words.
 such relations as class inclusion, possession, 
and active or passive actions are used as definitional
material.  the resulting structure serves as a 
powerful vehicle for research on the logic of question answering.
 examples of methods of inputting information 
************************

************************
Document:  CACM-1721.html
************************


determination of the intersection points of two
plane curves by means of differential equations

a new method is proposed to calculate the intersection
points of two plane curves.  the theory 
of singular points off a system of two differential equations
is used in developing the method. the intersection 
point to be determined is identified with such a singular
point and appropriate modifications are applied 
to the system to ensure that the singular point be stable,
i.e. all integrals which start in the neighborhood 
of the singular point will always approach this point
if the integral parameter tends to infinity.  in 
addition a method is described for systematically searching
for all intersection points in a prescribed 
rectangular area.

cacm july, 1968

kuiken, h. k.

plane curves, intersection points, intersections
plane curves, integration, differential equations, 
matrix iteration, singular points, nonlinear differential
equations, eigenvalues, complex roots, roots, 
************************

************************
Document:  CACM-2052.html
************************


scheduling to reduce conflict in meetings

conflicts in scheduling can be treated as defining an undirected linear graph 
independently of the relation of the activities in conflict to additional 
constraints of time and space.  each connected component of such a graph,
which can be found by an algorithm described by gotlieb and corneil, 
corresponds to a set of events that must be scheduled at different times.

cacm june, 1970

grimes, j. e.

allocation, conflict matrix, connected component, 
************************

************************
Document:  CACM-1847.html
************************


an algorithm for finding a fundamental set of cycles of a graph

a fast method is presented for finding 
************************
 is presented for finding a fundamental
set of cycles for an undirected finite 
graph.  a spanning tree is 
************************

************************
Document:  CACM-2213.html
************************


roots of matrix pencils: the generalized
eigenvalue problem [f2] (algorithm 
************************
 problem [f2] (algorithm 405)

cacm february, 1971

dell, a. m.
weil, r. l.
thompson, g. l.

eigenvalues, matrix roots, pencil roots

************************

************************
Document:  CACM-2275.html
************************


integral equations of immunology

the inversion of a particular integral equation
of the first (fredholm) kind is the basic problem 
considered.  the strategy which yielded success consisted
of three essential points: (1) fit the known 
experimental data by a curve with properties which derive
from properties of the (as yet unknown) function; 
(2) stabilize the computation for the unknown function
by using singular value decomposition; (3) constrain 
the 
************************

************************
Document:  CACM-1791.html
************************


triangular factors of modified matrices (algorithm 319 [f1])

cacm january, 1968

green, d. r.

matrix decomposition, matrix factors,
matrix 
************************

************************
Document:  CACM-3153.html
************************


the control of response times in multi-class
systems by memory allocations 

the possibility of giving different quality of service to jobs of different
classes by regulating their memory allocation is examined in
the context of a paged computer system.  two parameterized algorithms
which partition the main memory between two classes of jobs are
considered.  initially, a closed system consisting of a process
or and paging and file devices, with fixed numbers of jobs, is studied
to determine optimal degrees of multiprogramming and the proportion
of processor time devoted to each class.  applying a decomposition
approach and treating 
************************

************************
Document:  CACM-1828.html
************************


synchronization in a parallel-accessed data base

the following problem is considered:  given
a data base which can be manipulated simultaneously 
by more than one process, what are the rules for synchronization
which will maximize the amount of parallel 
activity allowed.  it is assumed that the data base
can be represented as a graph.  an example of such 
a data base is a hierarchy of directories for an on-line
file system.  methods for synchronization 
************************

************************
Document:  CACM-2484.html
************************


a note on information organization and storage

since the logical structure of a data base
can be represented by a tree or graph, it is quite 
natural for us to view the process of designing a data
base as that of constructing a tree or a graph. 
 a general method for constructing such a tree or a graph
is provided.  there are three important elements 
in this general construction method; namely, a set of
binary relations, an algorithm for constructing 
subsets of a set, and an algorithm for selecting an
element from the given set of objects.  the use of 
different relations and algorithms results in different

************************
 results in different
information structures, as list, tree, ring, 
etc.  thus the problem of information organization and
storage is reduced to that of defining relations 
and formulating algorithms under a given set of constraints.
 the results presented may be valuable to 
designers as useful design concepts, and may serve as
a basis for developing a formal theory on the subject.

cacm july, 1973

huang, j. c.

data base, data-base management, information retrieval,
information structure, file organization, 
storage allocation, tree, graph

3.70 3.73 3.74 5.32

************************

************************
Document:  CACM-2155.html
************************


toward an understanding of data structures

this paper presents a notation and formalism
for describing the semantics of data structures. 
 this is based on directed graphs with named edges and

************************

************************
Document:  CACM-2172.html
************************
************************
Document:  CACM-1145.html
************************


git-a heuristic program for testing pairs
of directed line graphs for isomorphism*

given 
************************
s for isomorphism*

given a pair of directed line graphs, the problem
of ascertaining 
************************
s, the problem
of ascertaining whether or not they are isomorphic 
is one for which no efficient algorithmic solution is known.
 since a straightforward enumerative algorithm 
might require 40 years of running time on a very high
speed computer in order to compare two 15-node 
graphs, a more sophisticated approach seems called
for.  the situation is similar to that prevailing 
in areas such as game-playing and theorem-proving, where
practical algorithms are unknown (for the interesting 
cases), but where various practical though only partially
successful techniques are available.  git-graph 
isomorphism tester-incorporates 
************************

************************
Document:  CACM-2289.html
************************


cellular arrays for the solution of graph problems

a cellular array is a two-dimensional, checkerboard
type interconnection of identical modules 
(or cells), where each cell contains a few bits of
memory and a small amount of combinational logic, 
and communicates mainly with its immediate neighbors
in the array.  the chief computational advantage 
offered by cellular arrays is the improvement in speed
achieved by virtue of the possibilities for parallel 
processing.  in this paper it is shown that cellular
arrays are inherently well suited for the solution 
of many graph problems.  for example, the adjacency
matrix of a graph is easily mapped onto an array; 
each matrix element is stored in one cell of the array,
and typical row and column operations are readily 
implemented by simple cell logic.  a major challenge
in the effective use of cellular arrays for the 
solution of graph problems is the determination of algorithms
that exploit the possibilities for parallelism, 
especially for problems whose solutions 
************************
 for problems whose solutions appear to be inherently
serial.  in particular, several parallelized 
algorithms are presented for the solution of certain
spanning tree, distance, and path problems, with 
direct applications to wire routing, pert chart analysis,
and the analysis of many types of networks. 
 these algorithms exhibit a computation time that in
many cases grows at a rate not exceeding log2 n, 
where n is the number of nodes in the graph.  straightforward
cellular 
************************
.  straightforward
cellular implementations of the well-known 
serial algorithms for these problems require about n
steps, and noncellular implementations require from 
n^2 to n^3 steps.

cacm september, 1972

levitt, k. n.
kautz, w. h.

graph theory, cellular logic-in-memory 
************************

************************
Document:  CACM-3125.html
************************
************************
Document:  CACM-2920.html
************************
************************
Document:  CACM-1924.html
************************


organizing matrices and matrix operations for paged memory systems

matrix representations and operations are examined
for the purpose of minimizing the page faulting 
occurring in a paged memory system.  it is shown that
carefully designed matrix algorithms can lead to 
enormous 
************************
 can lead to 
enormous savings in the number of page faults occurring
when only a small part of the total matrix can 
be in main memory at one time.  examination of addition,
multiplication, and inversion algorithms shows 
that a partitioned 
************************
 shows 
that a partitioned matrix representation (i.e. one submatrix
or partition per page) in most cases induced 
fewer page faults than a row-by-row representation.
 the number of page-pulls required by these matrix 
manipulation algorithms is also studied as a 
************************
 is also studied as a function
of the number of pages of main memory available 
to the algorithm.

cacm march, 1969

mckellar, a. c.
coffman jr., e. g.

matrix algorithms, array processing, paging 
************************

************************
Document:  CACM-1935.html
************************


randomized binary search technique

a mathematical model is developed for the mean
and variance of the number of trials to recover 
a given document in a randomly received list of files.
 the search method described is binary in nature 
and offers new potential for information retrieval systems.

cacm february, 1969

arora, s. r.
dent, w. t.

binary pattern, file examination, graph theory, information

************************

************************
Document:  CACM-2059.html
************************
************************
Document:  CACM-2769.html
************************


a modification of warshall's algorithm for
the transitive closure of binary relations

an algorithm is given for computing the transitive
closure of a binary relation that is represented 
by a boolean matrix. the algorithm is similar to warshall's
although it executes faster for sparse matrices
on most computers, particularly in a paging environment.

cacm april, 1975

warren, h. s. jr.

warshall's algorithm, transitive closure, reachability
matrix, directed graph, digraph, boolean 
matrix, 
************************
, digraph, boolean 
matrix, binary relation

5.30 
************************

************************
Document:  CACM-2877.html
************************


a program data flow analysis procedure

the global data relationships in a program
can be exposed and codified by the static analysis 
methods described in this paper.  a procedure is given
which determines all the definitions which can
possibly "reach" each node of the control flow graph
of the program and all the definitions that are 
"live" on each edge of the graph.  the procedure uses
an "interval" ordered edge listing data structure 
and handles reducible and irreducible graphs indistinguishably.

cacm march, 1976

allen, j. e.
cocke, j.

program optimization, data flow analysis,
flow graphs, algorithms, compilers

4.12 5.24

************************

************************
Document:  CACM-3164.html
************************


progressive acyclic digraphs-a tool for database integrity

a progressive acyclic digraph (pad) algorithm accepts are requests and
maintains a graph in an acyclic state.  when a request creates a cycle,
nodes are, "detached" until the new are can be entered acyclically
this process is important in certain areas of database implementation
in which there are constraints on the permissible sequences
of actions. two pad algorithms are presented; one uses a simple
path matrix representation and the 
************************

************************
Document:  CACM-2125.html
************************


a note on minimal length polygonal approximation to a digitized contour

a method for extracting a smooth polygonal
contour from a digitized image is illustrated.
the ordered sequence of contour points and the connection graph of
the image are first 
************************

************************
Document:  CACM-3085.html
************************


an o(n) algorithm for determining a near-optimal
computation order of matrix chain products

this paper discusses the computation of matrix
chain products of the form m1 x m2 x ... x mn 
where mi's are matrices.  the order in which the matrices
are computed affects the number of operations. 
 a sufficient condition about the association of the
matrices in the optimal order is presented.  an 
o(n) algorithm to find an order of computation 
************************
 an order of computation which
takes less than 25 percent longer than the optimal 
time topt is also presented.  in most cases, the algorithm
yields the optimal order or an order which 
takes only a few percent longer than topt (less than 1 percent on the average).

cacm july, 1978

chin, f.

approximate algorithm, heuristic algorithm,
matrix multiplication, matrix 
************************

************************
Document:  CACM-2094.html
************************


on an algorithm for nonlinear minimax approximation

certain nonlinear minimax approximation problems are characterize
d by properties which permit the application of special algorithms,
mainly based on the exchange algorithms 
************************
 on the exchange algorithms of remes (1934, 1935), for
their solution.  in this paper the application to problems of this
type of a general nonlinear algorithm due to osborne and watson
(1969) is considered.  examples are given to illustrate that this
algorithm can give satisfactory results and, in particular, can
successfully solve problems which lead to difficulties
with the more conventional specialist method.

cacm march, 1970


************************

************************
Document:  CACM-1481.html
************************
************************
Document:  CACM-3138.html
************************


a mathematical programming updating method using modified
givens transformations and applied to lp problems

an efficient and numerically stable method is presented for the problem of
updating an orthogonal decomposition of a matrix of column (or row) vectors.

************************

************************
Document:  CACM-2561.html
************************


a heuristic approach to inductive inference in fact retrieval systems

heuristic procedures are presented which have
been developed to perform inferences by generalizing 
from available information.  the procedures make use
of a similarity structure which is imposed on the 
data base using nonnumerical clustering algorithms.  they
are implemented 
************************

************************
Document:  CACM-3172.html
************************


an algorithm for planning collision-free
paths among polyhedral obstacles

this paper describes a collision avoidance algorithm
for planning a safe path for a polyhedral object moving among
known polyhedral objects.  the algorithm transforms the obstacles
so that they represent the locus of forbidden positions for an arbitrary
reference point on the moving object.  a trajectory of this
reference point which avoids all forbidden regions is free of collisions.
trajectories are found by searching a network which indicates, for each vertex 
in the transformed obstacles, which other vertices can be reached safely.

cacm october, 1979

lozano-perez, t.
wesley, m.

path finding, collision-free paths, polyhedral objects,
polyhedral obstacles, graph searching, growing objects

************************

************************
Document:  CACM-2145.html
************************


automation of etching-pattern layout

help (heuristic etching-pattern layout program)
is an application program developed to computerize 
the tedious and error-prone although vitally important
wiring design of printed circuit boards.  help 
helps automate a design stage one step closer to production
than logical design.  it can be used to design 
wiring patterns of two-layer circuit boards on which
ics in dual-in-line packages as well as discrete 
components such as transistors and resistors have been
placed.  help employs two methods of wiring.  
one is the heuristic method, which simulates human
approaches to wiring design, and the other is the 
theoretically interesting but time-consuming method of
maze-running, based on the lee's algorithm. 
************************

************************
Document:  CACM-3131.html
************************


focus microcomputer number system

focus is a number system and supporting computational
algorithms especially useful for microcomputer 
************************

************************
Document:  CACM-2819.html
************************


experiments in text file compression

a system for the compression of data files,
viewed as strings of characters, is presented. 
 the method is general, and applies equally well to
english, to pl/i, or to digital data.  the system 
consists of an encoder, an analysis program, and a decoder.
  two algorithms for encoding a string differ 
slightly from earlier proposals.  the analysis program attempts
to find an optimal set of codes 
************************

************************
Document:  CACM-2568.html
************************


a graph formulation of a school scheduling algorithm

the problem classically titled "the examination
schedule problem" takes various forms in the 
literature.  most of these formulations can be presented
in the terminology of classical network theory. 
 one such formulation is:  given a nondirected network,
partition its nodes into a minimal number of 
subsets such that no two members of the same subset
are connected by anarc.  an obvious lower limit 
to this number is the size of the largest strongly connected
subgraph.  kirchgassner proved that an upper 
limit is this size plus one.  one logical extension of
the previous work is the introduction of variable 
length examinations where w(i) is the number of periods
for exam i.  the object of this paper is to generalize 
the definition of largest strongly connected subgraph
to include the weighting of nodes, to present an 
approximate algorithm which usually finds the largest
strongly 
************************

