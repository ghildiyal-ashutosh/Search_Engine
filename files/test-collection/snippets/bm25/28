Snippets for the query:  Q28
************************
Total Hits:  108
************************

************************
Document:  CACM-1783.html
************************
************************
Document:  CACM-1886.html
************************


generation of optimal code for expressions via factorization

given a set of expressions which are to be
compiled, methods are presented for increasing the 
efficiency of the object code produced by first factoring
the expressions, i.e. finding a set of subexpressions 
each of which occurs in two or more other expressions
or subexpressions.  once all the factors have been 
ascertained, a sequencing procedure is applied which
orders the factors and expressions such that all 
information is computed in the correct sequence and factors
need be retained in memory a minimal amount 
of time.  an assignment algorithm is then executed in
order to minimize the total number of temporary 
storage cells required to hold the results of evaluating
the factors.  in order to make these techniques 
computationally feasible, heuristic procedures are
applied, and hence global optimal results are not 
necessarily generated.  the factorization algorithms
are also applicable 
************************

************************
Document:  CACM-0626.html
************************
************************
Document:  CACM-2447.html
************************
************************
Document:  CACM-0942.html
************************


fortran subroutines for time series analysis

the authors have recently been concerned in a
time-series study that constituted a fairly typical 
piece of applied statistical research, involving extensive
computations 
************************

************************
Document:  CACM-2208.html
************************


storage utilization in a memory hierarchy when storage
assignment is performed by a hashing algorithm

the utilization of storage is studied in a two-level
memory hierarchy.  the first storage level, 
which is the fast store, is divided into a number of
storage areas.  when an entry is to be filed in 
the hierarchy, a hashing algorithm will attempt to
place the entry into one of these areas.  if this 
particular area is full, then the entry will be placed
into the slower second-level store, even though 
other areas in the first-level store may have space
available.  given the n entries have been filed in 
the entire hierarchy, an expression is derived for the
expected number of entries filed in the first-level 
storehis expression gives a measure of how effectively
the first-level store is being used.  by means 
of examples, storage utilization is then studied as a
function of the hashing algorithm, the number of 
storage areas into which the first-level store is divided
and the total size of the first-level store. 

cacm march, 1971

williams, j. g.

hashing algorithms, memory allocation, 
************************

************************
Document:  CACM-2217.html
************************


experiments in automatic learning for a multipurpose heuristic program

an automatic learning capability has been developed
and implemented for use with the multiple 
(multipurpose program that learns) heuristic tree-searching
program, which is presently being applied 
to resolution theorem-proving in predicate calculus.
multiple's proving program (pp) uses two evaluation 
functions to guide its search for a proof of whether
or not a particular goal is achievable.  thirteen 
general features of predicate calculus clauses were created
for use in the automatic learning of better 
evaluation functions for pp.  a multiple regression
program was used to produce optimal coefficients 
for linear polynomial functions in terms of the features.
 also, automatic data-handling routines were 
written for passing data between the learning program
and the proving program, and for analyzing and 
summarizing results.  data was generally collected for
learning (regression analysis) from the experience 
of pp.  a number of experiments were 
************************

************************
Document:  CACM-1840.html
************************


an efficient prime number generator (algorithm 
************************
 generator (algorithm 357 [a1])

cacm october, 1969

singleton, r. c.

prime numbers, factoring, number 
************************

************************
Document:  CACM-1257.html
************************


debug-an extension to current on-line debugging techniques

a method of on-linr assembly-language debugging
which greatly simplifies several of the bookkeeping 
tasks characteristically associated with that process
has been developed and implemented in a program 
for the univac m-460 computer at air force cambridge research
laboratories.  with this program, an online 
user may insert or delete (in symbolic assembly language)
any number of lines at any point of his previously 
assembled program in core, with the remainder
of the program being 
************************

************************
Document:  CACM-1171.html
************************


a comparison of the primal-simplex and primal-dual
algorithms for linear programming

a statistical comparison of the primal-dual
and the more commonly used primal-simplex algorithm 
for solving linear programming problems has been made under
the assumption of starting with a full artificial 
basis.  under these conditions the primal-dual method
shows a statistically significant superiority on 
randomly generated problems.  it has also been found, via
a regression analysis, that the relevant parameters 
in determining the difference in the number of iterations
between 
************************
 of iterations
between the algorithms is not only the number 
of constraints and 
************************

************************
Document:  CACM-2142.html
************************


reconstruction of pictures from their projections

there are situations in the natural sciences
and medicine (e.g. in electron microscopy and 
x-ray photography) in which it is desirable to estimate the
gray levels of a digital picture at the individual 
points from the sums of the gray levels along straight
lines (projections) at a few angles.  usually, 
in such situations, the picture is far from determined
and the problem is to find the "most representative" 
picture.  three algorithms are described (all using
monte carlo methods) which were designed to solve 
this problem.  the algorithms are applicable in a large
and varied number of fields.  the most 
************************

************************
Document:  CACM-2031.html
************************


algorithm and bound for the greatest common divisor of n integers

a new version of the euclidean
algorithm for finding the greatest common divisor of n integers a(i)
and multipliers x(i) such that gcd = x(1)a(1) + ... + x(n)a(n)
is presented.  the number of arithmetic operations and the number
of storage locations are linear in n.  a theorem of lame that gives a 
************************

************************
Document:  CACM-0944.html
************************


storage and search properties of a tree-organized memory system

a memory with list properties [1] may be used
to construct numeric, alphabetic or alphanumeric 
trees.  such trees have information storage and retrieval
properties applicable to problems involving 
large quantities of data or to problems where the quantity,
word length and distribution of stored information 
is not known a priori, or changes rapidly during the processing.
 the purpose of this paper is to examine 
the storage and search properties of a tree-organized
storage system assuming that a memory possessing 
certain list properties is available.  of prime interest
is the application 
************************

************************
Document:  CACM-1386.html
************************


symbolic factoring of polynomials in several variables

an algorithm for finding the symbolic factors of
a multi-variate polynomial with integer coefficients 
is presented.  the algorithm is an extension of a technique
used by kronecker in a proof that the prime 
factoring of any polynomial may be found in a finite number
of steps.  the algorithm 
************************

************************
Document:  CACM-2283.html
************************


thinning algorithms on rectangular, hexagonal, and triangular arrays

in this report three thinning algorithms are
developed: one each for use with rectangular, 
hexagonal, and triangular arrays.  the approach to the
development of each algorithm is the same.  pictorial 
results produced by each of the algorithms are presented
and the relative performances of the algorithms 
are compared.  it is found that the algorithm operating
with the triangular array is the most sensitive 
to image irregularities and noise, yet it will yield
a thinned image with an overall reduced number of 
points.  it is concluded 
************************

************************
Document:  CACM-1539.html
************************


prime number generator 1; prime number 
************************
 generator 1; prime number generator
2 (algorithm 
************************

************************
Document:  CACM-2146.html
************************


optimizing the polyphase sort

various dispersion algorithms for the polyphase
sorting procedure are examinedhe optimum 
algorithm based on minimizing the total number of unit
strings read 
************************
 of unit
strings read is displayed.  the logic of this 
algorithm is rather complicated; hence, several other
new dispersion algorithms with more straightforward 
logic are presented.  of the simple dispersion algorithms
discussed, the  horizontal is best.  it does 
approximately one-fourth to one and one-half percent
less reading and writing than most algorithms in 
use today.  an additional two and one-fourth to three
percent improvement can be achieved by utilizing 
the modified optimum algorithm.  this algorithm is relatively
straightforward, but it requires a fairly 
close estimate of the total number of unit strings before 
************************

************************
Document:  CACM-2606.html
************************


a new integration algorithm for ordinary differential
equations based on continued fraction approximations

a new integration algorithm is found, and an
implementation is compared with other programmed 
algorithms.  the new algorithm is a step-by-step procedure
for solving the initial value problem in ordinary 
differential equations.  it is designed to approximate
poles of small integer order in the solutions 
of the differential equations by continued fractions obtained
by manipulating the sums of truncated taylor 
series expansions.  the new 
************************

************************
Document:  CACM-3141.html
************************


an improved algorithm for decentralized extrema-finding
in circular configurations of processes

this note presents an improvement to lelann's
algorithm for finding the largest (or smallest) of a set of uniquely
numbered processes arranged in a circle, in which no central
controller exists and the number of processes is not known a priori.
this decentralized algorithm uses a technique of selective
message extinction in order to achieve an average number of
message passes of order (n log n) rather than o(n2).  

cacm may, 1979

chang, e.
roberts, r.

decentralized algorithms, distributed systems, 
************************

************************
Document:  CACM-3133.html
************************
************************
Document:  CACM-2206.html
************************


exact solution of linear equations using
residue arithmetic [f4] (algorithm 406)

cacm march, 1971

howell, j.

residue arithmetic, symmetric residue, modulus,
mixed-radix representation, symmetric mixed-radix 
representation, mixed-radix conversion, prime number,
linear equations, gaussian 
************************

************************
Document:  CACM-2306.html
************************


ancient babylonian algorithms

the early origins of mathematics are discussed,
emphasizing those aspects which seem to be 
of greatest interest from the standpoint of computer
science.  a number of old babylonian tablets, 
************************

************************
Document:  CACM-2936.html
************************


an efficient data structure for the simulation event set

recently algorithms have been presented for the
realization of event scheduling routines suitable 
for general purpose discrete event simulation systems.
 several exhibited a performance superior to that 
of commonly used simple linked list algorithms.  in this
paper a new event scheduling algorithm is presented 
which improves on two aspects of the best of the previously
published algorithms.  first, the new algorithm's 
performance is quite insensitive to skewed distributions,
and second, its worst-case complexity is o( 
n), where n is the number of events in the set. 
************************

************************
Document:  CACM-2644.html
************************


a theorem-proving language for experimentation

because of the large number of strategies
and inference rules presently under consideration 
in automated theorem proving, there is a need for developing
a language especially oriented toward automated 
************************

************************
Document:  CACM-1967.html
************************


an improved algorithm to produce complex primes (algorithm 401 $a1))

cacm november, 1970

bratley, p.

number theory, prime numbers, 
************************
 theory, prime numbers, complex numbers

5.39

************************

************************
Document:  CACM-2648.html
************************


a design for a number theory package
with an optimized trial division routine

a number theory package is described which uses
doubly linked list structures for storing multiprecise 
integers.  the package has been coded in ibm's basic
assembly language and makes heavy use of the macro 
language and conditional assembly.  an optimally coded
trial division routine is also described which 
can be used to determine the unique factorization of large integers.

cacm may, 1974

wunderlich, m. c.
selfridge, j. l.

number theory package, trial division, multiprecise
arithmetic, factorization, doubly linked lists, 
pseudoprime

3.15

ca740505 jb january 
************************

************************
Document:  CACM-2767.html
************************


a comparison of simulation event list algorithms

four algorithms are considered which can be used
to schedule events in a general purpose discrete 
simulation system.  two of the algorithms are new, one
is based on an end-order tree structure for event 
notices, and another uses an indexed linear list. the algorithms
are tested with a set of typical stochastic 
scheduling distributions especially chosen to show
the advantages 
************************

************************
Document:  CACM-2089.html
************************


prime number (algorithm 310 $a1))

************************
 (algorithm 310 $a1))

cacm march, 1970

rapp, d. g.
scott, l. d.

prime numbers, generator

5.0

ca700309 
************************

************************
Document:  CACM-1930.html
************************
************************
Document:  CACM-2924.html
************************


an interactive computer graphics approach to surface representation

an in teractive computer graphics method has been
developed for the rapid generation of arbitrary 
shaped three-dimensional surfaces.  the method is a synthesis
of spline theory and algorithms, an in teractive 
means for man-machine communication, and software for
static or dynamic graphics display.  the basic 
technique employed is a modified lofting method on
which sectional curves are represented by uniform 
b-splines and the surface is in terpolated between sections
by cardinal splines.  among the features of 
this method are algorithms which enable in teractive
modification of the b-spline representation of the 
sectional curves.  at all stages of the process, the
spatial information is graphically displayed to 
the user.  complex surfaces can be created by the combination
of a number of shapes that have 
************************

************************
Document:  CACM-2334.html
************************
************************
Document:  CACM-3118.html
************************


permutation of data blocks in a bubble memory

a common internal organization of bubble memories consists of a set of (minor) 
loops, connected through another (major) loop.  the problem of obtaining any 
give n permutation of the minor loop contents in minimum time is studied
in this paper.  a lower bound to the number of steps required buy
a permutation algorithm is derived, and the class of optimum algorithms is 
identified.

cacm 
************************

************************
Document:  CACM-1874.html
************************


generating pseudorandom numbers on a two's
complement machine such as the ibm 360

the familiar multiplicative congruential generator
is examined in the context of the type of 
two's complement arithmetic used in the ibm 360 series.
 different sequences 
************************
.
 different sequences of residues are considered 
and relationships established among them.  it is shown
that a sequence of positive and negative residues 
may be produced more simply and economically than with
the conventional approach and yet have twice the 
period of the latter without loss of desirable statistical
properties.  another easily generated sequence 
involving absolute values is also shown to have twice
the period but with less attractive statistical 
properties.  the statistical properties of these sequences
are given and related to previously established 
criteria.

cacm july, 1969

hemmerle, w. j.

random number, uniform distribution, 
************************

************************
Document:  CACM-1550.html
************************
************************
Document:  CACM-3021.html
************************


a method for obtaining digital signatures and public-key cryptosystems

an encryption method is presented with the novel
property that publicly revealing an encryption 
key does not thereby reveal the corresponding decryption
key.  this has two important consequences: (1) 
couriers or other secure means are not needed to transmit
keys, since a message can be enciphered using 
an encryption key publicly revealed by the intended recipient.
 only he can decipher the message, since 
only he knows the corresponding decryption key.  (2)
a message can be "signed" using a privately held 
decryption key.  anyone can verify this signature using
the corresponding publicly revealed encryption 
key.  signatures cannot be forged, and a signer cannot
later deny the validity of his signature.  this 
has obvious applications in "electronic mail" and "electronic
funds transfer" systems.  a message is 
encrypted by representing it as a number m, raising
m to a publicly specified power e, and then taking 
the remainder when the result is divided by the publicly
specified product, n, of two large secret prime 
numbers p and q.  decryption 
************************
 
numbers p and q.  decryption is similar;only a different,
secret, power d is used, where e * d = 1 (mod(p-1) 
* (q-1)).  the security of the system rests in part on
the difficulty of factoring the published divisor, 
n.

cacm february, 1978

rivest, r.
shamir, a.
adleman, l.

digital signatures, public-key cryptosystems,
privacy, authentication, security, factorization, 
prime number, electronic mail, 
************************

************************
Document:  CACM-2200.html
************************


on complement division

the division algorithm theorem is expressed
in a form that permits it to serve as the basis 
for devising division operations that produce both quotient
and remainder in complement form.  algorithms 
for division yielding 
************************
 
for division yielding complement results are derived
for numbers represented in any base greater than 
one.  both radix and radix-less-one complementation schemes
are considered.  the binary form of the algorithms 
thus includes both two's and one's complement implementation.
 the problem of quotient overflow for complement 
results is dealt with as is that of selecting an appropriate
form of the remainder condition for complement 
************************

************************
Document:  CACM-1841.html
************************


a prime number generator using the

************************
 generator using the
treesort principle (algorithm 356 [a1])

cacm october, 1969

singleton, r. c.

prime numbers, number theory, sorting

************************

************************
Document:  CACM-1933.html
************************


coding the lehmer pseudo-random number generator

an algorithm and coding technique is presented
for quick evaluation of the lehmer pseudo-random 
number generator modulo 2**31 - 1, a prime mersenne
number with 
************************
 mersenne
number with produces 2**31 - 2 numbers, on a p-bit 
(greater than 31) computer.  the computation method is
extendible to limited problems in modular arithmetic. 
 prime factorization for 2**61 
************************
 factorization for 2**61 - 2 and a primitive root
for 2**61 - 1, the next largest prime mersenne 
number, are given for possible 
************************
, are given for possible construction of a pseudo-random
number generator of increased cycle length.

cacm february, 1969

payne, w. h.
rabung, j. r.
bogyo, t. p.

pseudo-random number, random number, modular arithmetic,
uniform probability density, uniform frequency 
function, simulation, prime factorization, primitive 
************************

************************
Document:  CACM-2402.html
************************


pictorial pattern recognition and the
phase problem of x-ray crystallography

the availability of interactive, three-dimensional,
computer graphics systems coupled to powerful 
digital computers encourages the development of algorithms
adapted to this environment.  pictorial pattern 
recognition techniques make possible a number of approaches
to x-ray 
************************
 of approaches
to x-ray structure determination based on 
molecular model building, i.e. the use of chemical information
to frame "structural hypotheses" which 
can computationally be tested and refined by reference
to the experimental data.  application of standard 
pattern recognition algorithms is hindered by the fact
that the cross-correlation between a model and 
the correct structure cannot be computed because of
a fundamental incompleteness in the measured data. 
 however, it is possible to compute an upper bound to such
a cross-correlation.  a simple example demonstrates 
that this information can be the basis of a technique
for structure determination that can make effective 
use of an interactive graphics system. model building
by cross-correlations has intrinsic advantages 
over usual crystallographic techniques based on the
autocorrelation or patterson function, especially 
for large structures. 
************************

************************
Document:  CACM-3037.html
************************


a linear sieve algorithm for finding prime numbers

a new algorithm is 
************************
s

a new algorithm is presented for finding all
primes between 2 and n.  the algorithm executes 
in time proportional to n (assuming that multiplication
of integers not larger than n can be performed 
in unit time).  the method has the same arithmetic complexity
as the algorithm presented by mairson [6]; 
however, our version is perhaps simpler and more elegant.
 it is also easily extended to find the prime 
factorization of all integers between 2 and n in time proportional to n.   

cacm december, 1978

gries, d.
misra, j.

primes, algorithms, data structures

5.25 
************************

************************
Document:  CACM-3115.html
************************
************************
Document:  CACM-1679.html
************************


a fast fourier transform algorithm for real-valued series

a new procedure is presented for calculating the
complex, discrete fourier transform of real-valued 
time series.  this procedure is described for an example
where the number of points in the series 
************************

************************
Document:  CACM-2770.html
************************


the quadratic hash method when the table size is not a prime number

previous work on quadratic 
************************


previous work on quadratic hash methods is
limited mainly to the case where the table size 
is a prime number.  here, certain results 
************************
.  here, certain results are derived for
composite numbers.  it is shown that all composite 
numbers containing at least the square of one of the component
primes have full-period integer-coefficient 
************************

************************
Document:  CACM-2695.html
************************


tridiagonalization by permutations

tridiagonalizing a matrix by similarity transformations
is an important computational tool 
in numerical linear algebra. consider the class of sparse
matrices which can be tridiagonalized using 
only row and corresponding column permutations.  the
advantages of using such a transformation include 
the absence of round-off errors and improved computation time
when compared with standard transformations. 
 a graph theoretic algorithm which examines an arbitrary
n x n matrix and determines whether or not it 
can be permuted into tridiagonal form is given.  the
algorithm requires no arithmetic while the number 
of comparisons, the 
************************

************************
Document:  CACM-2229.html
************************


construction of rational and negative powers of a formal series

some methods are described for the generation
of fractional and negative powers of any formal 
series, such as poisson series or chebyshev series.  it
is shown that, with the use of the three elementary 
operations of addition, subtraction, and multiplication,
all rational (positive and negative) powers 
of a series can be constructed.  there are basically two
approaches: the binomial theorem and the iteration 
methods. 
************************
 and the iteration 
methods.  both methods are described here, and the relationship
between them is pointed out.  some well-known 
classical formulas are obtained as particular cases,
and it is shown how the convergence properties of 
these formulas can be improved with very little additional
computations.  finally, at the end of the 
article, some numerical experiments are described
with chebyshev series and with fourier series.

cacm january, 1971

brucke, r. a.

series expansion, series inversion, root extraction,
binomial theorem, newton iterations, 
************************

************************
Document:  CACM-1497.html
************************


on the normalization requirement of
divisor in divide- and- correct methods

this paper presents an analysis on the normalization
requirement of the divisor in a divide-and-correct 
method.  this analysis is made subject to the condition
that not more than one correction is required 
to obtain the true quotient character, from the trial
estimate got from the division of a two-precision 
segment of every partial remainder by a suitably rounded
single-precision divisor.  (this segmented division 
is denoted here as a (2, 1) precision basic division.)
 it is found that the normalization requirement 
could be narrowed down to a smaller range of divisors,
provided the magnitude of the character next to 
the leading character of the divisor is known.  if,
however, the normalization is to be eliminated one 
has to choose proper higher precision segments of operands
for the basic division.  also considered is 
the possibility of eliminating the normalization by an
increase on the number of corrections on the 
************************

************************
Document:  CACM-1710.html
************************


asp-a ring implemented associative structure package

asp is a general purpose associative data
structure package in which an arbitrary number of 
data items and an arbitrary number of the relationships
between these data items may be represented. 
 a special picture language is described which has proved
very useful for drawing asp structures on paper. 
 asp structures are built and manipulated by means
of a series of macro calls, which 
************************

************************
Document:  CACM-1862.html
************************


computing capabilities at argentine and chilean universities

the author reports on a trip to universities in
argentina and chile during november 1968, describing 
university conditions and computing activities.  as elsewhere,
these universities are experiencing student 
discontent with the status quo and the solutions they
are attempting contrast: argentina is excluding 
students from participating in university government;
chile is allowing such participation.  university 
computing service and academic activities are limited.
 the number of computers is small and so is the 
capacity, none larger than an ibm 360/40; with some
exception, computing science academic programs are 
rare. this situation is by no means attributable to
those responsible for computing developments, who 
strive for excellence; rather the "system" is hard to
over-come.  universities, especially those with 
strong european 
************************

************************
Document:  CACM-2524.html
************************


some approaches to best-match file searching

the problem of searching the set of keys in
a file to find a key which is closest to a given 
query key is discussed.  after "closest," in terms of
a metric on the the key space, is suitably defined, 
three file structures are presented together with their
corresponding search algorithms, which are intended 
to reduce the number of comparisons required to achieve
the desired result. these methods are derived 
using certain inequalities satisfied by metrics and by
graph-theoretic concepts.  some empirical 
************************

************************
Document:  CACM-2267.html
************************


algorithms to reveal properties of floating-point arithmetic

two algorithms are presented in the form of
fortran subroutines.  each subroutine computes 
the radix and number of digits of the floating-point

************************

************************
Document:  CACM-3018.html
************************


covering edges by cliques with regard to
keyword conflicts and intersection graphs

kellerman has presented a method for determining
keyword conflicts and described a heuristic 
algorithm which solves a certain combinatorial optimization
problem in connection with this method.  
this optimization problem is here shown to be equivalent
to the problem of covering the edges of a graph 
by complete subgraphs with the objective of minimizing
the number of complete subgraphs.  a relationship 
between this edge-clique-cover problem and the graph coloring
problem is established which allows algorithms 
for either one of these 
************************

************************
Document:  CACM-1727.html
************************


one way of estimating frequencies of jumps in a program

for the segmentation of a program it is useful
to have a reasonable estimation of the values 
of s(ij), where s(ij) is the mean value of the number
of jumps from the i-th instruction on to the j-th 
instruction in the run time.  in the cases where the
s(ij) are estimated directly, the structure of the 
whole program must be generally taken into account;
therefore it is very difficult for the programmer 
and/or the translator to obtain a good estimation of
the s(ij).  it is easier to estimate not s(ij) but 
the quantities p(ij)=s(ij)*c(i)/sum[s(ij), j=1,n], where
c(i) is an arbitrary positive constant for each 
i.  although the p(ij) are, for each i, proportional to
s(ij), the estimation of p(ij) is easier, because 
we must estimate only the "probabilities" of events
where instruction i is executed after instruction 
i(i).  this estimation can often be done without considering
the structure of the whole program.  in 
the first part of the paper, using the theory of the
markov chains, an algorithm for the computation 
of the s(ij) from the p(ij) is found, and some ways
of obtaining estimates of the p(ij) are given.  in 
the second part a variant of this algorithm is derived,
avoiding the necessity of computation involving 
large matrices.

cacm 
************************

************************
Document:  CACM-1537.html
************************


prime number generator 1 (algorithm 
************************

************************
Document:  CACM-2276.html
************************


computer methods for sampling from
the exponential and normal distributions

various methods are known for transforming uniformly
distributed random numbers into exponentially
and normally distributed quantities.  the most efficient
ones are compared, in terms of memory requirements 
and speed, with some new algorithms.  a number of procedures
convert taylor series expansions directly 
************************
 expansions directly 
into sampling steps, an approach which may be used for
sampling from any continuous distribution.  for 
the exponential distribution a definite recommendation
can be made, whereas in the case of the normal 
distribution there remains a choice between slower and
shorter algorithms and faster but space consuming 
methods.

cacm october, 1972

ahrens, j. h.
dieter, u.

random numbers, pseudorandom, normal 
************************

************************
Document:  CACM-1099.html
************************


professional computer work for the blind

developments in computer technology have opened
new professional opportunities for the intelligent 
blind.  since there are few if any occupations in which the
blind can participate without serious disadvantage, 
the opportunities offered them to gain entrance into
various occupations through computer use including 
that of programmer, is important for future rehabilitation
planning. also of immediate interest is the 
fact that the blind may be especially suited for programming
work.  because of intense training in and 
constant experience with locating objects in the unseen
environment and also because of superbly trained 
memory, the blind brings to the work of programming skills
which the sighted has had little need to acquire. 
 these qualifications should result in fewer debugging
problems and make the blind a valuable addition 
to any systems group.  before the blind could become a
serious professional, a number of aids and techniques 
************************

************************
Document:  CACM-0804.html
************************


exponentiation of series (algorithms 134)

cacm july, 1963

************************

************************
Document:  CACM-1420.html
************************


a new uniform pseudorandom number generator

a new multiplicative congruential pseudorandom
number generator is discussed, in which the 
modulus is the largest prime within accumulator capacity

************************

************************
Document:  CACM-3027.html
************************


the development of the mu5 computer system

following a brief outline of the background
of the mu5 project, the aims and ideas for mu5 
are discussed.  a description is then given of the instruction
set, which includes a number of features 
conducive to the production of efficient compiled code
from high-level language source programs.  the 
design of the processor is then traced from the initial
ideas for an associatively addressed "name store" 
to the final multistage pipeline structure involving
a prediction mechanism 
************************

************************
Document:  CACM-2555.html
************************


variable-precision exponentiation

a previous paper presented an efficient algorithm,
called the recomputation algorithm, for 
evaluating a rational expression to within any desired tolerance
on a computer which performs variable-precision 
arithmetic operations.  the recomputation algorithm can be
applied to expressions involving any variable-precision 
operations having o(10^(-p) + sum{|ei|}) error bounds,
where p denotes the operation's precision and 
ei denotes the error in the operation's ith argument.
 this paper presents an efficient variable-precision 
exponential operation with an error bound of the above
order.  other operations such as log, sin, and 
cos, which have simple series expansions, can be handled 
************************

************************
Document:  CACM-0063.html
************************
************************
Document:  CACM-1812.html
************************
************************
Document:  CACM-1725.html
************************


a simple proof of lewin's ordered-retrieval
theorem for associative memories

an efficient method of ordered retrieval of binary
words from an associative memory, as described
by lewin, is based on the use of special readout circuits
which indicate the digit values present in 
the individual digit columns of the memory.  thus the
circuits indicate whether the individual digit 
columns contain digits of both values, or of only one
value, or contain no digits at all (i.e. that the 
memory is empty).  the use of these circuits, which
in this paper are termed column value indicators, 
reduces considerably the number of memory accesses necessary

************************
 of memory accesses necessary
to retrieve in order a number of distinct 
words from the memory.  lewin proves that, for the readout
by the described method of m distinct binary 
words, 2m - 1 memory accesses are necessary.  (thus he
proves that the number of necessary memory accesses 
of his method, unlike those of other methods, is independent
of the word length.)  in this paper a very 
simple proof of this theorem derived from some elementary

************************
 derived from some elementary
aspects of the structure of sets of binary 
numbers is presented.

cacm july, 1968

wolinsky, a.

associative memories, content-addressed memories,
ordered lists, ordered information retrieval, 
ordered retrieval theorem, column digit values, 
************************

************************
Document:  CACM-2927.html
************************


some new upper bounds on the generation of prime numbers

given an integer n, 
************************
s

given an integer n, what is the computational
complexity of finding all the primes less than 
n?  a modified sieve of eratosthenes using doubly linked
lists yields an algorithm of o(n) arithmetic 
complexity.  this upper bound is shown to be equivalent
to the theoretical lower bound for sieve methods 
without preprocessing.  use of preprocessing techniques
involving space-time and additive-multiplicative 
tradeoffs reduces this upper bound to o(n/log logn)
and the bit complexity to o(n logn log log logn). 
 a storage requirement is described using o(n logn/log logn) bits as well.

cacm september, 1977

mairson, h. g.

computational complexity, sieve, prime number generation,
number theory, 
************************

************************
Document:  CACM-2114.html
************************


a formal system for information retrieval from files

a generalized file structure is provided
by which the concepts of keyword, index, record, file, directory,
file structure, directory decoding, and record retrieval are defined
and from which some of the frequently used file structures such
as inverted files, index-sequential files, and multilist files are
derived.  two algorithms which retrieve records from the generalized file 
structure are presented.

cacm february, 1970

hsiao, d.

attribute-value pair, index, keyword, record, record address,
k-pointer, k-list, file, directory, generalized file
structure, inverted file, index-sequential-file, multilist file,
description, file search, directory search, serial processing of
lists, prime keyword, parallel processing 
************************

************************
Document:  CACM-2948.html
************************


a terminal-oriented communication system

this paper describes a system for full-duplex
communication between a time-shared computer 
and its terminals.  the system consists of a communications
computer directly connected to the time-shared 
system, a number of small remote computers to which
the terminals are attached, and connecting medium 
speed telephone lines.  it can service a large number
of terminals of various types.  the overall system 
design is presented along with the algorithms used to
solve three 
************************

************************
Document:  CACM-2490.html
************************


efficient algorithms for graph manipulation [h] (algorithm a447)

efficient algorithms are presented for partitioning
a graph into connected components, biconnected 
components and simple paths.  the algorithm for partitioning
of a graph into simple paths is iterative 
and each iteration produces a new path between two
vertices already on paths.  (the start vertex can 
be specified dynamically.)  if v is the number of vertices
and e is 
************************
 of vertices
and e is the number of edges, each algorithm 
requires time and space proportional to max (v,e)
when executed on a random access computer.

cacm june, 1973

hopcroft, j.
tarjan, r.

graphs,analysis of algorithms, graph manipulation

************************

************************
Document:  CACM-1563.html
************************
************************
Document:  CACM-2325.html
************************


numerical mathematics and computer science

numerical mathematics is viewed as the analysis
of continuous algorithms.  four of the components 
of numerical mathematics are discussed.  these are: foundations
(finite precision number systems, computational 
************************

************************
Document:  CACM-2210.html
************************


toward automatic program synthesis

an elementary outline of the theorem-proving
approach to automatic program synthesis is given, 
without dwelling on technical details.  the method is
illustrated by the automatic construction of both 
recursive and iterative programs operating on natural
numbers,lists, and trees,  
************************

************************
Document:  CACM-1717.html
************************
************************
Document:  CACM-3036.html
************************
************************
Document:  CACM-1259.html
************************
************************
Document:  CACM-2794.html
************************
************************
Document:  CACM-1691.html
************************


a comparison of the correlational behavior
of random number generators for the ibm 360

hutchinson states that the "new" (prime modulo)
multiplicative 
************************
 modulo)
multiplicative congruential pseudorandom generator, 
attributed to d. h. lehmer, has passed the usual statistical
tests for random number generators.  it 
is here empirically shown that generators of this type
can produce sequences whose autocorrelation functions 
up to lag 50 exhibit evidence of nonrandomness for many
multiplicative constants.  an alternative generator 
proposed by tausworthe, which uses irreducible polynomials
over the field of characteristic two, is shown 
to be free from this defect.  the applicability of these
two generators to the ibm 360 is then discussed. 
 since computer word size can affect a generator's statistical
behavior the older mixed and simple congruential 
generators, although extensively tested on computers
having 36 or more bits per word, may not be optimum 
generators for the ibm 360.

cacm september, 1968

whittlesey, j. r.

random numbers, pseudorandom number generators, autocorrelation
function, serial correlation, digital 
shift-register generators, linear recurrence modulo
two, irreducible polynomials, primitive trinomials 
modulo two, congruential generators, prime numbers,
statistical 
************************

************************
Document:  CACM-1697.html
************************
************************
Document:  CACM-2167.html
************************


algebraic simplification: a guide for the perplexed

algebraic simplification is examined first from
the point of view of a user who needs to comprehend 
a large expression, and second from the point of view
of a designer who wants to construct a useful and 
efficient system.  first we describe various techniques
akin to substitution.  these techniques can be 
used to decrease thesize of an expression and make it
more intelligible to a user.  then we delineate 
the spectrum of approaches to the design of automatic simplification
capabilities in an algebraic manipulation 
system.  systems are divided into five types.  each type
provides different facilities for the manipulation 
and simplification of expressions. finally we discuss
some of the theoretical results related to algebraic 
simplification.  we describe several positive results
about the existence of powerful simplification 
algorithms and the number-theoretic conjectures 
************************
-theoretic conjectures on which
they rely.  results about the nonexistence of 
algorithms for certain classes 
************************

************************
Document:  CACM-1504.html
************************


algorithms for finding a fundamental set
of cycles for an undirected linear graph

given the adjacency matrix of the graph, the algorithm
presented in this paper finds a spanning 
tree and then constructs the set of fundamental cycles.
 our algorithm is slower than an algorithm presented 
by welch by a ratio of n/3 (n is the number of nodes)
but requires 
************************

************************
Document:  CACM-3166.html
************************


computing standard deviations: accuracy

four algorithms for the numerical computation
of the standard deviation of (unweighted) sampled data
are analyzed.  two of the algorithms are well-known in the statistical
and computational literature; the other two are new algorithms
specifically intended for automatic computation.  our discussion is 
expository, with emphasis on reaching a suitable definition of
"accuracy."  each of the four algorithms is analyzed for the conditions
under which it will be accurate.  we conclude that all four
algorithms will provide accurate answers for many problems, but two
of the algorithms, one new, one old, are substantially more accurate
on difficult problems than are the other two.

cacm september, 1979

chan, t.
lewis, j.

mean, standard deviation, least squares, updating
estimates, rounding error analysis, condition number.

5.5 5.11 5.19

ca790907 
************************

************************
Document:  CACM-0116.html
************************
************************
Document:  CACM-1674.html
************************
************************
Document:  CACM-1609.html
************************


scheduling university course examinations by computer

a new approach to the problem of scheduling
course examinations is presented.  in principle, 
an examination schedule which requires a minimum number
of examination periods and satisfies the constraint 
that no student be required to take two examinations
simultaneously can be found in two steps.  first, 
course which may have their examinations scheduled at
the same period are grouped together in all possible 
ways.  then a minimum number of these groups, such that
each course is included at least once, are selected. 
 by removing multiple occurrences of courses and then scheduling
each group at a different period a minimal 
schedule can be obtained.  known algorithms for carrying
out these 
************************

************************
Document:  CACM-1385.html
************************
************************
Document:  CACM-2289.html
************************


cellular arrays for the solution of graph problems

a cellular array is a two-dimensional, checkerboard
type interconnection of identical modules 
(or cells), where each cell contains a few bits of
memory and a small amount of combinational logic, 
and communicates mainly with its immediate neighbors
in the array.  the chief computational advantage 
offered by cellular arrays is the improvement in speed
achieved by virtue of the possibilities for parallel 
processing.  in this paper it is shown that cellular
arrays are inherently well suited for the solution 
of many graph problems.  for example, the adjacency
matrix of a graph is easily mapped onto an array; 
each matrix element is stored in one cell of the array,
and typical row and column operations are readily 
implemented by simple cell logic.  a major challenge
in the effective use of cellular arrays for the 
solution of graph problems is the determination of algorithms
that exploit the possibilities for parallelism, 
especially for problems whose solutions 
************************
 for problems whose solutions appear to be inherently
serial.  in particular, several parallelized 
algorithms are presented for the solution of certain
spanning tree, distance, and path problems, with 
direct applications to wire routing, pert chart analysis,
and the analysis of many types of networks. 
 these algorithms exhibit a computation time that in
many cases grows at a rate not exceeding log2 n, 
where n is the number of nodes in the graph. 
************************

************************
Document:  CACM-2837.html
************************


new upper bounds for selection

the worst-case minimum number of comparisons
complexity vi(n) of the i-th selection problem 
is considered.  a new upper bound for vi(n) improves the
bound given by the standard hadian-sobel algorithm 
by a generalization of the kirkpatrick-hadian-sobel
algorithm, and extends kirkpatrick's method to a 
much wider range of application.  this generalization
compares favorably with a recent algorithm by hyafil.

cacm september, 1976

yap, c. k.

selection problem, algorithms, comparison problems,

************************

************************
Document:  CACM-2525.html
************************
************************
Document:  CACM-1538.html
************************


prime number generator 2 (algorithm 
************************

************************
Document:  CACM-2462.html
************************


an efficient prime number generator (algorithm 
************************

************************
Document:  CACM-1924.html
************************


organizing matrices and matrix operations for paged memory systems

matrix representations and operations are examined
for the purpose of minimizing the page faulting 
occurring in a paged memory system.  it is shown that
carefully designed matrix algorithms can lead to 
enormous savings in the number of page faults occurring

************************
 of page faults occurring
when only a small part of the total matrix can 
be in main memory at one time.  examination of addition,
multiplication, and inversion algorithms shows 
that a partitioned matrix representation (i.e. one submatrix
or partition per page) in most cases induced 
fewer page faults than a row-by-row representation.
 the number of page-pulls required 
************************
 of page-pulls required by these matrix 
manipulation algorithms is also studied as a function
of the number of pages of main memory 
************************

************************
Document:  CACM-3164.html
************************


progressive acyclic digraphs-a tool for database integrity

a progressive acyclic digraph (pad) algorithm accepts are requests and
maintains a graph in an acyclic state.  when a request creates a cycle,
nodes are, "detached" until the new are can be entered acyclically
this process is important in certain areas of database implementation
in which there are constraints on the permissible sequences
of actions. two pad algorithms are presented; one uses a simple
path matrix representation and the other uses a list with an
"artificial gradient."  experiments suggest that for large n the second
is considerably faster, though both are asymptotically o(nr),
where n is the number of nodes and r is the 
************************

************************
Document:  CACM-0531.html
************************
************************
Document:  CACM-2087.html
************************
************************
Document:  CACM-2605.html
************************


a precise numerical analysis program

a description is given of a program for computing
the solution to a small number of standard 
numerical analysis problems to any specified accuracy,
up to a limit of 2000 correct decimal places. 
 each computed number is bounded in an interval with a
multiple precision midpoint.  arithmetic operations 
involving these numbers are executed 
************************

************************
Document:  CACM-2507.html
************************


exact solution of linear equations using
residue arithmetic (algorithm r406)

cacm may, 1973

howell, j.

residue arithmetic, symmetric residue, modulus,
mixed-radix representation, symmetric mixed-radix 
representation, mixed radix conversion, prime number,
linear equations, gaussian 
************************

************************
Document:  CACM-2657.html
************************


an improved program-synthesizing algorithm and its correctness

an improved program-synthesizing algorithm
based on the algorithm proposed by waldinger and 
lee in 1969 is given.  in the old algorithm, the program-synthesizing
problem is translated into a theorem-proving 
problem, and a program is obtained by analyzing a proof.
 for the improved algorithm, the analysis is 
not necessary, and a program is obtained as soon as
the proof is completed.  this is achieved by using 
a modified variable tracing mechanism invented by green
in 1969.  the correctness of the improved algorithm 
is also proved; i.e. the program thus obtained
always satisfies the specification.

cacm april, 1974

lee, r. c. t.
chang, c. l.
waldinger, r. j.

program-synthesizing algorithms, theorem proving,
consequence 
************************

************************
Document:  CACM-3055.html
************************


an analysis of algorithms for the dutch national flag problem

solutions to the dutch national flag problem
have been given by dijkstra [1] and meyer [3]. 
 dijkstra starts with a simple program and arrives at
an improved program by refinement.  both of the 
algorithms given by dijkstra are shown to have an expected number
of swaps which is 2/3n 
************************

************************
Document:  CACM-1433.html
************************


a note on linear programming algorithm design: a combinatorial problem

as linear programming models grow bigger and
bigger in size, much actual data that must be 
memorized is often put on magnetic tape or disk, and
consequently there is an improportionality fast 
rise in the consumption of computer timeo cut down
this expense, an ever increasing effort is made 
to design more efficient algorithms.  this paper is
meant to support the effort.  it is attempted to 
find some characteristics of the way a pivot column
is found.  the number of repetitions of a 
************************

************************
Document:  CACM-3131.html
************************


focus microcomputer number system

focus is a number system and supporting computational
algorithms especially useful for microcomputer 
************************
 useful for microcomputer control and other
signal processing applications.  focus has the wide-ranging
character of floating-point numbers with a uniformity of state distributions
that give focus better than a twofold accuracy advantage
over an equal word length floating-point system.  focus computations
are typically five times faster than single precision fixed-point
or integer arithmetic for a mixture of operations, comparable in
speed with hardware arithmetic for many applications.  algorithms
for 8-bit and 16-bit 
************************

************************
Document:  CACM-2420.html
************************


experiments with an automatic theorem-prover
havingpartial ordering inference rules

automatic theorem-provers need to be made much
more efficient.  with this in mind, slagle has 
shown how the axioms for partial ordering can be replaced
by built-in inference rules when using a particular 
theorem-proving algorithm based upon hyper-resolution and
paramodulation.  the new rules embody the transitivity 
of partial orderings and the close relationship between
 predicates.  a program has been developed using 
a modified version of these rules.  this new theorem-prover
has been found to be very powerful for solving 
problems involving partial orderings.  
************************

************************
Document:  CACM-2232.html
************************


pattern width at a given angle

that the pattern feature "width as a function
of angle" possesses several possible interpretations 
is demonstrated in this paper, which is a review of
the width concept in pattern recognition and the 
geometrical concept itself.  the object of the work
is to clarify how the word description can be made 
precise so that computer algorithms for feature extraction
may be obtained; the focus is on the theoretical 
subject matter.  
************************
al 
subject matter.  the results consist of a set-theoretic
definition of width-at-angle, a theorem relating 
it to the 
************************

************************
Document:  CACM-2963.html
************************


a fast algorithm for computing longest common subsequences

previously published algorithms for finding
the longest common subsequence of two sequences 
of length n have had a best-case running time of o(n^2).
 an algorithm for this problem is presented 
which has a running time of o((r + n)log n), where r
is the total number of ordered pairs of 
************************

