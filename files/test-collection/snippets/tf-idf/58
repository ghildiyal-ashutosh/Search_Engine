Snippets for the query:  Q58
************************
Total Hits:  150
************************

************************
Document:  CACM-0292.html
************************


an information retrieval language for legal studies

cacm 
************************

************************
Document:  CACM-0117.html
************************
************************
Document:  CACM-3126.html
************************


comments on perfect hashing functions: a single
probe retrieving  method for static sets

 cacm february, 1979

anderson, m.

hashing, hashing methods, hash coding, direct 
************************

************************
Document:  CACM-2111.html
************************


spelling correction in systems programs

several specialized techniques are shown for efficiently
incorporating spelling correction algorithms in
to compilers and operating systems.  these include the use of syntax
and semantics information, the organization of restricted keyword
and symbol tables, and the consideration of a limited class of spelling
errors.  sample 360 coding for performing spelling correction
is presented.  by using systems which perform spelling correction,
the number of debugging runs per program has been decreased,
saving both programmer and machine time.

cacm february, 1970

morgan, h. l.

spelling correction, error correction, debugging, compilers,
operating systems, diagnostics, error detection, 
misspelling, lexical analysis systems programming

************************

************************
Document:  CACM-2208.html
************************


storage utilization in a memory hierarchy when storage
assignment is performed by a hashing algorithm

the utilization of storage is studied in a two-level
memory hierarchy.  the first storage level, 
which is the fast store, is divided into 
************************

************************
Document:  CACM-3046.html
************************


computer generation of gamma random variables - ii

a rejection method is proposed for generating
gamma variates with nonintegral shape parameter 
a, a > 1. this method is similar to other methods given
by fishman, wallace, and tadikamalla and is faster 
than these methods 
************************

************************
Document:  CACM-2519.html
************************


on the problem of communicating complex information

the nature of the difficulty involved in communicating
mathematical results between scientists 
using a computer based information retrieval system
is examined.  the problem is analyzed in terms of 
psychological and information-processing processes, and
what turns out to be a vicious circle of effects 
is described.  these include ways of augmenting written
natural language by various notational 
************************
 by various notational and linguistic 
devices, the exhibition of the structure inherent in the
information we are communicating, and a sophisticated 
interactive system controlled by computer.

cacm may, 1973

pager, d.

complex information, information, communication,
mathematics, proof, interactive system, language

1.0 1.1 1.50 1.52 1.59 
************************

************************
Document:  CACM-1681.html
************************


easy english,a language for information
retrieval through a remote typewriter 
************************
 through a remote typewriter console

easy english is a natural command language
designed to simplify 
************************

designed to simplify communication between man and 
machine through remote typewriter console.  it has been developed
for retrieval of documents from a computerized 
data base, the moore school information systems laboratory
files.  requests are formulated in a standardized 
syntactical form (examples of which are presented), and
this form is then transformed into an equivalent 
query expressed in the retrieval system's original symbolic
command language, which is briefly described. 
 operation of easy english is detailed by illustration
of the transformations performed upon a sample 
request up to the point at which the request string
is sent to the system.  a macro flowchart of easy 
english is included, and an appendix provides
the printout of a retrieval demonstration.

cacm october, 1968

rubinoff, m.
bergman, s.
cautin, h.
rapp, f.

natural language communication, 
************************
 language communication, on-line searching,
remote console communication, information retrieval, 
man-machine communication, 
************************
, 
man-machine communication, remote terminal communication,
translator, document retrieval, conversational 
mode, information retrieval language, symbolic command language

************************

************************
Document:  CACM-1665.html
************************


automatic generation of efficient lexical
processors using finite state techniques

the practical application of the theory of
finite-state automata to automatically generate 
lexical processors is dealt with in this tutorial article
by the use of the aed rword system, developed 
at m. as part of the aed-1 system.  this system
accepts as input description of the multicharacter 
items or of words allowable in a language given in terms
of a 
************************
 given in terms
of a subset of regular expressions. the output 
of the system is a lexical processor which reads a string
of characters and combines them into the items 
as defined by the regular expressions.  each output
item is identified by a code number together with 
a pointer to a block of storage containing the characters
and character count in the item.  the processors 
produced by the system are based on finite-state machines.
 each state of a "machine" corresponds to 
a unique condition in the lexical processing of a character
string.  at each state a character is read, 
and the machine changes to a new state.  at each transition
appropriate actions are taken based on the 
particular character read.  the system has been in operation
since 1966, and processors generated have 
compared favorably in speed to carefully hand-coded programs
to accomplish the same task.  lexical processors 
for aed-o and mad are among the many which have been
produced.  the techniques employed are independent 
of the nature of the items being evaluated.  if the
word "events" is substituted for character string, 
these processors may be described as generalized decision-making
mechanisms based upon an ordered sequence 
of events.  this allows the system to be used in a
range of applications outside the area of lexical 
processing.  however convenient these advantages may
be, speed is the most important consideration.  
in designing a system for automatic generation of a
lexical processor, the goal was a processor which 
completely eliminated backup or rereading, which was nearly
as fast as hand-coded processors, which would 
analyze the language and detect errors, and

************************

************************
Document:  CACM-1675.html
************************


a note on a relevance estimate and its improvement

in this paper the effect of iterating the improvement
procedure is examined.  it is shown that 
applications of the improvement factor beyond the first
time are ineffectual, and that the factor is 
but a scale factor.

cacm november, 1968

korfhage, r. r.

information retrieval, relevance, indexing, 
************************

************************
Document:  CACM-2141.html
************************


algorithmic selection of the best
method for compressing map data strings

the best of a dozen different methods for
compressing map data is illustrated.  the choices 
are generated by encoding data strings-sequence of like
codes-by three methods and in four directions. 
 relationships are developed between compression alternatives
to avoid comparing all of them.  the technique 
has been used to compress data from forest resource maps,
but is widely applicable to map and photographic 
data reduction.

cacm december, 1971

amidon, e. l.
akin, g. s.

data compression, map storage, information retrieval,
input/output, run coding, 
************************

************************
Document:  CACM-0239.html
************************


inefficiency of the use of boolean functions
for information retrieval systems

cacm december, 
************************

************************
Document:  CACM-2883.html
************************


an application of heuristic search methods to edge and contour detection

this paper presents a method for detecting edges
and contours in noisy pictures.  the properties 
of an edge are embedded in a figure of merit and the edge
detection problem becomes the problem of minimizing 
the given figure of merit.  this problem can be represented
as a shortest path problem on a graph and 
can be solved using well-known graph search algorithms.
 the relations between this representation of 
the minimization problem and a dynamic programming approach
are discussed, showing that the graph search 
method can lead to substantial improvements in computing
time.  moreover, if heuristic search methods 
are used, the computing time will depend on the amount
of noise in the picture.  some experimental results 
are given; these show how various information about the
shape of the contour of an object can be embedded
in the figure of merit, thus allowing the extraction
of contours from noisy picture and the separation 
of touching objects.

cacm february, 1976

martelli, a.

picture processing, pattern recognition, edge
detection, contour detection, contour following, 
optimization problems, dynamic programming, 
************************

************************
Document:  CACM-1331.html
************************


code structures for protection and manipulation of variable-length items

when items are made up of a variable number
of characters, each containing the same number 
of bits, certain control information (partition symbols)

************************

************************
Document:  CACM-2990.html
************************


effective information retrieval using term accuracy

************************
 using term accuracy

the performance of information retrieval systems
can be evaluated 
************************
 systems
can be evaluated in a number of different 
ways.  much of the published evaluation work is based
on measuring the retrieval performance of an average 
user query.  unfortunately, formal proofs are difficult
to construct for the average case.  in the present 
study, retrieval evaluation is based on optimizing the
performance of a specific user query.  the concept 
of query term accuracy is in troduced as the probability
of occurrence of a query term in the documents 
relevant to that query.  by relating term accuracy
to the frequency of occurrence of the term in the 
documents of a collection it is possible to give formal
proofs of the effectiveness with respect to a 
given user query of a number of automatic indexing systems
that have been used successfully in experimental 
situations.  among these are inverse document frequency
weighting, thesaurus construction, and phrase 
generation.

************************
, and phrase 
generation.

cacm march, 1977

yu, c. t.
salton, g.

information retrieval, automatic indexing, 
************************

************************
Document:  CACM-0137.html
************************


evaluating numbers expressed as strings of english words

cacm october, 1960

************************

************************
Document:  CACM-3087.html
************************


an english language question answering system
for a large relational database

by typing requests in english, casual users
will be able to obtain explicit answers from a 
large relational database of aircraft flight and maintenance
data using a system called planes.  the 
design and implementation of this system is described and
illustrated with detailed examples of the operation 
of system components and examples of overall system
operation.  the language processing portion of the 
system uses a number of augmented transition networks,
each of which matches phrases with a specific 
meaning, along with context registers (his tory keepers)
and concept case frames; these are used for judging 
meaningfulness of questions, generating dialogue for clarifying
partially understood questions, and resolving 
ellipsis and pronoun reference problems.  other system components
construct a formal query for the relational 
database, and optimize the order of searching relations.
 methods are discussed for handling vague or 
complex questions and for providing browsing ability.
 also included are discussions of important issues 
in programming natural language systems for limited domains,
and the relationship of this system to others. 

cacm july, 1978

waltz, d.

question answering, relational database, natural language,
database front end, artificial intelligence, 
dialogue, query generation, information retrieval, natural language programming 
************************
, natural language programming 

3.42 3.60 
************************

************************
Document:  CACM-1235.html
************************


a stochastic approach to the grammatical coding of english

a computer program is described which will
assign each word in an english text to its form 
class or part of speech.  the program operates at relatively
high speed in only a limited storage space. 
 about half of the word-events in a corpus are identified
through the use of a small dictionary of function 
words and frequently occurring lexical words.  some suffix

************************

************************
Document:  CACM-2253.html
************************


index ranges for matrix calculi

the paper describes a scheme for symbolic
manipulation of index expressions which arise as 
a by-product of the symbolic manipulation of expressions
in the matrix calculi described by the authors 
in a previous paper.  this scheme attempts program optimization
by transforming the original algorithm 
rather than the machine code.  the goal is to automatically
generate code for handling the tedious address 
calculations necessitated by complicated data structures.
 the paper is therefore preoccupied with "indexing 
by position."  the relationship of "indexing by
name" and "indexing by position" is discussed.

cacm december, 1972

bayer, r.
witzgall, c.

address calculations, algorithm transformation,
compilation, data structures, indexing by name, 
indexing by position, index domain, index map, index
range, matrix expressions, normal form, programming 
languages, program optimization, 
************************

************************
Document:  CACM-1809.html
************************


numerical analysis in a ph. computer science program

numerical analysis is the study of methods and
procedures used to obtain "approximate solutions" 
to mathematical problems.  much of the emphasis 
************************
.  much of the emphasis is on scientific
calculation.  the difficulties of education 
in such a broad area center around the question of background
and emphasis.  the numerical analysis program 
in the computer science department should emphasize an
awareness of the problems of computer implementation 
and experimental procedures.  nevertheless, there is a
need for a solid background in applied mathematics.

cacm december, 
************************

************************
Document:  CACM-2050.html
************************


automatic parsing for content analysis

although automatic syntactic and semantic analysis is not yet possible for
all of an unrestricted natural language text, some applications, of which 
content analysis is one, do not have such a stringent coverage requirement.
preliminary studies show that the harvard syntactic analyzer can
produce correct and unambiguous identification of the subject and
object of certain verbs for approximately half of the relevant occurrences. 
this provides a degree of coverage for content analysis variables which 
compares favorably to manual methods, in variables which compares favorably 
to manual methods, in which only a sample of the total available text is 
normally processed.

cacm june, 1970

damerau, f. j.

content analysis, parsing, syntactic analysis, natural language processing,
information retrieval, language analysis, 
************************

************************
Document:  CACM-2250.html
************************
************************
Document:  CACM-1516.html
************************
************************
Document:  CACM-0275.html
************************


dynamic storage allocation for an information retrieval system

cacm october, 
************************

************************
Document:  CACM-1745.html
************************


a position paper on computing and communications

the effective operation of free enterprise in
creating the envisioned information service industry 
is dependent upon three accomplishments: (1) the restructuring
of our information processing industry 
so that a clear division of costs is made among computing,
communications, and the development of information 
services; (2) the wide use of multiaccess system concepts
so that information services may share in the 
use of computer installations and so that the cost of their
construction is reasonable; and (3) 
************************

************************
Document:  CACM-2140.html
************************


retrieval-update speed tradeoffs using combined indices

in a paper in the november 1970 communications
of the acm, v. y. lum introduced a technique 
of file indexing named combined indices.  this technique
permitted decreased retrieval time at the cost 
of increased storage space.  this paper examines combined
indices under conditions of file usage with 
different fractions of retrieval and update.  tradeoff
curves are developed to show minimal cost of file 
usage by grouping various partially combined indices.

cacm december, 1971

mullin, j. k.

file organization, combined index files, inverted
files, information retrieval, query, multi-attribute 
************************

************************
Document:  CACM-0078.html
************************


remarks on the practical solution of characteristic value problems

this paper is concerned with the practical
solution of characteristic value problem for an 
ordinary differential equation.  it is at once apparent
that sequential computers, be they digital or 
analog, solve initial value problems, rather than boundary
value problems, and some mathematical process 
must be found to compensate for the machine's inadequacy.
 (compensating for machine imperfection is, 
of course, the normal activity of the numerical analyst.)
 a number of other papers have applied particular 
devices 
************************

************************
Document:  CACM-0681.html
************************


flexible abbreviation of words in a computer language

cacm november, 1963

************************

************************
Document:  CACM-2258.html
************************


additional results on key-to-address transform
techniques: a fundamental performance study on 
large existing formatted files

cacm november, 1972

lum, v. y.
yuen, p. s. t.

hashing, hashing techniques, hashing methods, hash
coding, keys, key transformation, key-to-address 
transformation, direct addressing, direct access method,
randomizing, random access file organization, 
file search, scatter storage, information retrieval

3.7 3.72 3.73 3.74 
************************

************************
Document:  CACM-1885.html
************************


a computer system for transformational grammar

a comprehensive system for transformational
grammar has been designed and implemented on the 
ibm 360/67 computer.  the system deals with the transformational
model of syntax, along the lines of 
chomsky's aspects of the theory of syntax. the major
innovations include a full,formal description of 
the syntax of a transformational grammar, a directed random
phrase structure generator, a lexical insertion 
algorithm, an extended definition of analysis, and
a simple problem-oriented programming language in 
which the algorithm 
************************
 in 
which the algorithm for application of transformations
can be expressed.  in this paper we present the 
system as a whole, first discussing the general attitudes underlying
the development of the system, then 
outlining the system and discussing its more important
special features.  references are given to papers 
which consider some particular aspect of the system in detail.

cacm june, 1969

friedman, j.

transformational grammar, natural language syntax,
language processing, language analysis, sentence 
generation, lexical insertion, computational 
************************

************************
Document:  CACM-2229.html
************************


construction of rational and negative powers of a formal series

some methods are described for the 
************************

************************
Document:  CACM-1830.html
************************


retrieval times for a packed direct access inverted file

cacm october, 1969

bayes, a. j.

information retrieval, direct access 
************************

************************
Document:  CACM-1643.html
************************
************************
Document:  CACM-3041.html
************************


median split trees: a fast lookup technique for frequently occuring keys

split trees are a new technique for searching sets
of keys with highly skewed frequency distributions. 
 a split tree is a binary search tree each node of which
contains two key values-a node value which is 
a maximally frequent key in that subtree, and a split
value which partitions the remaining keys (with 
respect to their lexical ordering) between the left and
right subtrees.  a median split tree (mst) uses 
the lexical median of a node's descendents as its split
value to force the search tree to be perfectly 
balanced, achieving both a space efficient representation
of the tree and high search speed.  unlike 
frequency ordered binary search trees, the cost of a
successful search of an mst is log n bounded and 
very stable around minimal values.  further, an mst
can be built for a given key ordering and set of 
frequencies in time n log n, as opposed to n2 for an
optimum binary search tree.  a discussion of the 
application of mst's to dictionary lookup for english is
presented, and the performance obtained is contrasted 
with that of other techniques.

cacm november, 1978

sheil, b.

tree search, dictionary lookup, binary search, heaps,
balanced trees, zipf's law, information retrieval

3.74 5.25 5.39

ca781110 
************************

************************
Document:  CACM-2389.html
************************


preliminary report on a system for general space planning

a computer language and a set of programs within
that language are described which allow the 
formulating and solving of a class of space planning
problems.  the language is an 
************************
.  the language is an extension of algol 
and includes means to represent spaces and objects, to manipulate
them, and to test the resulting arrangements 
according to a variety of constraints.  the algorithms
used to solve problems expressed in this language 
************************

************************
Document:  CACM-1441.html
************************


methods of numerical integration applied to
a system having trivial 
************************
 to
a system having trivial function evaluations

a study has been made to determine which methods
of numerical integration require the least 
computation time for a given amount of truncation error
when applied to a particular system 
************************

************************
Document:  CACM-0727.html
************************


on the approximate solution of delta(u)=f(u)

three-dimensional dirichlet problems for delta(u)=f(u),
fu >= 0, are treated numerically by 
an exceptionally fast, exceptionally accurate 
************************
, exceptionally accurate numerical
method.  programming details, numerous examples 
and mathematical theory are suppliedxtension of the
method in a natural way to n-dimensional problems 
is indicated by means 
************************

************************
Document:  CACM-1359.html
************************


data filtering applied to information storage and retrieval applications

manipulation 
************************
 applications

manipulation of data strings is the most complex
processing function in information storage 
and retrieval applications.  data 
************************
 applications.  data string manipulation
is discussed within the context of an interpretive 
processing environment controlled by the use of procedural
directives.  the sequence of procedural directives 
is derived from a job assumed to be expressed in a user-oriented
source language.  each data string with 
the structured data environment (data bank) is explicitly
or implicitly related to a format declaration

************************

************************
Document:  CACM-0661.html
************************


indexing and the lambda-notation

some methods of indexing sequentially 
************************

************************
Document:  CACM-1236.html
************************


the smart automatic document retrieval system-an illustration

a fully automatic document retrieval system
operating on the ibm 7094 is described.  the system 
is characterized by the fact that several hundred different
methods are available to analyze 
************************
 are available to analyze documents 
and search requests.  this feature is used in the retrieval
process by leaving the exact sequence of 
operations initially unspecified, and adapting the
search strategy to the needs of individual users. 
 the system is used not only to simulate an actual operating
environment, but also to test the effectiveness 
of the various available processing methods.  results obtained
so 
************************

************************
Document:  CACM-2905.html
************************


perfect hashing functions: a single
probe retrieving method for static sets

a refinement of hashing which allows retrieval
of an item in a static 
************************

of an item in a static table with a single probe 
is considered.  given a set i of identifiers, two methods
are presented for building, in a mechanical 
way, perfect hashing functions, i.e. functions 
************************
 functions, i.e. functions transforming
the elements of i into unique addresses. 
 the first method, the "quotient reduction" method, is
shown to be complete in the sense that for every 
set i the smallest table in which the elements of i
can be stored and from which they can be retrieved 
by using a perfect hashing function constructed by this
method can be found.  however, for nonuniformly 
distributed sets, this method can give rather sparse tables.
 the second method, the "remainder reduction" 
method, is not complete in the above sense, but it seems
to give minimal (or almost minimal) tables for 
every kind of set.  the two techniques are applicable
directly to small sets.  some methods to extend 
these results 
************************
 to extend 
these results to larger sets are also presented.  a rough
comparison with ordinary hashing is given which 
shows that this method can be used conveniently
in several practical applications.

cacm november, 1977

sprugnoli, r.

hashing, hashing methods, hash coding, direct 
************************

************************
Document:  CACM-2000.html
************************


a variation of the goodman-lance method for
the solution of two-point boundary value problems

a recently published method for the interpolative
solution of nonlinear equations is improved,
and applied to give a significant 
************************
 to give a significant variation of the goodman-lance
method for the solution of two-point boundary value problems. 
the resulting method applies in particular to the numerical solution
of optimal control problems in the euler-lagrange formulation.
quantitative estimates are presented which indicate that the variation
is nearly twice as fast on some problems in 
************************

************************
Document:  CACM-3134.html
************************


the use of normal multiplication tables
for information storage and retrieval

this paper describes a method for the organization and retrieval of attribute 
based information systems, using the normal multiplication table as a directory
for the information system.  algorithms for the organization an
d retrieval of information are described.  this method is particularly
suitable for queries requesting a group of information items,
 all of which possess 
************************
,
 all of which possess a particular set of attributes (and possibly
some other attributes as well).  several examples are given; the
results with respect to the number of disk accesses and disk space
are compared to other common approaches.  algorithms evaluating
the appropriateness of the above approach to a given information system
are described.  for a certain class of information systems,
the normal multiplication table method yields far more rapid retrieval
with a more economical 
************************

with a more economical space requirement than conventional systems.  
moreover this method incorporates an improved modification of the inverted 
file technique.

cacm march, 1979

motzkin, d.

information retrieval, inverted files, multiattribute 
************************

************************
Document:  CACM-1457.html
************************


data manipulation and programming problems
in automatic information retrieval

automatic information 
************************


automatic information retrieval programs require
the 
************************
 programs require
the manipulation of a variety of different 
data structures, including linear text, sparse matrices,
and tree or list structures.  the main data 
manipulations to be performed in automatic information
systems are first briefly reviewed.  a variety 
of data representations which have been used to describe
structured information are then examined, and 
the characteristics of various processing languages are
outlined in the 
************************
s are
outlined in the light of the procedures requiring 
implementation.  advantages of these programming languages
for the retrieval application are examined, 
************************
 application are examined, 
and suggestions are made for the design of programming
facilities to aid in information retrieval.

cacm march, 1966


************************

************************
Document:  CACM-2795.html
************************


sentence paraphrasing from a conceptual base

a model of natural language based on an underlying
language-free representation of meaning 
is described.  a program based on this model is able
to produce sentence paraphrases which demonstrate 
understanding with respect to a given context.  this
generator operates in conjunction with a natural 
language analyzer and a combined memory and inference model.
 in generating sentences from meaning structures, 
the program employs both the information retrieval and
deduction capabilities 
************************
 and
deduction capabilities of the memory model.  the 
model encompasses several diverse classes of linguistic
knowledge, which include: (1) executable tests 
of conceptual properties stored in discrimination nets;
(2) information relating conceptual to syntactic 
roles, stored in a word-sense dictionary, and (3) surface
grammatical knowledge, stored in a formal grammar.

cacm february, 1975

goldman, n. m.

artificial intelligence, natural language processing,
language 
************************

************************
Document:  CACM-2711.html
************************


a vector space model for automatic indexing

in a document retrieval, or other pattern matching

************************
, or other pattern matching
environment where stored entities (documents) 
are compared with each other or with incoming patterns
(search requests), it appears that the best indexing 
(property) space is one where each entity lies as far away
from the others as possible; in these circumstances 
the value of an indexing system may be expressible
as a function of the density of the object space; 
in particular, retrieval performance may correlate inversely
with space density.  an approach based on 
space density computations is used to choose an optimum
indexing vocabulary for a collection of documents. 
 typical evaluation results are shown, demonstrating
the usefulness of the model.

cacm november, 1975

salton, g.
wong, a.
yang, c. s.

automatic information retrieval, automatic

************************
 retrieval, automatic
indexing, content analysis, document 
************************

************************
Document:  CACM-2288.html
************************


file organization: the consecutive retrieval property

the consecutive retrieval property is an important
relation between a query set and record 
set.  its existence enables the design of an information
retrieval system with 
************************

retrieval system with a minimal search time 
and no redundant storage.  some important theorems on
the consecutive retrieval property are proved in 
this paper.  conditions under which the consecutive retrieval
property exists and remain invariant have 
been established.  an outline for designing an information
retrieval system based 
************************

retrieval system based on the consecutive 
retrieval property is also discussed.

cacm september, 1972

ghosh, s. p.

file organization, consecutive storage, consecutive
retrieval, information retrieval, record organization, 
************************

************************
Document:  CACM-2615.html
************************
************************
Document:  CACM-2730.html
************************


interactive consulting via natural language

interactive programming 
************************


interactive programming systems often contain
help commands to give the programmer on-line 
instruction regarding the use of the various systems
commands.  it is argued that it would be relatively 
easy to make these help commands significantly more
helpful by having them accept requests in natural 
language.  as a demonstration, 
************************
.  as a demonstration, weizenbaum's eliza program
has been provided with a script that turns 
it into a natural language system consultant.


************************
 system consultant.

cacm august, 1975

sharo, s. c.
kwasny, s. c.

interactive programming, time-sharing systems, natural
language processing, computer 
************************

************************
Document:  CACM-1162.html
************************
************************
Document:  CACM-0028.html
************************
************************
Document:  CACM-0891.html
************************


everyman's information retrieval system

the information 
************************
 system

the information retrieval problem whose solution

************************
 problem whose solution
is presented here was posed by a technical 
library with limited bubget and personnel.  the solution,
however, is quite general and is applicable 
to many different types of retrieval problems.  further,the
method 
************************
.  further,the
method of solution makes it possible for 
many groups who have previously dismissed an information
retrieval program as expensive 
************************
 program as expensive and difficult 
(from a programming stand-point) to reconsider their position,
for the present solution makes it possible 
to install an information retrieval program in less than

************************

************************
Document:  CACM-0655.html
************************


comit as an ir language

many of the features that make comit a good
all around symbol manipulation language also render 
it well suited to various types of information retrieval
programs.  presented 
************************

************************
Document:  CACM-2307.html
************************


dynamic document processing

the current role of computers in automatic
document processing is briefly outlined, and some 
reasons are given why the early promise of library automation
and of the mechanization of documentation 
processes has not been fulfilled.  a new dynamic document
environment is then outlined in which clustered
files are searched and information is retrieved following
an interactive user-controlled search process. 
 methods are described for an automatic query modification
based on user needs, and for a continuous 
reorganization of the stored information as a function of
earlier file processing and of normal collection 
growth.  the proposed procedures provide powerful tools
for information retrieval and for the control 
of dynamic library collections in which new items
are continually added and old ones are retired.

cacm july, 1972

salton, g.

automatic indexing, automatic search and 
************************

************************
Document:  CACM-0651.html
************************


a survey of languages and systems for information retrieval

cacm january, 1962

************************

************************
Document:  CACM-1703.html
************************


accommodating standards and identification of programming languages

the user public wants standardization and
reliable identification of programming languages 
and related services.  one way of achieving these goals
illustrated by the methods adopted for trac t-64 
interactive language, and its related family of languages.
 oppressive rigidity usually associated with 
standardization is avoided by a new accommodation technique
accessible to the user to allow local variations 
with the language.  explicit standardization of the language
is undertaken at the organizational source 
of the language.  use of the organizational trademark
(trac) on the published standards, and services 
relying upon them, provides a reliable public identification.
 these methods can be usefully applied 
to other programming 
************************

************************
Document:  CACM-1625.html
************************


on the automatic simplification of source-language programs

methods of simplification that 
************************
 of simplification that can be applied
automatically to programs written in an algol-like 
language are discussed.  the 
************************
 are discussed.  the simplifications are based
on the form of the program and the knowledge obtained 
by a processor, without any understanding of what the
program is supposed to do.  these methods have 
been implemented in a processor called sure that accepts
a program written in jovial and outputs an equivalent 
jovial program that may be shorter and may be executed
faster than the original.  sure is described, 
some of the problems encountered in automatic improvement
at the source-language level are discussed, 
************************

************************
Document:  CACM-2437.html
************************


general performance analysis of key-to-address
transformation methods using an abstract file 
concept

this paper presents a new approach to the analysis
of performance of the various key-to-address 
transformation methods.  in this approach the keys in
a file are assumed to have been selected from the 
key space according to a certain probabilistic selection
algorithm.  all files with the same number of 
keys selected from this key space will be suitably weighted
in accordance with the algorithm, and the 
average performance of the transformation methods on
these files will be used as the potential of these 
methods.  using this analysis, methods with the same overall
performance can be classified and key distributions 
partial to certain transformations can be identified.
 all this can be done analytically.  the approach 
is applied to a group of transformation methods
using files whose keys are selected randomly.

cacm october, 1973

lum, v. y.

hashing, hashing techniques, hashing methods, hash coding,
key transformation, key-to-address transformation, 
direct addressing, randomizing, random access, scatter
storage, information retrieval, hashing analysis, 

************************

************************
Document:  CACM-2764.html
************************


an intelligent analyzer and understander of english

the paper describes a working analysis and generation
program for natural language, which handles 
paragraph 
************************
, which handles 
paragraph length input.  its core is a system of preferential
choice between deep semantic patterns, 
based on what we call "semantic density."  the system
is contrasted: (1) with syntax oriented linguistic 
approaches, and (2) with theorem proving
approaches to the understanding problem.

cacm may, 1975

wilks, y.

artificial intelligence, computational linguistics,
template, paraplate, stereotype, machine translation, 
understanding, natural language processing,
semantic 
************************

************************
Document:  CACM-1725.html
************************


a simple proof of lewin's ordered-retrieval
theorem for associative memories

an efficient method of ordered retrieval of binary
words from an associative 
************************
 from an associative memory, as described
by lewin, is based on the use of special readout circuits
which indicate the digit values present in 
the individual digit columns of the memory.  thus the
circuits indicate whether the individual digit 
columns contain digits of both values, or of only one
value, or contain no digits at all (i.e. that the 
memory is empty).  the use of these circuits, which
in this paper are termed column value indicators, 
reduces considerably the number of memory accesses necessary
to retrieve in order a number of distinct 
words from the memory.  lewin proves that, for the readout
by the described method of m distinct binary 
words, 2m - 1 memory accesses are necessary.  (thus he
proves that the number of necessary memory accesses 
of his method, unlike those of other methods, is independent
of the word length.)  in this paper a very 
simple proof of this theorem derived from some elementary
aspects of the structure of sets of binary 
numbers is presented.

cacm july, 1968

wolinsky, a.

associative memories, content-addressed memories,
ordered lists, ordered information retrieval, 
ordered retrieval 
************************

************************
Document:  CACM-0102.html
************************
************************
Document:  CACM-1699.html
************************


experimental evaluation of information
retrieval through a teletypewriter

************************
 through a teletypewriter

experiments designed to evaluate the capabilities
of mechanized information retrieval systems, 
with emphasis 
************************
 systems, 
with emphasis on interactive (man-machine) language and on
some of the mechanical and psychological limitations 
in their design, were conducted at the moore school information
systems laboratory.  the basic assumption 
of the research is that an information retrieval system
that provides 
************************
 system
that provides for man-machine dialogue at a remote 
inquiry terminal should provide a searcher with many
of the tools which would be available to him were 
he actually performing his search at a library or repository
of documents.  factors involved in evaluation 
of such a system include ease of use, learning time, and
effectiveness of actual retrieval.  three experiments 
and the conclusions resulting from them are detailed.

cacm september, 1968

rubinoff, m.
bergman, s.
franks, w.
rubinoff, e.

information retrieval testing,  information system
evaluation, experimental document retrieval, 
document retrieval, document perusal, man-machine communication,
remote console communication, teletypewriter 
communication, remote terminal communication, retrieval
command language, symbolic command language, 
************************

************************
Document:  CACM-2631.html
************************


an information-theoretic approach to
text searching in direct access systems

using direct access computer files of bibliographic
information, an attempt is made to overcome 
one of the problems often associated with information
retrieval, namely, the maintenance 
************************
, namely, the maintenance and use of large 
dictionaries, the greater part of which is used only
infrequently.  a novel method is presented, which 
maps the hyperbolic frequency distribution.  this is
more suited to implementation on storage devices. 
 this method treats text as a string of characters rather
than words bounded by spaces, and chooses subsets 
of strings such that their frequencies of occurrence are
more even than those of word types.  the members 
of this subset are then used as index keys for retrieval.
the rectangular distribution 
************************
.
the rectangular distribution of key frequencies 
results in a much simplified file organization
and promises considerable cost advantages.

cacm june, 1974

barton, i. j.
creasey, s. e.
lynch, m. f.
snell, m. j.

text searching, information theory, file organization,
direct access, information retrieval, character 
string, 
************************

************************
Document:  CACM-0329.html
************************


automatic abstracting and indexing survey and recommendations

in preparation for the widespread use of automatic
scanners which will read documents and transmit 
their contents to other machines for analysis, this report
presents a new concept in automatic analysis: 
the relative-frequency approach to measuring  the significance
of words, word groups, and sentences. 
************************
, word groups, and sentences. 
 the relative-frequency approach is discussed in detail,
as is its application to problems of automatic 
indexing and automatic abstracting. 
************************

************************
Document:  CACM-3139.html
************************
************************
Document:  CACM-2070.html
************************


a formal system for information retrieval from files

cacm april, 
************************

************************
Document:  CACM-0490.html
************************
************************
Document:  CACM-1456.html
************************


storage and retrieval of aspects of meaning in directed graph structures

an experimental system that uses lisp to make
a conceptual dictionary is described.  the dictionary 
associates with each english word the syntactic information,
definitional material, 
************************
,
definitional material, and references to 
the contexts in which it has been used to define other words.
 such relations as class inclusion, possession, 
and active or passive actions are used as definitional
material.  the resulting structure serves as a 
powerful vehicle for research on the logic of question answering.
 examples of methods of inputting information 
and answering simple english questions are given. 
************************

************************
Document:  CACM-1888.html
************************


spline function methods for nonlinear boundary-value problems

the solution of the 
************************


the solution of the nonlinear differential equation
y"=f(x,y,y') with two-point boundary conditions 
is approximated by a quintic or cubic spline function
y(x).  the method is well suited to nonuniform 
mesh size and dynamic mesh size allocation.  for uniform
mesh size h, the error in the quintic spline 
y(x) is o(h^4), with typical error one-third that from
numerov's method.  requiring the differential 
equation to be satisfied at the mesh points results
in a set of difference equations, which are block 
tridiagonal and so are easily solved by relaxation or other standard methods.

cacm june, 1969

blue, j. l.

boundary value problems, differential equations,

************************

************************
Document:  CACM-1527.html
************************


a grammar base question answering procedure

the subject of this paper is a procedure for
the automatic retrieval of certain segments of 
stored information, either explicitly or implicitly represented,
through questions posed in natural language 
sentences.  this procedure 
************************
 
sentences.  this procedure makes use of a sentence recognition
device for the class of grammars which 
will correctly decide between the grammatical and ungrammatical
sentences of a natural language.  it 
is possible to 
************************
.  it 
is possible to make use of a recognition device of this
sort for the following reason: much data is fully 
expressible as a set of sentences in a natural language,
a set which can be 
************************

************************
Document:  CACM-1049.html
************************


numerical solution of nonlinear two-point
boundary problems by finite difference methods

solution of nonlinear 
************************

************************
Document:  CACM-1517.html
************************
************************
Document:  CACM-1525.html
************************


on computing the fast fourier transform

cooley and tukey have proposed a fast algorithm
for computing complex fourier transform and 
have shown major time savings in using it to compute
large transforms on a digital computer.  with n 
a power of two, computing time for this algorithm is
proportional to n log2 n, a major improvement over 
other methods with computing time proportional to n^2.
 in this paper, the fast fourier transform algorithm 
is briefly reviewed and fast difference equation methods
for accurately computing the needed trigonometric 
function values are given.  the problem of computing
a large fourier transform on a system with virtual 
memory is considered, and a solution is proposed.  this
method has been used to compute complex fourier 
transforms of size n = 2^16 on a computer with 2^15
words of core storage; this 
************************

************************
Document:  CACM-1808.html
************************


advanced cryptographic techniques for computers

cryptographic techniques which can be used to
maintain the confidentiality of information processed 
by computers are dealt with.  special emphasis is paid
to the unique characteristics of computer files 
that make many cryptographic methods of little use.
 relative 
************************
 of little use.
 relative security, costs, and preferred methods 
are included in this paper.

cacm december, 1969

van tassel, d.

cryptographic, cryptanalysis, ciphers secrecy systems,
security systems, confidential information 
processing

1.3 2.12 
************************

************************
Document:  CACM-2278.html
************************


on foster's information storage and retrieval using avl trees

cacm 
************************
 using avl trees

cacm september, 1972

tan, k. c.

binary trees, search trees, information storage, information retrieval

3.70 3.73 3.74

ca720912 
************************

************************
Document:  CACM-1700.html
************************


peekabit, computer offspring of punched
card peekaboo, for natural language searching

the "peekaboo" idea from punched card information
retrieval methods has been mated with 
************************
 has been mated with the 
idea of superimposed punching to produce a programming
technique which cuts computer run time in half 
on a test search of 33,000 subject index entries.  a search
program using the device has been operational 
since late 1963.  as an item is entered in the store,
an 18-byte mask is created from the item's meaningful 
words using the inclusive or operation.  if, at search
time, the logical product (using the and operation) 
of this mask and a similarly constructed question mask
is not equal to the question mask, then one or 
more question words are not present in the store item.
 an equality is in conclusive; the words of the 
store item must be unpacked and compared with question
words.  the present store is made up of over 600,000 
subject index entries estimated to average 60 characters
each.  longer texts, such as abstracts, could 
be handled by multiple masks.

cacm september,1968

hutton, f. c.

peekaboo, superimposed coding, natural language
searching text searching, 
************************

************************
Document:  CACM-2246.html
************************
************************
Document:  CACM-2403.html
************************
************************
Document:  CACM-0144.html
************************


do it by the numbers-digital shorthand

present communications systems transmit single
characters in groups of coded pulses between 
simple terminal equipments.  since english words form only
a sparse set 
************************
 form only
a sparse set of all possible alphabetic combinations, 
present methods are inefficient when computer systems
are substituted for these terminals.  using numeric 
representations of entire words or common phrases (rather
than character-by-character representations) 
requires approximately one-third of present transmission
time.  this saving is reflected in overall costs. 
 other benefits accrue in code and language translation
schemes. provision is made for transmission of 
purely numeric and/or binary streams, and for single
character-transmission of non-dictionary words such 
as the names 
************************

************************
Document:  CACM-2516.html
************************


hierarchical storage in information retrieval

a probabilistic analysis 
************************


a probabilistic analysis is employed to determine
the effect of hierarchical storage organizations 
on information retrieval operations.  the data 
************************
 operations.  the data storage
hardware is assumed to consist on n-levels of 
linearly connected memory hardware with increasing data
access times and increasing data storage capabilities. 
 a system might, for example, consist of fast semiconductor
memory, computer core memory, extended core 
storage, disk memory, and data cells.  equations are derived
to predict the effect of such a system on 
data access times using sequential files, random access files,
and structured files employing multiple-hierarchical 
linked lists.

cacm may, 1973

salasin, j.

information retrieval, hierarchical storage

************************

************************
Document:  CACM-2484.html
************************


a note on information organization and storage

since the logical structure of a data base
can be represented by a tree or graph, it is quite 
natural for us to view the process of designing a data
base as that of constructing a tree or a graph. 
 a general method for constructing such a tree or a graph
is provided.  there are three important elements 
in this general construction method; namely, a set of
binary relations, an algorithm for constructing 
subsets of a set, and an algorithm for selecting an
element from the given set of objects.  the use of 
different relations and algorithms results in different
information structures, as list, tree, ring, 
etc.  thus the problem of information organization and
storage is reduced to that of defining relations 
and formulating algorithms under a given set of constraints.
 the results presented may be valuable to 
designers as useful design concepts, and may serve as
a basis for developing a formal theory on the subject.

cacm july, 1973

huang, j. c.

data base, data-base management, information retrieval,
information structure, 
************************

************************
Document:  CACM-2705.html
************************


programming languages, natural languages, and mathematics

************************
 languages, and mathematics

some social aspects of programming are illuminated
through analogies with similar aspects of 
mathematics and natural languages.  the split between
pure and applied mathematics is found 
************************
 mathematics is found similarly 
in programming. the development of natural languages toward
flexion less, 
************************
s toward
flexion less, word-order based language types 
speaks for programming language design based on general,
abstract constructs.  by analogy with incidents 
of the history of artificial, auxiliary languages it
is suggested that fortran and cobol will remain 
dominant for a long time to come.  the most promising
avenues for further work of wide influence are 
seen to be high quality program literature (i.e. programs)
of general utility and studies of questions 
related to program style.

cacm december, 1975

naur, p.

analogies related to social aspects,pure and applied
mathematics, language 
************************

************************
Document:  CACM-1454.html
************************
************************
Document:  CACM-2084.html
************************
************************
Document:  CACM-1620.html
************************
************************
Document:  CACM-2739.html
************************


the restriction language for computer grammars of natural language

over the past few years, a number of systems
for the computer analysis of natural language 
sentences have been based on augmented context-free
grammars: a context-free grammar which defines a 
set of parse trees for a sentence, plus a group of restrictions
to which a tree must conform in order 
to be a valid sentence analysis.  as the coverage of the
grammar is increased, an efficient representation 
becomes essential for further development.  this paper
presents a programming language designed specifically 
for the compact and perspicuous statement of restrictions
of a natural language grammar.  it is based 
on ten years' experience parsing text sentences with
the comprehensive english grammar of the n. 
linguistic 
************************
 grammar of the n. 
linguistic string project, and embodies in its syntax
and routines the relations which were found to 
be useful and adequate for computerized natural language
analysis.  the language 
************************

analysis.  the language is used in the current 
implementation of the linguistic string parser.

cacm july 1975

sager, n.
grishman, r.

natural language, parsing, grammar, 
************************

************************
Document:  CACM-1048.html
************************


approximate solution of axially symmetric problems

a variety of physical problems in such diverse
fields as electrostatic  field theory, heat 
and ideal fluid flow, and stress concentration theory
reduce, under the assumption of axial symmetry, 
to the study of an elliptic partial differential equation.
 dirichlet-type problems associated with this 
equation are studied on regions whose boundaries include
a nondegenerate portion of the x-axis and exceedingly 
accurate numerical methods are given for approximating 
************************

************************
Document:  CACM-0105.html
************************
************************
Document:  CACM-1032.html
************************


theoretical considerations in information retrieval systems

information 
************************
 systems

information storage and retrieval systems are composed

************************
 systems are composed
of three major components: (a) identification 
of information and tagging it for effective retrieval,
(b) searching strategy, 
************************
,
(b) searching strategy, how to enter the file 
to circumvent the scanning of nonrelevant material, and
(c) file organization to make access to information 
efficient.  for identification of information the paper
suggests that a metalanguage (recently discussed 
************************

************************
Document:  CACM-1926.html
************************


description of format, a text-processing program

format is a production program which facilitates
the editing and printing of "finished" documents 
directly on the printer of a relatively small (64k) computer
system.  it features good performance, totally 
free-form input, very flexible formatting capabilities
including up to eight columns per page, automatic 
capitalization, aids for index construction, and a
minimum of nontext items.  it is written entirely 
************************
.  it is written entirely 
in fortran iv.

cacm march, 1969

berns, g. m.

text processing, indexing, printing, documentation,
text editing, formatting, frequency dictionary, 
right justification, 
************************

************************
Document:  CACM-1855.html
************************


a program for the syntactic analysis of english sentences

a program is described which produces syntactic
analyses of english sentences with respect 
to a transformational grammar.  the main features of the
analyzer are that it uses only a limited dictionary 
of english words and that it pursues 
************************
 and that it pursues all analysis paths
simultaneously while processing the sentence 
from left to right.  the form of representation used
for the dictionary and the grammar is indicated 
and an outline account is given of the analysis procedure.
 techniques for keeping the size of the analysis 
record within reasonable limits and for avoiding the need
for dynamic application of certain transformational 
rules are described.   a number of examples of output
produced by the program are given.  the output 
includes timing information.

cacm august, 1969

dewar, h.
bratley, p.

syntactic analysis, language processing, language
analysis, parsing, analysis procedure, recognition 
procedure, english sentences, linguistics, 
************************

************************
Document:  CACM-2688.html
************************


attribute based file organization in a paged memory environment

the high cost of page accessing implies a need
for more careful data organization in a paged 
memory than is typical of most inverted file and similar
approaches to multi-key retrieval.  this article 
analyses 
************************
.  this article 
analyses that cost and proposes a method called multiple
key hashing which attempts to minimize it.  
since this approach is not always preferable to inversion,
a combined method is described.  the exact 
specifications of this combination for a file with given
data and traffic characteristics is formulated 
as a mathematical program.  the proposed heuristic solution
to this program can often improve on a simple 
inversion technique by a factor of 2 or 3.

cacm february,1974

rothnie, j. b. jr.
lozano, t.

file organization, paging, retrieval algorithm,
inverted 
************************

************************
Document:  CACM-1635.html
************************
************************
Document:  CACM-1186.html
************************
************************
Document:  CACM-0380.html
************************
************************
Document:  CACM-2932.html
************************


complexity of computations

the framework for research in the theory of complexity
of computations is described, emphasizing 
the in terrelation between seemingly diverse problems
and methods.  illustrative examples 
************************

************************
Document:  CACM-2808.html
************************


the lemniscate constants

the lemniscate constants, and indeed some
of the methods used for actually computing them, 
have played an enormous part in the development of
mathematics.  an account is given here of some of 
the methods used-most of the derivations can be made
by elementary methods.  this material can be used 
for teaching purposes, and there is much relevant and
interesting historical material.  the acceleration 
methods developed for the purpose of evaluating
these constants are useful in other problems.

cacm january, 1975

************************

************************
Document:  CACM-2832.html
************************


faster retrieval from context trees (corrigendum)

************************

************************
Document:  CACM-1619.html
************************
************************
Document:  CACM-2268.html
************************


a comparative study of computer programs
for integrating differential equations

a study comparing the performance of several computer
programs for integrating systems of ordinary 
differential equations is reported.  the integration methods represented
include multistep methods (predictor-correctors), 
single-step methods (runge-kutta) and extrapolation methods
(both polynomial and rational).  the testing 
procedure is described together with the evaluation
criteria applied.  a set of test problems 
************************

