Snippets for the query:  Q34
************************
Total Hits:  134
************************

************************
Document:  CACM-0111.html
************************


on programming the numerical solution of polynomial equations

numerical techniques are presented for computing
the roots of polynomial equations.  by applying 
the recommended scaling and inversion rules, the basic
bairstow and newton-raphson iterative techniques 
can be applied with great reliability.  both a high degree
of accuracy and rapid convergence are realized. 
 numerical examples are shown to illustrate 
************************

************************
Document:  CACM-1154.html
************************


multi-tape and infinite-state automata -- a survey

a survey of machines which are more powerful
than finite automata and less powerful than general 
turing machines is presented.  it is felt that the machines
in this category are as closely related to 
digital computers as either the finite automata or the
unrestricted turing machines.  intermediate machines 
can be created by adjoining on infinite-state memory
to a finite-state machine and then performing any 
or all of the following: (1) restrict the manner in
which the unbounded portion of the memory can be 
accessed, (2) bound the number of steps allowed for a
computation by some increasing recursive function 
of the length of the input, (3) restrict the total amount
of memory available in the same manner.  examples 
from all three classes 
************************

************************
Document:  CACM-2458.html
************************


localization of the roots of a polynomial (algorithm r429)

cacm august, 
************************

************************
Document:  CACM-1243.html
************************
************************
Document:  CACM-0388.html
************************


solution of polynomial equations by
bairstow hitchcock method (algorithm 3)

cacm february, 1961

************************

************************
Document:  CACM-2884.html
************************


permutation enumeration: four new permutation algorithms

classical permutation 
************************
s

classical permutation enumeration algorithms encounter
special cases 
************************
s encounter
special cases requiring additional computation 
every nth permutation when generating the n! permutations
on n marks.  four new algorithms have the attribute 
************************
s have the attribute 
that special cases occur every n(n-1)permutations. 
two of the algorithms produce the next permutation 
************************
s produce the next permutation 
with a single exchange of two marks.  the other two algorithms
infrequently exchange 
************************
s
infrequently exchange more than two marks, 
but the rules for generating the next permutation are
very simple.  performance tests which have counted 
execution of assignment statements, comparisons, arithmetic
operations, and subscripted array references 
have shown superiority of the new algorithms compared to
boothroyd's 
************************
s compared to
boothroyd's implementation of m. b. well's algorithm 
and ehrlich's implementation of the johnson-trotter algorithm.

cacm february, 1976

ives, f. m.

permutations, loop-free algorithms

5.30

ca760203 jb january 
************************

************************
Document:  CACM-2170.html
************************


applications of symbol manipulation in theoretical physics

this paper surveys the applications of symbolic
computation techniques 
************************

computation techniques to problems in theoretical 
physics.  particular emphasis is placed on applications
in quantum electrodynamics where the most activity 
has occurred.

cacm august, 1971

hearn, a. c.

symbol manipulation, algebraic simplification,
computational 
************************

************************
Document:  CACM-0393.html
************************


two subroutines for symbol manipulation with an algebraic compiler

cacm february, 
************************

************************
Document:  CACM-2676.html
************************


zeros of a complex polynomial (algorithm r419)

cacm march, 1973

************************

************************
Document:  CACM-2997.html
************************


convex hulls of finite sets of poin ts in two and three dimensions

the convex hulls of sets of n poin ts in two
and three dimensions can be determined with o(n 
log n) operations.  the presented algorithms use the "divide
and 
************************
s use the "divide
and conquer" technique and recursively apply 
a merge procedure for two nonin tersecting convex hulls.
 since any convex hull algorithm requires at 
least o(n log n) operations, the time complexity of the
proposed algorithms is optimal within a 
************************
 is optimal within a multiplicative 
constant.

cacm february, 1977

preparata, f. p.
hong, s. j.

computational complexity, convex hull, optimal algorithms,
planar set of poin 
************************

************************
Document:  CACM-2090.html
************************


symbolic expansion of algebraic expressions (algorithm 377 $r2))

cacm march, 1970

levine, m. j.

algebra, symbolic algebra, symbolic
multiplication, algebraic distribution,
algebraic multiplication, distribution algorithm,
multiplication algorithm, product 
algorithm, polynomial distribution, polynomial 
************************

************************
Document:  CACM-1667.html
************************


roots of polynomials by a root-squaring
and resultant routine (algorithm 340 [c2])

cacm november, 1968

noltemeier, a.

root finders, roots of polynomial equations, polynomial
zeros, root-squaring operations, graeffe 
method, resultant procedure, subresultant procedure,
testing of roots, acceptance 
************************

************************
Document:  CACM-1386.html
************************


symbolic factoring of polynomials in several variables

an algorithm for finding the symbolic factors of
a multi-variate polynomial with integer coefficients 
is presented.  the algorithm is an extension of a technique
used by kronecker in a proof that the prime 
factoring of any polynomial may be found in a finite number
of steps.  the algorithm consists of factoring 
single-variable instances of the given polynomial by
kronecker's method and introducing the remaining 
variables by interpolation.  techniques for implementing the
algorithm and several examples are discussed. 
 the 
************************
 are discussed. 
 the algorithm promises sufficient power to be used efficiently
in an online system for symbolic mathematics.

cacm august, 
************************

************************
Document:  CACM-0342.html
************************


solution of polynomial equation by barstow-hitchcock (algorithm 3)

cacm april, 1961

************************

************************
Document:  CACM-2283.html
************************


thinning algorithms on rectangular, hexagonal, 
************************
s on rectangular, hexagonal, and triangular arrays

in this report three thinning algorithms are
developed: one 
************************
s are
developed: one each for use with rectangular, 
hexagonal, and triangular arrays.  the approach to the
development of each algorithm is the same.  pictorial 
results produced by each of the algorithms are presented
and the 
************************
 are presented
and the relative performances of the algorithms 
are compared.  it 
************************
s 
are compared.  it is found that the algorithm operating
with the triangular array is the most sensitive 
to image irregularities and noise, yet it will yield
a thinned image with an overall reduced number of 
points.  it is concluded that the algorithm operating in
conjunction with the hexagonal array has features 
which strike a balance between those of the other two arrays.

cacm september, 1972

deutsch, e. s.

thinning algorithms, rectangular, hexagonal,

************************

************************
Document:  CACM-2165.html
************************


general relativity and the application of algebraic manipulative systems

the paper describes some applications of symbolic
algebra systems to problems of general relativity 
including the derivation of the field equations, the
petrov classification of a metric, and the solution 
of the field equations in the presence of matter in
a simple case.  attention is drawn to the strictly 
algebraic difficulties encountered in this work.

cacm august, 1971

barton, d.
fitch, j. p.

symbolic mathematics,nonnumerical mathematics, general
relativity, algebraic manipulation, equation 
manipulation

************************

************************
Document:  CACM-2266.html
************************


a highly parallel algorithm for approximating
all zeros of a polynomial with only real zeros

************************
 with only real zeros

an algorithm is described based on newton's
method which simultaneously approximates all zeros 
of a polynomial with only real zeros. 
************************
 with only real zeros.  the algorithm, which
is conceptually suitable for parallel computation, 
determines its own starting values so that convergence
to the zeros is guaranteed.  multiple zeros and 
their multiplicity are readily determined.  at no
point in the method is polynomial deflation used.

cacm november, 1972

patrick, m. l.

parallel numerical algorithms, real polynomials,
real 
************************

************************
Document:  CACM-0341.html
************************


chebyschev polynomial (algorithm 10)

cacm april, 1961 
************************

************************
Document:  CACM-0937.html
************************


inverse of a finite segment of the hilbert matrix (algorithm 50)

cacm january, 1963

************************

************************
Document:  CACM-2253.html
************************


index ranges for matrix calculi

the paper describes a scheme for symbolic
manipulation of index expressions 
************************
 of index expressions which arise as 
a by-product of the symbolic manipulation of expressions
in the 
************************
 of expressions
in the matrix calculi described by the authors 
in a previous paper.  this scheme attempts program optimization
by transforming the original algorithm 
rather than the machine code.  the goal is to automatically
generate code for handling the tedious address 
calculations necessitated by complicated data structures.
 the paper is therefore preoccupied with "indexing 
by position."  the relationship of "indexing by
name" and "indexing by position" is discussed.

cacm december, 1972

bayer, r.
witzgall, c.

address calculations, algorithm transformation,
compilation, data structures, indexing by name, 
indexing by position, index domain, index map, index
range, matrix expressions, normal form, programming 
languages, program optimization, range operations, symbolic
manipulation, syntactic analysis, 
************************

************************
Document:  CACM-0351.html
************************


inverse of a finite segment of the hilbert matrix (algorithm 50)

cacm april, 1961

************************

************************
Document:  CACM-2169.html
************************


the altran system for rational function manipulation-a survey

altran is a complete system for symbolic computation
with rational 
************************
 computation
with rational functions in several variables 
with integer coefficients.  it has been designed and
implemented to handle large problems with ease and 
efficiency.  considerable effort has been spent to ensure
a minimum amount of machine dependence in the 
implementation, thus permitting the system to be installed
quickly and easily on a variety of computing 
machines.  in this paper a brief description of the language,
run time data structures, and implementation 
is given.

cacm august, 1971

hall jr., a. d.

symbolic algebra, rational function manipulation,
polynomial manipulation, 
************************
,
polynomial manipulation, interpreters, translators

************************

************************
Document:  CACM-0125.html
************************


polynomial transformer (algorithm 29)

cacm november, 
************************

************************
Document:  CACM-0112.html
************************


numerical solution of the polynomial equation (algorithm 30)

cacm december, 
************************

************************
Document:  CACM-0647.html
************************


numerical solution of the polynomial equation (algorithm 30)

cacm january, 1962

************************

************************
Document:  CACM-1144.html
************************


digital computer determination of alpha source activity

a technique is described for determining the
activity and homogeneity of an alpha source.  
it is believed that the technique, using a digital computer,
has many uses and applications in the field 
of nuclear physics. the technique involves computer
manipulation of the digital image 
************************

************************
Document:  CACM-0371.html
************************


remarks on algorithms 2 and 3, algorithm 
************************
s 2 and 3, algorithm 15 and algorithms 25 and 26

cacm march, 
************************

************************
Document:  CACM-2627.html
************************


scheduling independent tasks to reduce mean finishing time

sequencing to minimize mean finishing time
(or mean time in system) is not only desirable to 
the user, but it also tends to minimize at each point
in time the storage required to hold incomplete 
tasks.  in this paper a deterministic model of independent
tasks is introduced and new results are derived 
which extend and generalize the algorithms known for
minimizing 
************************
s known for
minimizing mean finishing time.  in addition to 
presenting and analyzing new algorithms it is shown
that the 
************************
s it is shown
that the most general mean-finishing-time problem 
for independent tasks is polynomial complete, and hence unlikely
to admit of a non-enumerative solution

cacm july, 1974

bruno, j.
coffman, e. g. jr.
sethi, r.

minimizing mean finishing time, minimizing mean flow
time, sequencing algorithms, optimal scheduling 
************************
s, optimal scheduling 
algorithms, deterministic scheduling 
************************

************************
Document:  CACM-3031.html
************************


abstract data types and software validation

a data abstraction can be naturally specified
using algebraic axioms.  the virtue of these 
axioms is that they permit a representation-independent
formal specification of a data type.  an example 
is given which shows how to employ algebraic axioms at
successive levels of implementation.  the  major 
thrust of the paper is twofold.  first, it is shown how
the use of algebraic axiomatizations can simplify 
the process of proving the correctness of an implementation
of an abstract data type.  second, semi-automatic 
tools are described which can be used both to automate
such proofs of correctness and to derive an immediate 
implementation from the axioms.  this implementation
allows for limited testing of programs at design 
************************

************************
Document:  CACM-2560.html
************************
************************
Document:  CACM-1252.html
************************
************************
Document:  CACM-1166.html
************************
************************
Document:  CACM-1643.html
************************
************************
Document:  CACM-1080.html
************************


chebyshev polynomial coefficients (algorithm 227)

cacm may, 1964

************************

************************
Document:  CACM-2414.html
************************


arithmetic overa finite field [a1] (algorithm a469)

************************

************************
Document:  CACM-0340.html
************************


legendre polynomial (algorithm 13)

cacm april, 1961

************************

************************
Document:  CACM-2226.html
************************


further evidence for the analysis of algorithms
for the zero-one programming 
************************
s
for the zero-one programming problem

the purpose of this note is to report computational
experience additional to that recently 
summarized by gue et al, with two algorithms for the
zero-one linear 
************************
s for the
zero-one linear programming problem.  an error in 
gue's paper is corrected.  the utility of one of
the algorithms as a suboptimizer is 
************************
s as a suboptimizer is indicated.

cacm january, 1971

proll, l. g.

operations research, integer programming, zero-one variables, algorithms

5.39 5.41

ca710108 
************************

************************
Document:  CACM-1244.html
************************
************************
Document:  CACM-1524.html
************************


a stopping criterion for polynomial root finding

when searching for the root of a polynomial,
it is generally difficult to know just when to 
accept a number as an adequate approximation to the root.
 in this paper an algorithm is presented which 
allows one to terminate the iteration process on the
basis of calculated bounds for the roundoff error 
which occurs in evaluating the polynomial.  this stopping
criterion has been tested on numerous examples 
and has been found 
************************

************************
Document:  CACM-3071.html
************************


an algorithm using symbolic techniques for the
bel-petrov 
************************
 techniques for the
bel-petrov classification of gravitational fields

in this note, an algorithm is presented for the
symbolic calculation of certain algebraic invariants 
of the weyl 
************************
 invariants 
of the weyl tensor which permits the determination
of the bel-petrov types of a gravitational field. 
 this algorithm, although more specialized than that
of d'inverno and russell-clark, requires neither 
the use of a special coordinate system nor the spin coefficient
formalism.  the algorithm has been implemented 
in formac and is designed to complete the classification
scheme proposed by petrov in his book.  an appendix 
contains examples illustrating the use of the algorithm.

cacm september, 1978

harris, r.
zund, j.

general relativity, bel-petrov types,
formac, symbolic manipulation, tensors

3.11 3.15 
************************

************************
Document:  CACM-3175.html
************************


breaking substitution ciphers using a relaxation algorithm

substitution ciphers are codes in which each letter
of the alphabet has one fixed substitute, and the word divisions 
do not change.  in this paper the problem of breaking substitution
ciphers is represented as a probabilistic labeling problem.
every 
************************
 labeling problem.
every code letter is assigned probabilities of representing plain text
letters.  these probabilities are updated in parallel for all
code letters, using joint letter probabilities.  iterating the updating
scheme results in improved estimates that finally lead to
breaking the cipher.  the method is applies successfully to two examples.

cacm november, 1979

peleg, s.
rosenfeld, a.

cryptography, substitution ciphers,
probabilistic classification, relaxation

************************

************************
Document:  CACM-1689.html
************************


calculation of a polynomial and its derivative
values by horner scheme (algorithm 337 [c1])

cacm september, 
************************

************************
Document:  CACM-0062.html
************************
************************
Document:  CACM-2240.html
************************


pseudo-random numbers [g5] (algorithm c266)

cacm december, 1972

sullins, w. l.

pseudo-random numbers, testing random number generators

************************

************************
Document:  CACM-0496.html
************************
************************
Document:  CACM-1940.html
************************


calculation of a polynomial and its derivative
values by horner scheme (algorithm 337 [c1])

cacm january, 
************************

************************
Document:  CACM-0177.html
************************


solution of polynomial equation by bairstow
hitchcock method, a. a. grau communications acm, 
february, 1960 (algorithm)

cacm june, 1960

thacher 
************************

************************
Document:  CACM-0182.html
************************


evaluation of the chebyshev polynomial tn(x) by recursion (algorithm) 

cacm june, 1960


************************

************************
Document:  CACM-2166.html
************************


automated algebraic manipulation in celestial mechanics

************************
 in celestial mechanics

in this paper we consider some of the applications
of automated algebraic manipulation which 
have been made 
************************
 which 
have been made in celestial mechanics.  particular attention
is paid to the use of poisson series, and 
a typical problem in perturbation theory is described.
 the requirements of processors for use in celestial 
mechanics are considered and compared with those for general
manipulation packages.  some future directions 
for research using these systems are briefly outlined.
 to illustrate the relative simplicity of the 
algorithm required in celestial 
************************

************************
Document:  CACM-2950.html
************************


a unifying approach to scheduling

this paper presents a scheme for classifying
scheduling algorithms based on an abstract 
************************
s based on an abstract model 
of a scheduling system which formalizes the notion of
priority.  various classes of scheduling algorithms
are defined and related 
************************
s
are defined and related to existing algorithms.  a
criterion for the 
************************
s.  a
criterion for the implementation efficiency of an 
algorithm is developed and results in the definition
of time-invariant algorithms, which include most 
************************
, which include most 
of the commonly implemented ones.  for time-invariant
algorithms, the dependence of 
************************
s, the dependence of processing rates 
on priorities is derived.  the abstract model provides
a framework for implementing flexible schedulers 
in real operating systems.  the policy-driven scheduler
of bernstein and sharp is discussed as an example 
of such an implementation

cacm july, 1977

ruschitzka, m.
fabry, r. s.

scheduling algorithms, scheduling models, 
************************

************************
Document:  CACM-1474.html
************************


tests of probabilistic models for propagation of roundoff errors

in any prolonged computation it is generally
assumed that the accumulated effect of roundoff 
errors is in some sense statistical.  the purpose of this
paper is to give precise descriptions of certain 
probabilistic models for roundoff error, and then to
describe a series of experiments for testing the 
validity of these 
************************

************************
Document:  CACM-0526.html
************************
************************
Document:  CACM-1599.html
************************


numerical solution of the polynomial equation (algorithm 300 [c2])

cacm may, 
************************

************************
Document:  CACM-2199.html
************************


a sparse matrix package (part i) [f4] (algorithm 408)

cacm april, 1971

mcnamee, j. m.

matrix, sparse matrix, matrix manipulation

5.14

ca710406 jb february 
************************

************************
Document:  CACM-3066.html
************************
************************
Document:  CACM-2903.html
************************


improving programs by the introduction of recursion

a new technique of program transformation,
called "recursion in troduction," is described and 
applied to two algorithms which solve pattern 
************************
s which solve pattern matching problems.
 by using recursion in troduction, algorithms 
which manipulate a 
************************
s 
which manipulate a stack are first translated into
recursive algorithms in which no stack operations 
************************
s in which no stack operations 
occur.  these algorithms are then subjected 
************************
s are then subjected to a second
transformation, a method of recursion elimination 
called "tabulation," to produce programs with a very
efficient running time.  in particular, it is shown 
how the fast linear pattern matching algorithm of knuth,
morris, and pratt can be derived in a few steps 
from a simple nonlinear stack algorithm.

cacm november, 1977

bird, r. s.

program transformation, optimization of programs,
recursion elimination, pattern matching algorithms, 
stacks, computational 
************************

************************
Document:  CACM-0226.html
************************


solution of polynomial equation by
bairstow-hitchcock method (algorithm 3)

cacm february, 1960

************************

************************
Document:  CACM-0179.html
************************


evaluation of the legendre polynomial pn(x) by recursion (algorithm)

cacm june, 1960

galler, 
************************

************************
Document:  CACM-1941.html
************************


f-distribution (algorithm 322 [s14])

cacm january, 1969

field, j. b. f.

fisher's 
************************

************************
Document:  CACM-0884.html
************************


orthogonal polynomial least squares surface fit (algorithm 164)

cacm april, 1963

************************

************************
Document:  CACM-3007.html
************************
************************
Document:  CACM-0764.html
************************


reduction of a matrix containing polynomial elements (algorithm 170)

cacm august, 1963

************************

************************
Document:  CACM-2323.html
************************


toward a general theory of special functions

a list of a number of natural developments
for the field of algebraic manipulation is given. 
 then the 
************************
 is given. 
 then the prospects for a general theory of functions
defined by ordinary differential equations are 
discussed.  the claim is made that recent developments
in mathematics indicate that it should be possible 
to algorithmically generate many properties of solutions
to differential equations.  such a theory is 
preferable to a less general effort to make algebraic
manipulation systems knowledgeable 
************************
 systems knowledgeable about the usual 
special functions (e.g. exponential, hypergeometric).

cacm july, 1972

moses, j.

algebraic manipulation, special functions, 
************************
, special functions, algebraic
simplification, symbolic integration, algebraic 
************************

************************
Document:  CACM-2836.html
************************


weighted derivation trees

the nodes of a weighted derivation tree are associated
with weighting functions over the vocabulary 
of a context-free grammar.  an algorithm is presented
for constructing the optimal derivation tree having 
the same structure as a given weighted derivation tree.
 in addition, the correctness of the algorithm 
is established.  the method may be applied to problems
involving probabilistic parsing or combinatorial 
************************

************************
Document:  CACM-2490.html
************************


efficient algorithms for graph manipulation [h] (algorithm a447)

************************
 [h] (algorithm a447)

efficient algorithms are presented for partitioning

************************
 are presented for partitioning
a graph into connected components, biconnected 
components and simple paths.  the algorithm for partitioning
of a graph into simple paths is iterative 
and each iteration produces a new path between two
vertices already on paths.  (the start vertex can 
be specified dynamically.)  if v is the number of vertices
and e is the number of edges, each algorithm 
requires time and space proportional to max (v,e)
when executed on a random access computer.

cacm june, 1973

hopcroft, j.
tarjan, r.

graphs,analysis of algorithms, graph manipulation

5.32

ca730610 jb january 
************************

************************
Document:  CACM-1893.html
************************


roots of polynomials by a root-squaring
and resultant routine (algorithm 340 [c2])

cacm may, 1969

noltemeier, a.

root finders, roots of polynomial equations, polynomial
zeros, root-squaring operations, graeffe 
method, resultant procedure, subresultant procedure,
testing of roots, acceptance 
************************

************************
Document:  CACM-0928.html
************************
************************
Document:  CACM-0765.html
************************


orthogonal polynomial least squares surface fit (algorithm 164)

cacm august, 1963

************************

************************
Document:  CACM-1397.html
************************


proceedings of the acm symposium on symbolic and algebraic manipulation

the acm symposium on 
************************


the acm symposium on symbolic and algebraic
manipulation brought together over 
************************
 brought together over four hundred 
people interested in programming languages designed
for manipulation of algebraic formulas and symbol 
************************
 formulas and symbol 
strings, in their applications, and in algorithms for
their implementation.  twenty-eight papers were 
presented, followed by a lively panel discussion of
future directions.  evening meetings were arranged 
for several interest groups.  the conference was sponsored
by the acm special interest committee on symbolic 
and algebraic manipulation.  the program committee 
************************

************************
Document:  CACM-0434.html
************************
************************
Document:  CACM-0325.html
************************


numerical solution of the polynomial equation (algorithm 30)

cacm may, 1961

************************

************************
Document:  CACM-0265.html
************************


low level language subroutines for use within fortran

this paper describes some subroutines, coded
in symbolic languages and for use within fortran 
coded programs, to deal with "special arithmetic" (e.g.
multi-precision arithmetic), symbol manipulation, 
bit manipulation and 
************************

************************
Document:  CACM-1586.html
************************


a generalized bairstow algorithm

the bairstow algorithm is generalized to the
case of a polynomial which is itself a linear 
************************

************************
Document:  CACM-1049.html
************************


numerical solution of nonlinear two-point
boundary problems by finite difference methods

solution of nonlinear two-point boundary-value
problems is often an extremely difficult task. 
 quite apart from questions of reality and uniqueness,
there is no established numerical technique for 
this problem.  at present, shooting techniques are the
easiest method of attacking these problems.  when 
these fail, the more difficult method of finite differences
can often be used to obtain a solution.  
this paper gives examples and discusses the finite 
************************

************************
Document:  CACM-2167.html
************************


algebraic simplification: a guide for the perplexed

algebraic simplification is examined first from
the point of view of a user who needs to comprehend 
a large expression, and second from the point of view
of a designer who wants to construct a useful and 
efficient system.  first we describe various techniques
akin to substitution.  these techniques can be 
used to decrease thesize of an expression and make it
more intelligible to a user.  then we delineate 
the spectrum of approaches to the design of automatic simplification
capabilities in an algebraic manipulation 
system.  systems are divided into five types.  each type
provides different facilities for the manipulation 
and simplification of expressions. finally we discuss
some of the theoretical results related to algebraic 
simplification.  we describe several positive results
about the existence of powerful simplification 
algorithms and the number-theoretic 
************************
s and the number-theoretic conjectures on which
they rely.  results about the nonexistence of 
algorithms for certain classes of expressions are included.

cacm august, 1971

moses, j.

algebraic manipulation, algebraic simplification,

************************

************************
Document:  CACM-0180.html
************************


evaluation of the laguerre polynomial ln(x) by recursion (algorithm)

cacm june, 1960

galler, 
************************

************************
Document:  CACM-2385.html
************************


zeros of a complex polynomial [c2] (algorithm a419)

cacm february, 
************************

************************
Document:  CACM-0176.html
************************
************************
Document:  CACM-2516.html
************************
************************
Document:  CACM-0719.html
************************


variable width stacks

character addressable, variable field computers
permit ready establishment and manipulation 
of variable width stacks.  single machine commands may
push variable field items down into such stacks 
or pop them up.  the availability of a variety of field
delimiters allows the machine to push down or 
pop up more than one variable width item with one command.
 since these stacking operations can be made 
the basis of compiler decoding algorithms the proper
use of machines 
************************

************************
Document:  CACM-1763.html
************************


roots of low-order polynomial equations (algorithm 326 [c2])

cacm april, 
************************

************************
Document:  CACM-0181.html
************************


evaluation of the hermite polynomial hn(x) by recursion (algorithm)

cacm june, 1960

galler, 
************************

************************
Document:  CACM-1796.html
************************


index by subject to algorithms, 1969

cacm december, 
************************
s, 1969

cacm december, 1969

this 1969 index is the first supplement to the
index by subject to algorithms, 1960 1968 (comm. 

************************

************************
Document:  CACM-0156.html
************************
************************
Document:  CACM-1595.html
************************


on the computer enumeration of finite topologies

the problem of enumerating the number of topologies
which can be formed from a finite point 
set is considered both theoretically and computationally.
 certain fundamental results are established, 
leading to an algorithm for enumerating finite 
************************

************************
Document:  CACM-0717.html
************************


partitioning algorithms for finite sets

the partitions 
************************

************************
Document:  CACM-0099.html
************************
************************
Document:  CACM-0646.html
************************


inverse of a finite segment of the hilbert matrix (algorithm 50)

cacm january, 1962

************************

************************
Document:  CACM-1450.html
************************


simultaneous displacement of polynomial
roots if real and simple (algorithm 283 [c2])

cacm april, 
************************

************************
Document:  CACM-1644.html
************************
************************
Document:  CACM-2440.html
************************


localization of the roots of a polynomial (algorithm r429)

cacm september, 
************************

************************
Document:  CACM-2164.html
************************


symbolic integration: the stormy decade

three approaches to symbolic integration in the
1960's are described.  the first, from artificial 
intelligence, led to slagle's saint and to a large
degree to moses' sin.  the second, from algebraic 
manipulation, led to manove's implementation 
************************
, led to manove's implementation and to
horowitz' and tobey's reexamination of the hermite 
algorithm for integrating rational functions.  the third,
from mathematics, led to richardson's proof 
of the unsolvability of the problem for a class of functions
and for risch's decision procedure for the 
elementary functionseneralizations of risch's algorithm
to a class of special functions and programs 
for solving differential equations and for finding
the definite integral are also described.

cacm august, 1971

moses, j.

integration, symbolic integration, definite 
************************

************************
Document:  CACM-0842.html
************************


a posteriori bounds on a zero of a polynomial (algorithm 174)

cacm june, 1963

************************

************************
Document:  CACM-2932.html
************************


complexity of computations

the framework for research in the theory of complexity
of computations is described, emphasizing 
the in terrelation between seemingly diverse problems
and methods.  illustrative examples of practical 
and theoretical significance are given.  directions
for new research are discussed.

cacm september, 1977

rabin, m. o.

complexity of computations, algebraic complexity,
in tractable problems, probabilistic algorithms

5.25

ca770901 jb december 
************************

************************
Document:  CACM-3189.html
************************
************************
Document:  CACM-3078.html
************************


analysis of the availability of computer
systems using computer- aided algebra

analytical results, related to the availability
of a computer system constructed of unreliable 
processors, are presented in this paper.  these results
are obtained by using various computer-aided 
algebraic manipulation techniques.  a major 
************************

************************
Document:  CACM-2580.html
************************
************************
Document:  CACM-2850.html
************************


symbolic execution and program testing

this paper describes 
************************


this paper describes the symbolic execution of
programs.  instead of supplying the normal inputs 
to a program (e.g. numbers) one supplies symbols representing
arbitrary values.  the execution proceeds 
as in a normal execution except that values may be symbolic
formulas over the input symbols.  the difficult, 
yet interesting issues arise during the symbolic execution
of conditional branch type statements.  a 
particular system called effigy which provides symbolic
execution for program testing and debugging is 
also 
************************
 and debugging is 
also described.  it interpretively executes programs written
in a simple pl/i style programming language. 
 it includes many standard debugging features, the ability
to manage and to prove things about symbolic 
expressions, a simple program testing manager, and a program

************************
 manager, and a program
verifier.  a brief discussion of the relationship 
between symbolic execution and program proving is also included.

cacm july, 1976

king, j. c.

symbolic execution, program testing, program debugging,

************************

************************
Document:  CACM-1865.html
************************


algol 60 reference language editor (algorithm 268 [r2])

cacm july, 1969

sauer, g.

symbol manipulation

4.49

ca690715 jb february 
************************

************************
Document:  CACM-2681.html
************************
